
' irrlicht wrapper

' This file was automatically generated by CFFI2BMX
' from a CFFI wrapper generated by SWIG

' This is the high-level OOP interface - use this where possible

Import "irrlicht-base.bmx"

SuperStrict

Include "irrlicht-helper.bmx"

Type _irrlicht_Object Abstract
	Field _ptr:Byte Ptr
	Field _del(_:Byte Ptr)
	Function _defaultFree(p:Byte Ptr) Final
	End Function
	Function _getPtr:Byte Ptr(o:_irrlicht_Object) Final
		If o Then Return o._ptr ; Else Return Byte Ptr(0)
	End Function
	Method New()
		_del = _irrlicht_Object._defaultFree
	End Method
	Method Delete()
		_del(_ptr)
	End Method
	Method Compare:Int(with:Object)
		If _irrlicht_Object(with) Then Return _ptr - _irrlicht_Object(with)._ptr ; Else Return with.Compare(self)
	End Method
	Method _withPtr:_irrlicht_Object(_p:Byte Ptr) Final
		_ptr = _p ; Return Self
	End Method
	Method _withDel:_irrlicht_Object(_f:Byte Ptr) Final
		_del = _f ; Return Self
	End Method
End Type

Type IreferenceCounted Extends _irrlicht_Object Abstract
	Method Grab()
		.IReferenceCounted_grab(Self._ptr)
	End Method
	Function Make:IreferenceCounted()
		Local _ret:Byte Ptr = .new_IReferenceCounted()
		Local rval:IreferenceCounted = IreferenceCounted(New _IreferenceCounted._withPtr(_ret)._withDel(delete_IreferenceCounted))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Drop:Int()
		Local _ret:Int = .IReferenceCounted_drop(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetDebugName:Byte Ptr()
		Local _ret:Byte Ptr = .IReferenceCounted_getDebugName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetReferenceCount:Int()
		Local _ret:Int = .IReferenceCounted_getReferenceCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Scolor Extends _irrlicht_Object Abstract
	Method ToOpenGlcolor(_dest:Byte Ptr)
		.SColor_toOpenGLColor(Self._ptr, _dest)
	End Method
	Method GetLuminance:Float()
		Local _ret:Float = .SColor_getLuminance(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Color:Int()
		Local _ret:Int = .SColor_color_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetBlue(_b:Int)
		.SColor_setBlue(Self._ptr, _b)
	End Method
	Method SetGreen(_g:Int)
		.SColor_setGreen(Self._ptr, _g)
	End Method
	Method SetRed(_r:Int)
		.SColor_setRed(Self._ptr, _r)
	End Method
	Function Make:Scolor()
		Local _ret:Byte Ptr = .new_SColor_OVERLOAD_0()
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithARGB:Scolor(_a:Int, _r:Int, _g:Int, _b:Int)
		Local _ret:Byte Ptr = .new_SColor_OVERLOAD_1(_a, _r, _g, _b)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithClr:Scolor(_clr:Int)
		Local _ret:Byte Ptr = .new_SColor_OVERLOAD_2(_clr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Less:Int(_other:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .SColor___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Eq:Int(_other:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .SColor___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ToA1R5G5B5:Short()
		Local _ret:Short = .SColor_toA1R5G5B5(Self._ptr)
		Local rval:Short = _ret ; Return rval
	End Method
	Method GetRed:Int()
		Local _ret:Int = .SColor_getRed(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLightness:Float()
		Local _ret:Float = .SColor_getLightness(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setColor(_color:Int)
		.SColor_color_set(Self._ptr, _color)
	End Method
	Method SetData(_data:Byte Ptr, _format:Int)
		.SColor_setData(Self._ptr, _data, _format)
	End Method
	Method Add:Scolor(_other:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .SColor___add__(Self._ptr, p0)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set(_a:Int, _r:Int, _g:Int, _b:Int)
		.SColor_set_OVERLOAD_0(Self._ptr, _a, _r, _g, _b)
	End Method
	Method SetWithCol(_col:Int)
		.SColor_set_OVERLOAD_1(Self._ptr, _col)
	End Method
	Method GetBlue:Int()
		Local _ret:Int = .SColor_getBlue(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetGreen:Int()
		Local _ret:Int = .SColor_getGreen(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolated:Scolor(_other:Scolor, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .SColor_getInterpolated(Self._ptr, p0, _d)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetData(_data:Byte Ptr, _format:Int)
		.SColor_getData(Self._ptr, _data, _format)
	End Method
	Method nEq:Int(_other:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .SColor___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolatedQuadratic:Scolor(_c1:Scolor, _c2:Scolor, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_c1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_c2)
		Local _ret:Byte Ptr = .SColor_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAlpha:Int()
		Local _ret:Int = .SColor_getAlpha(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAlpha(_a:Int)
		.SColor_setAlpha(Self._ptr, _a)
	End Method
	Method GetAverage:Int()
		Local _ret:Int = .SColor_getAverage(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Scolorf Extends _irrlicht_Object Abstract
	Method SetColorComponentValue(_index:Int, _value:Float)
		.SColorf_setColorComponentValue(Self._ptr, _index, _value)
	End Method
	Method ToScolor:Scolor()
		Local _ret:Byte Ptr = .SColorf_toSColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setR(_r:Float)
		.SColorf_r_set(Self._ptr, _r)
	End Method
	Method setA(_a:Float)
		.SColorf_a_set(Self._ptr, _a)
	End Method
	Function Make:Scolorf()
		Local _ret:Byte Ptr = .new_SColorf_OVERLOAD_0()
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithRGB:Scolorf(_r:Float, _g:Float, _b:Float, _a:Float = -1e100000)
		Local _ret:Byte Ptr
		If _a = -1e100000
			_ret = .new_SColorf_OVERLOAD_2(_r, _g, _b)
		Else
			_ret = .new_SColorf_OVERLOAD_1(_r, _g, _b, _a)
		EndIf
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithC:Scolorf(_c:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_c)
		Local _ret:Byte Ptr = .new_SColorf_OVERLOAD_3(p0)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method GetGreen:Float()
		Local _ret:Float = .SColorf_getGreen(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setB(_b:Float)
		.SColorf_b_set(Self._ptr, _b)
	End Method
	Method GetRed:Float()
		Local _ret:Float = .SColorf_getRed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setG(_g:Float)
		.SColorf_g_set(Self._ptr, _g)
	End Method
	Method GetBlue:Float()
		Local _ret:Float = .SColorf_getBlue(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method R:Float()
		Local _ret:Float = .SColorf_r_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method B:Float()
		Local _ret:Float = .SColorf_b_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method A:Float()
		Local _ret:Float = .SColorf_a_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Set(_rr:Float, _gg:Float, _bb:Float)
		.SColorf_set_OVERLOAD_0(Self._ptr, _rr, _gg, _bb)
	End Method
	Method SetWithAaRrGgBb(_aa:Float, _rr:Float, _gg:Float, _bb:Float)
		.SColorf_set_OVERLOAD_1(Self._ptr, _aa, _rr, _gg, _bb)
	End Method
	Method GetInterpolatedQuadratic:Scolorf(_c1:Scolorf, _c2:Scolorf, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_c1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_c2)
		Local _ret:Byte Ptr = .SColorf_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method G:Float()
		Local _ret:Float = .SColorf_g_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetInterpolated:Scolorf(_other:Scolorf, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .SColorf_getInterpolated(Self._ptr, p0, _d)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAlpha:Float()
		Local _ret:Float = .SColorf_getAlpha(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
End Type

Type ScolorHsl Extends _irrlicht_Object Abstract
	Method Hue:Float()
		Local _ret:Float = .SColorHSL_Hue_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method FromRgb(_color:Scolorf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.SColorHSL_fromRGB(Self._ptr, p0)
	End Method
	Method setHue(_Hue:Float)
		.SColorHSL_Hue_set(Self._ptr, _Hue)
	End Method
	Function MakeWith:ScolorHsl(_h:Float = -1e100000, _s:Float = -1e100000, _l:Float = -1e100000)
		Local _ret:Byte Ptr
		If _h = -1e100000
			_ret = .new_SColorHSL_OVERLOAD_3()
		ElseIf _s = -1e100000
			_ret = .new_SColorHSL_OVERLOAD_2(_h)
		ElseIf _l = -1e100000
			_ret = .new_SColorHSL_OVERLOAD_1(_h, _s)
		Else
			_ret = .new_SColorHSL_OVERLOAD_0(_h, _s, _l)
		EndIf
		Local rval:ScolorHsl = ScolorHsl(New _ScolorHsl._withPtr(_ret)._withDel(delete_ScolorHsl))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Saturation:Float()
		Local _ret:Float = .SColorHSL_Saturation_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Luminance:Float()
		Local _ret:Float = .SColorHSL_Luminance_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method ToRgb(_color:Scolorf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.SColorHSL_toRGB(Self._ptr, p0)
	End Method
	Method setLuminance(_Luminance:Float)
		.SColorHSL_Luminance_set(Self._ptr, _Luminance)
	End Method
	Method setSaturation(_Saturation:Float)
		.SColorHSL_Saturation_set(Self._ptr, _Saturation)
	End Method
End Type

Type SmaterialLayer Extends _irrlicht_Object Abstract
	Method setTextureWrapV(_TextureWrapV:Byte)
		.SMaterialLayer_TextureWrapV_set(Self._ptr, _TextureWrapV)
	End Method
	Method TextureWrapV:Byte()
		Local _ret:Byte = .SMaterialLayer_TextureWrapV_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method setBilinearFilter(_BilinearFilter:Int)
		.SMaterialLayer_BilinearFilter_set(Self._ptr, _BilinearFilter)
	End Method
	Method setTexture(_Texture:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Texture)
		.SMaterialLayer_Texture_set(Self._ptr, p0)
	End Method
	Function Make:SmaterialLayer()
		Local _ret:Byte Ptr = .new_SMaterialLayer_OVERLOAD_0()
		Local rval:SmaterialLayer = SmaterialLayer(New _SmaterialLayer._withPtr(_ret)._withDel(delete_SmaterialLayer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:SmaterialLayer(_other:SmaterialLayer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_SMaterialLayer_OVERLOAD_1(p0)
		Local rval:SmaterialLayer = SmaterialLayer(New _SmaterialLayer._withPtr(_ret)._withDel(delete_SmaterialLayer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method setTrilinearFilter(_TrilinearFilter:Int)
		.SMaterialLayer_TrilinearFilter_set(Self._ptr, _TrilinearFilter)
	End Method
	Method Eq:Int(_b:SmaterialLayer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Int = .SMaterialLayer___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BilinearFilter:Int()
		Local _ret:Int = .SMaterialLayer_BilinearFilter_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTextureMatrix(_mat:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mat)
		.SMaterialLayer_setTextureMatrix(Self._ptr, p0)
	End Method
	Method setAnisotropicFilter(_AnisotropicFilter:Byte)
		.SMaterialLayer_AnisotropicFilter_set(Self._ptr, _AnisotropicFilter)
	End Method
	Method setTextureWrapU(_TextureWrapU:Byte)
		.SMaterialLayer_TextureWrapU_set(Self._ptr, _TextureWrapU)
	End Method
	Method setLODBias(_LODBias:Byte)
		.SMaterialLayer_LODBias_set(Self._ptr, _LODBias)
	End Method
	Method TextureWrapU:Byte()
		Local _ret:Byte = .SMaterialLayer_TextureWrapU_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method Texture:Itexture()
		Local _ret:Byte Ptr = .SMaterialLayer_Texture_get(Self._ptr)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AnisotropicFilter:Byte()
		Local _ret:Byte = .SMaterialLayer_AnisotropicFilter_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method GetTextureMatrix:Matrix4()
		Local _ret:Byte Ptr = .SMaterialLayer_getTextureMatrix_OVERLOAD_0(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_b:SmaterialLayer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Int = .SMaterialLayer___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method _assign:SmaterialLayer(_other:SmaterialLayer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .SMaterialLayer___assign__(Self._ptr, p0)
		Local rval:SmaterialLayer = SmaterialLayer(New _SmaterialLayer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TrilinearFilter:Int()
		Local _ret:Int = .SMaterialLayer_TrilinearFilter_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LODBias:Byte()
		Local _ret:Byte = .SMaterialLayer_LODBias_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
End Type

Type Smaterial Extends _irrlicht_Object Abstract
	Method setGouraudShading(_GouraudShading:Int)
		.SMaterial_GouraudShading_set(Self._ptr, _GouraudShading)
	End Method
	Method Eq:Int(_b:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Int = .SMaterial___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method PolygonOffsetFactor:Byte()
		Local _ret:Byte = .SMaterial_PolygonOffsetFactor_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method GouraudShading:Int()
		Local _ret:Int = .SMaterial_GouraudShading_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method UseMipMaps:Int()
		Local _ret:Int = .SMaterial_UseMipMaps_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method FogEnable:Int()
		Local _ret:Int = .SMaterial_FogEnable_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MaterialType:Int()
		Local _ret:Int = .SMaterial_MaterialType_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setMaterialTypeParam(_MaterialTypeParam:Float)
		.SMaterial_MaterialTypeParam_set(Self._ptr, _MaterialTypeParam)
	End Method
	Method PolygonOffsetDirection:Int()
		Local _ret:Int = .SMaterial_PolygonOffsetDirection_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MaterialTypeParam:Float()
		Local _ret:Float = .SMaterial_MaterialTypeParam_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setPolygonOffsetDirection(_PolygonOffsetDirection:Int)
		.SMaterial_PolygonOffsetDirection_set(Self._ptr, _PolygonOffsetDirection)
	End Method
	Method nEq:Int(_b:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Int = .SMaterial___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setLighting(_Lighting:Int)
		.SMaterial_Lighting_set(Self._ptr, _Lighting)
	End Method
	Method Wireframe:Int()
		Local _ret:Int = .SMaterial_Wireframe_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DiffuseColor:Scolor()
		Local _ret:Byte Ptr = .SMaterial_DiffuseColor_get(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setZWriteEnable(_ZWriteEnable:Int)
		.SMaterial_ZWriteEnable_set(Self._ptr, _ZWriteEnable)
	End Method
	Method IsTransparent:Int()
		Local _ret:Int = .SMaterial_isTransparent(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setBlendOperation(_BlendOperation:Int)
		.SMaterial_BlendOperation_set(Self._ptr, _BlendOperation)
	End Method
	Method GetTextureMatrix:Matrix4(_i:Int)
		Local _ret:Byte Ptr = .SMaterial_getTextureMatrix_OVERLOAD_0(Self._ptr, _i)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTexture:Itexture(_i:Int)
		Local _ret:Byte Ptr = .SMaterial_getTexture(Self._ptr, _i)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TextureLayer:SmaterialLayer()
		Local _ret:Byte Ptr = .SMaterial_TextureLayer_get(Self._ptr)
		Local rval:SmaterialLayer = SmaterialLayer(New _SmaterialLayer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetFlag(_flag:Int, _value:Int)
		.SMaterial_setFlag(Self._ptr, _flag, _value)
	End Method
	Method FrontfaceCulling:Int()
		Local _ret:Int = .SMaterial_FrontfaceCulling_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setSpecularColor(_SpecularColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_SpecularColor)
		.SMaterial_SpecularColor_set(Self._ptr, p0)
	End Method
	Method _assign:Smaterial(_other:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .SMaterial___assign__(Self._ptr, p0)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setPointCloud(_PointCloud:Int)
		.SMaterial_PointCloud_set(Self._ptr, _PointCloud)
	End Method
	Method setColorMask(_ColorMask:Byte)
		.SMaterial_ColorMask_set(Self._ptr, _ColorMask)
	End Method
	Method Lighting:Int()
		Local _ret:Int = .SMaterial_Lighting_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setPolygonOffsetFactor(_PolygonOffsetFactor:Byte)
		.SMaterial_PolygonOffsetFactor_set(Self._ptr, _PolygonOffsetFactor)
	End Method
	Method ZBuffer:Byte()
		Local _ret:Byte = .SMaterial_ZBuffer_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method Shininess:Float()
		Local _ret:Float = .SMaterial_Shininess_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method BackfaceCulling:Int()
		Local _ret:Int = .SMaterial_BackfaceCulling_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setWireframe(_Wireframe:Int)
		.SMaterial_Wireframe_set(Self._ptr, _Wireframe)
	End Method
	Method SetTextureMatrix(_i:Int, _mat:Matrix4)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_mat)
		.SMaterial_setTextureMatrix(Self._ptr, _i, p1)
	End Method
	Method GetFlag:Int(_flag:Int)
		Local _ret:Int = .SMaterial_getFlag(Self._ptr, _flag)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ColorMaterial:Byte()
		Local _ret:Byte = .SMaterial_ColorMaterial_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method SpecularColor:Scolor()
		Local _ret:Byte Ptr = .SMaterial_SpecularColor_get(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setColorMaterial(_ColorMaterial:Byte)
		.SMaterial_ColorMaterial_set(Self._ptr, _ColorMaterial)
	End Method
	Method setUseMipMaps(_UseMipMaps:Int)
		.SMaterial_UseMipMaps_set(Self._ptr, _UseMipMaps)
	End Method
	Method ZWriteEnable:Int()
		Local _ret:Int = .SMaterial_ZWriteEnable_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Thickness:Float()
		Local _ret:Float = .SMaterial_Thickness_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method AntiAliasing:Byte()
		Local _ret:Byte = .SMaterial_AntiAliasing_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method BlendOperation:Int()
		Local _ret:Int = .SMaterial_BlendOperation_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:Smaterial()
		Local _ret:Byte Ptr = .new_SMaterial_OVERLOAD_0()
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret)._withDel(delete_Smaterial))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Smaterial(_other:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_SMaterial_OVERLOAD_1(p0)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret)._withDel(delete_Smaterial))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method setBackfaceCulling(_BackfaceCulling:Int)
		.SMaterial_BackfaceCulling_set(Self._ptr, _BackfaceCulling)
	End Method
	Method setZBuffer(_ZBuffer:Byte)
		.SMaterial_ZBuffer_set(Self._ptr, _ZBuffer)
	End Method
	Method EmissiveColor:Scolor()
		Local _ret:Byte Ptr = .SMaterial_EmissiveColor_get(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ColorMask:Byte()
		Local _ret:Byte = .SMaterial_ColorMask_get(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method MaterialTypeParam2:Float()
		Local _ret:Float = .SMaterial_MaterialTypeParam2_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setThickness(_Thickness:Float)
		.SMaterial_Thickness_set(Self._ptr, _Thickness)
	End Method
	Method setEmissiveColor(_EmissiveColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_EmissiveColor)
		.SMaterial_EmissiveColor_set(Self._ptr, p0)
	End Method
	Method setFrontfaceCulling(_FrontfaceCulling:Int)
		.SMaterial_FrontfaceCulling_set(Self._ptr, _FrontfaceCulling)
	End Method
	Method AmbientColor:Scolor()
		Local _ret:Byte Ptr = .SMaterial_AmbientColor_get(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setMaterialType(_MaterialType:Int)
		.SMaterial_MaterialType_set(Self._ptr, _MaterialType)
	End Method
	Method NormalizeNormals:Int()
		Local _ret:Int = .SMaterial_NormalizeNormals_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method PointCloud:Int()
		Local _ret:Int = .SMaterial_PointCloud_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTexture(_i:Int, _tex:Itexture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_tex)
		.SMaterial_setTexture(Self._ptr, _i, p1)
	End Method
	Method setTextureLayer(_TextureLayer:SmaterialLayer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_TextureLayer)
		.SMaterial_TextureLayer_set(Self._ptr, p0)
	End Method
	Method setFogEnable(_FogEnable:Int)
		.SMaterial_FogEnable_set(Self._ptr, _FogEnable)
	End Method
	Method setAntiAliasing(_AntiAliasing:Byte)
		.SMaterial_AntiAliasing_set(Self._ptr, _AntiAliasing)
	End Method
	Method setShininess(_Shininess:Float)
		.SMaterial_Shininess_set(Self._ptr, _Shininess)
	End Method
	Method setNormalizeNormals(_NormalizeNormals:Int)
		.SMaterial_NormalizeNormals_set(Self._ptr, _NormalizeNormals)
	End Method
	Method setMaterialTypeParam2(_MaterialTypeParam2:Float)
		.SMaterial_MaterialTypeParam2_set(Self._ptr, _MaterialTypeParam2)
	End Method
	Method setDiffuseColor(_DiffuseColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_DiffuseColor)
		.SMaterial_DiffuseColor_set(Self._ptr, p0)
	End Method
	Method setAmbientColor(_AmbientColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_AmbientColor)
		.SMaterial_AmbientColor_set(Self._ptr, p0)
	End Method
End Type

Type ImeshBuffer Extends IreferenceCounted Abstract
	Method GetVertices:Byte Ptr()
		Local _ret:Byte Ptr = .IMeshBuffer_getVertices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetIndexType:Int()
		Local _ret:Int = .IMeshBuffer_getIndexType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDirty(_buffer:Int = -2147483648)
		If _buffer = -2147483648
			.IMeshBuffer_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.IMeshBuffer_setDirty_OVERLOAD_0(Self._ptr, _buffer)
		EndIf
	End Method
	Method GetHardwareMappingHintIndex:Int()
		Local _ret:Int = .IMeshBuffer_getHardwareMappingHint_Index(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTcoords:Vector2df(_i:Int)
		Local _ret:Byte Ptr = .IMeshBuffer_getTCoords_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetBoundingBox(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		.IMeshBuffer_setBoundingBox(Self._ptr, p0)
	End Method
	Method SetHardwareMappingHint(_newMappingHint:Int, _buffer:Int = -2147483648)
		If _buffer = -2147483648
			.IMeshBuffer_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _newMappingHint)
		Else
			.IMeshBuffer_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _newMappingHint, _buffer)
		EndIf
	End Method
	Method RecalculateBoundingBox()
		.IMeshBuffer_recalculateBoundingBox(Self._ptr)
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .IMeshBuffer_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetChangedIdVertex:Int()
		Local _ret:Int = .IMeshBuffer_getChangedID_Vertex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .IMeshBuffer_getBoundingBox(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPosition:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .IMeshBuffer_getPosition_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVertexCount:Int()
		Local _ret:Int = .IMeshBuffer_getVertexCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndices:Byte Ptr()
		Local _ret:Byte Ptr = .IMeshBuffer_getIndices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetIndexCount:Int()
		Local _ret:Int = .IMeshBuffer_getIndexCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Append(_vertices:Byte Ptr, _numVertices:Int, _indices:Byte Ptr, _numIndices:Int)
		.IMeshBuffer_append_OVERLOAD_0(Self._ptr, _vertices, _numVertices, _indices, _numIndices)
	End Method
	Method AppendWithOther(_other:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.IMeshBuffer_append_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method GetNormal:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .IMeshBuffer_getNormal_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetHardwareMappingHintVertex:Int()
		Local _ret:Int = .IMeshBuffer_getHardwareMappingHint_Vertex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVertexType:Int()
		Local _ret:Int = .IMeshBuffer_getVertexType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetChangedIdIndex:Int()
		Local _ret:Int = .IMeshBuffer_getChangedID_Index(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IvertexBuffer Extends IreferenceCounted Abstract
	Method Pointer:Byte Ptr()
		Local _ret:Byte Ptr = .IVertexBuffer_pointer(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetType:Int()
		Local _ret:Int = .IVertexBuffer_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetChangedId:Int()
		Local _ret:Int = .IVertexBuffer_getChangedID(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .IVertexBuffer_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLast:Byte Ptr()
		Local _ret:Byte Ptr = .IVertexBuffer_getLast(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method PushBack(_element:Byte Ptr)
		.IVertexBuffer_push_back(Self._ptr, _element)
	End Method
	Method ARef:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IVertexBuffer___aref__(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Stride:Int()
		Local _ret:Int = .IVertexBuffer_stride(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetHardwareMappingHint:Int()
		Local _ret:Int = .IVertexBuffer_getHardwareMappingHint(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Reallocate(_new_size:Int)
		.IVertexBuffer_reallocate(Self._ptr, _new_size)
	End Method
	Method SetDirty()
		.IVertexBuffer_setDirty(Self._ptr)
	End Method
	Method SetType(_vertexType:Int)
		.IVertexBuffer_setType(Self._ptr, _vertexType)
	End Method
	Method SetUsed(_usedNow:Int)
		.IVertexBuffer_set_used(Self._ptr, _usedNow)
	End Method
	Method GetData:Byte Ptr()
		Local _ret:Byte Ptr = .IVertexBuffer_getData(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetHardwareMappingHint(_NewMappingHint:Int)
		.IVertexBuffer_setHardwareMappingHint(Self._ptr, _NewMappingHint)
	End Method
	Method AllocatedSize:Int()
		Local _ret:Int = .IVertexBuffer_allocated_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IindexBuffer Extends IreferenceCounted Abstract
	Method Pointer:Byte Ptr()
		Local _ret:Byte Ptr = .IIndexBuffer_pointer(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetType:Int()
		Local _ret:Int = .IIndexBuffer_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetChangedId:Int()
		Local _ret:Int = .IIndexBuffer_getChangedID(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .IIndexBuffer_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLast:Int()
		Local _ret:Int = .IIndexBuffer_getLast(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetHardwareMappingHint(_NewMappingHint:Int)
		.IIndexBuffer_setHardwareMappingHint(Self._ptr, _NewMappingHint)
	End Method
	Method PushBack(_element:Int Ptr)
		.IIndexBuffer_push_back(Self._ptr, _element)
	End Method
	Method ARef:Int(_index:Int)
		Local _ret:Int = .IIndexBuffer___aref__(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Stride:Int()
		Local _ret:Int = .IIndexBuffer_stride(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetHardwareMappingHint:Int()
		Local _ret:Int = .IIndexBuffer_getHardwareMappingHint(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Reallocate(_new_size:Int)
		.IIndexBuffer_reallocate(Self._ptr, _new_size)
	End Method
	Method SetDirty()
		.IIndexBuffer_setDirty(Self._ptr)
	End Method
	Method SetType(_IndexType:Int)
		.IIndexBuffer_setType(Self._ptr, _IndexType)
	End Method
	Method SetUsed(_usedNow:Int)
		.IIndexBuffer_set_used(Self._ptr, _usedNow)
	End Method
	Method GetData:Byte Ptr()
		Local _ret:Byte Ptr = .IIndexBuffer_getData(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method AllocatedSize:Int()
		Local _ret:Int = .IIndexBuffer_allocated_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetValue(_index:Int, _value:Int)
		.IIndexBuffer_setValue(Self._ptr, _index, _value)
	End Method
End Type

Type IdynamicMeshBuffer Extends ImeshBuffer Abstract
	Method GetTcoords:Vector2df(_i:Int)
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getTCoords_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Append(_vertices:Byte Ptr, _numVertices:Int, _indices:Byte Ptr, _numIndices:Int)
		.IDynamicMeshBuffer_append_OVERLOAD_0(Self._ptr, _vertices, _numVertices, _indices, _numIndices)
	End Method
	Method AppendWithOther(_other:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.IDynamicMeshBuffer_append_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method GetVertices:Byte Ptr()
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getVertices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetNormal:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getNormal_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetIndexBuffer:IindexBuffer()
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getIndexBuffer(Self._ptr)
		Local rval:IindexBuffer = IindexBuffer(New _IindexBuffer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetHardwareMappingHint(_NewMappingHint:Int, _Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.IDynamicMeshBuffer_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _NewMappingHint)
		Else
			.IDynamicMeshBuffer_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _NewMappingHint, _Buffer)
		EndIf
	End Method
	Method SetVertexBuffer(_vertexBuffer:IvertexBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexBuffer)
		.IDynamicMeshBuffer_setVertexBuffer(Self._ptr, p0)
	End Method
	Method GetPosition:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getPosition_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDirty(_Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.IDynamicMeshBuffer_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.IDynamicMeshBuffer_setDirty_OVERLOAD_0(Self._ptr, _Buffer)
		EndIf
	End Method
	Method GetVertexBuffer:IvertexBuffer()
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getVertexBuffer(Self._ptr)
		Local rval:IvertexBuffer = IvertexBuffer(New _IvertexBuffer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetIndices:Byte Ptr()
		Local _ret:Byte Ptr = .IDynamicMeshBuffer_getIndices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetIndexBuffer(_indexBuffer:IindexBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_indexBuffer)
		.IDynamicMeshBuffer_setIndexBuffer(Self._ptr, p0)
	End Method
End Type

Type CvertexBuffer Extends IvertexBuffer Abstract
	Method setChangedID(_ChangedID:Int)
		.CVertexBuffer_ChangedID_set(Self._ptr, _ChangedID)
	End Method
	Function MakeWithVertexType:CvertexBuffer(_vertexType:Int)
		Local _ret:Byte Ptr = .new_CVertexBuffer_OVERLOAD_0(_vertexType)
		Local rval:CvertexBuffer = CvertexBuffer(New _CvertexBuffer._withPtr(_ret)._withDel(delete_CvertexBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithVertexBufferCopy:CvertexBuffer(_VertexBufferCopy:IvertexBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_VertexBufferCopy)
		Local _ret:Byte Ptr = .new_CVertexBuffer_OVERLOAD_1(p0)
		Local rval:CvertexBuffer = CvertexBuffer(New _CvertexBuffer._withPtr(_ret)._withDel(delete_CvertexBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method MappingHint:Int()
		Local _ret:Int = .CVertexBuffer_MappingHint_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setMappingHint(_MappingHint:Int)
		.CVertexBuffer_MappingHint_set(Self._ptr, _MappingHint)
	End Method
	Method ChangedID:Int()
		Local _ret:Int = .CVertexBuffer_ChangedID_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type CindexBuffer Extends IindexBuffer Abstract
	Method setChangedID(_ChangedID:Int)
		.CIndexBuffer_ChangedID_set(Self._ptr, _ChangedID)
	End Method
	Function MakeWithIndexType:CindexBuffer(_IndexType:Int)
		Local _ret:Byte Ptr = .new_CIndexBuffer_OVERLOAD_0(_IndexType)
		Local rval:CindexBuffer = CindexBuffer(New _CindexBuffer._withPtr(_ret)._withDel(delete_CindexBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithIndexBufferCopy:CindexBuffer(_IndexBufferCopy:IindexBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_IndexBufferCopy)
		Local _ret:Byte Ptr = .new_CIndexBuffer_OVERLOAD_1(p0)
		Local rval:CindexBuffer = CindexBuffer(New _CindexBuffer._withPtr(_ret)._withDel(delete_CindexBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method MappingHint:Int()
		Local _ret:Int = .CIndexBuffer_MappingHint_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setMappingHint(_MappingHint:Int)
		.CIndexBuffer_MappingHint_set(Self._ptr, _MappingHint)
	End Method
	Method ChangedID:Int()
		Local _ret:Int = .CIndexBuffer_ChangedID_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type CdynamicMeshBuffer Extends IdynamicMeshBuffer Abstract
	Method Material:Smaterial()
		Local _ret:Byte Ptr = .CDynamicMeshBuffer_Material_get(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function MakeWithVertexTypeIndexType:CdynamicMeshBuffer(_vertexType:Int, _indexType:Int)
		Local _ret:Byte Ptr = .new_CDynamicMeshBuffer(_vertexType, _indexType)
		Local rval:CdynamicMeshBuffer = CdynamicMeshBuffer(New _CdynamicMeshBuffer._withPtr(_ret)._withDel(delete_CdynamicMeshBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method setBoundingBox(_BoundingBox:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_BoundingBox)
		.CDynamicMeshBuffer_BoundingBox_set(Self._ptr, p0)
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .CDynamicMeshBuffer_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setMaterial(_Material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Material)
		.CDynamicMeshBuffer_Material_set(Self._ptr, p0)
	End Method
	Method BoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .CDynamicMeshBuffer_BoundingBox_get(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Imesh Extends IreferenceCounted Abstract
	Method SetBoundingBox(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		.IMesh_setBoundingBox(Self._ptr, p0)
	End Method
	Method SetDirty(_buffer:Int = -2147483648)
		If _buffer = -2147483648
			.IMesh_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.IMesh_setDirty_OVERLOAD_0(Self._ptr, _buffer)
		EndIf
	End Method
	Method GetMeshBufferCount:Int()
		Local _ret:Int = .IMesh_getMeshBufferCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .IMesh_getBoundingBox(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshBuffer:ImeshBuffer(_nr:Int)
		Local _ret:Byte Ptr = .IMesh_getMeshBuffer_OVERLOAD_0(Self._ptr, _nr)
		Local rval:ImeshBuffer = ImeshBuffer(New _ImeshBuffer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshBufferWithMaterial:ImeshBuffer(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Byte Ptr = .IMesh_getMeshBuffer_OVERLOAD_1(Self._ptr, p0)
		Local rval:ImeshBuffer = ImeshBuffer(New _ImeshBuffer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetHardwareMappingHint(_newMappingHint:Int, _buffer:Int = -2147483648)
		If _buffer = -2147483648
			.IMesh_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _newMappingHint)
		Else
			.IMesh_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _newMappingHint, _buffer)
		EndIf
	End Method
	Method SetMaterialFlag(_flag:Int, _newvalue:Int)
		.IMesh_setMaterialFlag(Self._ptr, _flag, _newvalue)
	End Method
End Type

Type IanimatedMesh Extends Imesh Abstract
	Method GetMesh:Imesh(_frame:Int, _detailLevel:Int = -2147483648, _startFrameLoop:Int = -2147483648, _endFrameLoop:Int = -2147483648)
		Local _ret:Byte Ptr
		If _detailLevel = -2147483648
			_ret = .IAnimatedMesh_getMesh_OVERLOAD_3(Self._ptr, _frame)
		ElseIf _startFrameLoop = -2147483648
			_ret = .IAnimatedMesh_getMesh_OVERLOAD_2(Self._ptr, _frame, _detailLevel)
		ElseIf _endFrameLoop = -2147483648
			_ret = .IAnimatedMesh_getMesh_OVERLOAD_1(Self._ptr, _frame, _detailLevel, _startFrameLoop)
		Else
			_ret = .IAnimatedMesh_getMesh_OVERLOAD_0(Self._ptr, _frame, _detailLevel, _startFrameLoop, _endFrameLoop)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshType:Int()
		Local _ret:Int = .IAnimatedMesh_getMeshType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFrameCount:Int()
		Local _ret:Int = .IAnimatedMesh_getFrameCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAnimationSpeed:Float()
		Local _ret:Float = .IAnimatedMesh_getAnimationSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetAnimationSpeed(_fps:Float)
		.IAnimatedMesh_setAnimationSpeed(Self._ptr, _fps)
	End Method
End Type

Type IanimatedMeshMd2 Extends IanimatedMesh Abstract
	Method GetAnimationName:Byte Ptr(_nr:Int)
		Local _ret:Byte Ptr = .IAnimatedMeshMD2_getAnimationName(Self._ptr, _nr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAnimationCount:Int()
		Local _ret:Int = .IAnimatedMeshMD2_getAnimationCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFrameLoop(_l:Int, _outBegin:Byte Ptr, _outEnd:Byte Ptr, _outFPS:Byte Ptr)
		.IAnimatedMeshMD2_getFrameLoop_OVERLOAD_0(Self._ptr, _l, _outBegin, _outEnd, _outFPS)
	End Method
	Method GetFrameLoopWithNameOutBeginOutEndOutFPS:Int(_name:Byte Ptr, _outBegin:Byte Ptr, _outEnd:Byte Ptr, _outFPS:Byte Ptr)
		Local _ret:Int = .IAnimatedMeshMD2_getFrameLoop_OVERLOAD_1(Self._ptr, _name, _outBegin, _outEnd, _outFPS)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IfileReadCallBack Extends _irrlicht_Object Abstract
	Method Read:Int(_buffer:Byte Ptr, _sizeToRead:Int)
		Local _ret:Int = .IFileReadCallBack_read(Self._ptr, _buffer, _sizeToRead)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSize:Int()
		Local _ret:Int = .IFileReadCallBack_getSize(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Ixmlbase Extends _irrlicht_Object Abstract
	Function Make:Ixmlbase()
		Local _ret:Byte Ptr = .new_IXMLBase()
		Local rval:Ixmlbase = Ixmlbase(New _Ixmlbase._withPtr(_ret)._withDel(delete_Ixmlbase))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type IreadFile Extends IreferenceCounted Abstract
	Method GetSize:Int()
		Local _ret:Int = .IReadFile_getSize(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Seek:Int(_finalPos:Int, _relativeMovement:Int = -2147483648)
		Local _ret:Int
		If _relativeMovement = -2147483648
			_ret = .IReadFile_seek_OVERLOAD_1(Self._ptr, _finalPos)
		Else
			_ret = .IReadFile_seek_OVERLOAD_0(Self._ptr, _finalPos, _relativeMovement)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileName:Path()
		Local _ret:Byte Ptr = .IReadFile_getFileName(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPos:Int()
		Local _ret:Int = .IReadFile_getPos(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Read:Int(_buffer:Byte Ptr, _sizeToRead:Int)
		Local _ret:Int = .IReadFile_read(Self._ptr, _buffer, _sizeToRead)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IfileList Extends IreferenceCounted Abstract
	Method GetFileCount:Int()
		Local _ret:Int = .IFileList_getFileCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsDirectory:Int(_index:Int)
		Local _ret:Int = .IFileList_isDirectory(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFullFileName:Path(_index:Int)
		Local _ret:Byte Ptr = .IFileList_getFullFileName(Self._ptr, _index)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddItem:Int(_fullPath:Path, _offset:Int, _size:Int, _isDirectory:Int, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_fullPath)
		Local _ret:Int
		If _id = -2147483648
			_ret = .IFileList_addItem_OVERLOAD_1(Self._ptr, p0, _offset, _size, _isDirectory)
		Else
			_ret = .IFileList_addItem_OVERLOAD_0(Self._ptr, p0, _offset, _size, _isDirectory, _id)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileOffset:Int(_index:Int)
		Local _ret:Int = .IFileList_getFileOffset(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPath:Path()
		Local _ret:Byte Ptr = .IFileList_getPath(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetId:Int(_index:Int)
		Local _ret:Int = .IFileList_getID(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method FindFile:Int(_filename:Path, _isFolder:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int
		If _isFolder = -2147483648
			_ret = .IFileList_findFile_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IFileList_findFile_OVERLOAD_0(Self._ptr, p0, _isFolder)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileSize:Int(_index:Int)
		Local _ret:Int = .IFileList_getFileSize(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileName:Path(_index:Int)
		Local _ret:Byte Ptr = .IFileList_getFileName(Self._ptr, _index)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Sort()
		.IFileList_sort(Self._ptr)
	End Method
End Type

Type IfileArchive Extends IreferenceCounted Abstract
	Method GetType:Int()
		Local _ret:Int = .IFileArchive_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileList:IfileList()
		Local _ret:Byte Ptr = .IFileArchive_getFileList(Self._ptr)
		Local rval:IfileList = IfileList(New _IfileList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Password:String()
		Local _ret:Byte Ptr = .IFileArchive_Password_get(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method setPassword(_Password:String)
		Local cs0:Byte Ptr = _Password.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		.IFileArchive_Password_set(Self._ptr, is0)
		MemFree cs0 ; delete_path is0
	End Method
	Method CreateAndOpenFile:IreadFile(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileArchive_createAndOpenFile_OVERLOAD_0(Self._ptr, p0)
		Local rval:IreadFile = IreadFile(New _IreadFile._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateAndOpenFileWithIndex:IreadFile(_index:Int)
		Local _ret:Byte Ptr = .IFileArchive_createAndOpenFile_OVERLOAD_1(Self._ptr, _index)
		Local rval:IreadFile = IreadFile(New _IreadFile._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IarchiveLoader Extends IreferenceCounted Abstract
	Method CreateArchive:IfileArchive(_filename:Path, _ignoreCase:Int, _ignorePaths:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IArchiveLoader_createArchive_OVERLOAD_0(Self._ptr, p0, _ignoreCase, _ignorePaths)
		Local rval:IfileArchive = IfileArchive(New _IfileArchive._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateArchiveWithFileIgnoreCaseIgnorePaths:IfileArchive(_file:IreadFile, _ignoreCase:Int, _ignorePaths:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IArchiveLoader_createArchive_OVERLOAD_1(Self._ptr, p0, _ignoreCase, _ignorePaths)
		Local rval:IfileArchive = IfileArchive(New _IfileArchive._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsAloadableFileFormat:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IArchiveLoader_isALoadableFileFormat_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsAloadableFileFormatWithFile:Int(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Int = .IArchiveLoader_isALoadableFileFormat_OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsAloadableFileFormatWithFileType:Int(_fileType:Int)
		Local _ret:Int = .IArchiveLoader_isALoadableFileFormat_OVERLOAD_2(Self._ptr, _fileType)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IfileSystem Extends IreferenceCounted Abstract
	Method ExistFile:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IFileSystem_existFile(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method FlattenFilename:Path(_directory:Path, _root:Path = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_directory)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_root)
		Local _ret:Byte Ptr
		If _root = Null
			_ret = .IFileSystem_flattenFilename_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IFileSystem_flattenFilename_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRelativeFilename:Path(_filename:Path, _directory:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_directory)
		Local _ret:Byte Ptr = .IFileSystem_getRelativeFilename(Self._ptr, p0, p1)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddFileArchive:Int(_filename:Path, _ignoreCase:Int = -2147483648, _ignorePaths:Int = -2147483648, _archiveType:Int = -2147483648, _password:String = Null, _retArchive:IfileArchive = Null)
		Local cs4:Byte Ptr = _password.ToCString(), is4:Byte Ptr = new_fromCString_OVERLOAD_1(cs4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_retArchive)
		Local _ret:Int
		If _ignoreCase = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_5(Self._ptr, p0)
		ElseIf _ignorePaths = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_4(Self._ptr, p0, _ignoreCase)
		ElseIf _archiveType = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_3(Self._ptr, p0, _ignoreCase, _ignorePaths)
		ElseIf _password = Null
			_ret = .IFileSystem_addFileArchive_OVERLOAD_2(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType)
		ElseIf _retArchive = Null
			_ret = .IFileSystem_addFileArchive_OVERLOAD_1(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType, is4)
		Else
			_ret = .IFileSystem_addFileArchive_OVERLOAD_0(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType, is4, p5)
		EndIf
		MemFree cs4 ; delete_path is4
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddFileArchiveWithFile:Int(_file:IreadFile, _ignoreCase:Int = -2147483648, _ignorePaths:Int = -2147483648, _archiveType:Int = -2147483648, _password:String = Null, _retArchive:IfileArchive = Null)
		Local cs4:Byte Ptr = _password.ToCString(), is4:Byte Ptr = new_fromCString_OVERLOAD_1(cs4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_retArchive)
		Local _ret:Int
		If _ignoreCase = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_11(Self._ptr, p0)
		ElseIf _ignorePaths = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_10(Self._ptr, p0, _ignoreCase)
		ElseIf _archiveType = -2147483648
			_ret = .IFileSystem_addFileArchive_OVERLOAD_9(Self._ptr, p0, _ignoreCase, _ignorePaths)
		ElseIf _password = Null
			_ret = .IFileSystem_addFileArchive_OVERLOAD_8(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType)
		ElseIf _retArchive = Null
			_ret = .IFileSystem_addFileArchive_OVERLOAD_7(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType, is4)
		Else
			_ret = .IFileSystem_addFileArchive_OVERLOAD_6(Self._ptr, p0, _ignoreCase, _ignorePaths, _archiveType, is4, p5)
		EndIf
		MemFree cs4 ; delete_path is4
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddFileArchiveWithArchive:Int(_archive:IfileArchive)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_archive)
		Local _ret:Int = .IFileSystem_addFileArchive_OVERLOAD_12(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileArchiveCount:Int()
		Local _ret:Int = .IFileSystem_getFileArchiveCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateXmlwriter:Ixmlwriter(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_createXMLWriter_OVERLOAD_0(Self._ptr, p0)
		Local rval:Ixmlwriter = Ixmlwriter(New _Ixmlwriter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateXmlwriterWithFile:Ixmlwriter(_file:IwriteFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IFileSystem_createXMLWriter_OVERLOAD_1(Self._ptr, p0)
		Local rval:Ixmlwriter = Ixmlwriter(New _Ixmlwriter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddZipFileArchive:Int(_filename:Byte Ptr, _ignoreCase:Int = -2147483648, _ignorePaths:Int = -2147483648)
		Local _ret:Int
		If _ignoreCase = -2147483648
			_ret = .IFileSystem_addZipFileArchive_OVERLOAD_2(Self._ptr, _filename)
		ElseIf _ignorePaths = -2147483648
			_ret = .IFileSystem_addZipFileArchive_OVERLOAD_1(Self._ptr, _filename, _ignoreCase)
		Else
			_ret = .IFileSystem_addZipFileArchive_OVERLOAD_0(Self._ptr, _filename, _ignoreCase, _ignorePaths)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAbsolutePath:Path(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_getAbsolutePath(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateAndOpenFile:IreadFile(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_createAndOpenFile(Self._ptr, p0)
		Local rval:IreadFile = IreadFile(New _IreadFile._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateMemoryWriteFile:IwriteFile(_memory:Byte Ptr, _len:Int, _fileName:Path, _deleteMemoryWhenDropped:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_fileName)
		Local _ret:Byte Ptr
		If _deleteMemoryWhenDropped = -2147483648
			_ret = .IFileSystem_createMemoryWriteFile_OVERLOAD_1(Self._ptr, _memory, _len, p2)
		Else
			_ret = .IFileSystem_createMemoryWriteFile_OVERLOAD_0(Self._ptr, _memory, _len, p2, _deleteMemoryWhenDropped)
		EndIf
		Local rval:IwriteFile = IwriteFile(New _IwriteFile._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateEmptyAttributes:Iattributes(_driver:IvideoDriver = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_driver)
		Local _ret:Byte Ptr
		If _driver = Null
			_ret = .IFileSystem_createEmptyAttributes_OVERLOAD_1(Self._ptr)
		Else
			_ret = .IFileSystem_createEmptyAttributes_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:Iattributes = Iattributes(New _Iattributes._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddArchiveLoader(_loader:IarchiveLoader)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_loader)
		.IFileSystem_addArchiveLoader(Self._ptr, p0)
	End Method
	Method CreateEmptyFileList:IfileList(_path:Path, _ignoreCase:Int, _ignorePaths:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_path)
		Local _ret:Byte Ptr = .IFileSystem_createEmptyFileList(Self._ptr, p0, _ignoreCase, _ignorePaths)
		Local rval:IfileList = IfileList(New _IfileList._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MoveFileArchive:Int(_sourceIndex:Int, _relative:Int)
		Local _ret:Int = .IFileSystem_moveFileArchive(Self._ptr, _sourceIndex, _relative)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateXmlreaderUtf8:Byte Ptr(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_createXMLReaderUTF8_OVERLOAD_0(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method CreateXmlreaderUtf8WithFile:Byte Ptr(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IFileSystem_createXMLReaderUTF8_OVERLOAD_1(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetArchiveLoader:IarchiveLoader(_index:Int)
		Local _ret:Byte Ptr = .IFileSystem_getArchiveLoader(Self._ptr, _index)
		Local rval:IarchiveLoader = IarchiveLoader(New _IarchiveLoader._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFileArchive:IfileArchive(_index:Int)
		Local _ret:Byte Ptr = .IFileSystem_getFileArchive(Self._ptr, _index)
		Local rval:IfileArchive = IfileArchive(New _IfileArchive._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddFolderFileArchive:Int(_filename:Byte Ptr, _ignoreCase:Int = -2147483648, _ignorePaths:Int = -2147483648)
		Local _ret:Int
		If _ignoreCase = -2147483648
			_ret = .IFileSystem_addFolderFileArchive_OVERLOAD_2(Self._ptr, _filename)
		ElseIf _ignorePaths = -2147483648
			_ret = .IFileSystem_addFolderFileArchive_OVERLOAD_1(Self._ptr, _filename, _ignoreCase)
		Else
			_ret = .IFileSystem_addFolderFileArchive_OVERLOAD_0(Self._ptr, _filename, _ignoreCase, _ignorePaths)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddPakFileArchive:Int(_filename:Byte Ptr, _ignoreCase:Int = -2147483648, _ignorePaths:Int = -2147483648)
		Local _ret:Int
		If _ignoreCase = -2147483648
			_ret = .IFileSystem_addPakFileArchive_OVERLOAD_2(Self._ptr, _filename)
		ElseIf _ignorePaths = -2147483648
			_ret = .IFileSystem_addPakFileArchive_OVERLOAD_1(Self._ptr, _filename, _ignoreCase)
		Else
			_ret = .IFileSystem_addPakFileArchive_OVERLOAD_0(Self._ptr, _filename, _ignoreCase, _ignorePaths)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileBasename:Path(_filename:Path, _keepExtension:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr
		If _keepExtension = -2147483648
			_ret = .IFileSystem_getFileBasename_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IFileSystem_getFileBasename_OVERLOAD_0(Self._ptr, p0, _keepExtension)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateAndWriteFile:IwriteFile(_filename:Path, _append:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr
		If _append = -2147483648
			_ret = .IFileSystem_createAndWriteFile_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IFileSystem_createAndWriteFile_OVERLOAD_0(Self._ptr, p0, _append)
		EndIf
		Local rval:IwriteFile = IwriteFile(New _IwriteFile._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateFileList:IfileList()
		Local _ret:Byte Ptr = .IFileSystem_createFileList(Self._ptr)
		Local rval:IfileList = IfileList(New _IfileList._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetFileListSystem:Int(_listType:Int)
		Local _ret:Int = .IFileSystem_setFileListSystem(Self._ptr, _listType)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ChangeWorkingDirectoryTo:Int(_newDirectory:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newDirectory)
		Local _ret:Int = .IFileSystem_changeWorkingDirectoryTo(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetWorkingDirectory:Path()
		Local _ret:Byte Ptr = .IFileSystem_getWorkingDirectory(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetArchiveLoaderCount:Int()
		Local _ret:Int = .IFileSystem_getArchiveLoaderCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFileDir:Path(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_getFileDir(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RemoveFileArchive:Int(_index:Int)
		Local _ret:Int = .IFileSystem_removeFileArchive_OVERLOAD_0(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveFileArchiveWithFilename:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IFileSystem_removeFileArchive_OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveFileArchiveWithArchive:Int(_archive:IfileArchive)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_archive)
		Local _ret:Int = .IFileSystem_removeFileArchive_OVERLOAD_2(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateXmlreader:Byte Ptr(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IFileSystem_createXMLReader_OVERLOAD_0(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method CreateXmlreaderWithFile:Byte Ptr(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IFileSystem_createXMLReader_OVERLOAD_1(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type Iimage Extends IreferenceCounted Abstract
	Method GetDimension:Dimension2du()
		Local _ret:Byte Ptr = .IImage_getDimension(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAlphaMask:Int()
		Local _ret:Int = .IImage_getAlphaMask(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBitsPerPixel:Int()
		Local _ret:Int = .IImage_getBitsPerPixel(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBytesPerPixel:Int()
		Local _ret:Int = .IImage_getBytesPerPixel(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CopyTo(_target:Iimage, _pos:Vector2di = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		If _pos = Null
			.IImage_copyTo_OVERLOAD_1(Self._ptr, p0)
		Else
			.IImage_copyTo_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
	End Method
	Method CopyToWithTargetPosSourceRect(_target:Iimage, _pos:Vector2di, _sourceRect:Recti, _clipRect:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_sourceRect)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		If _clipRect = Null
			.IImage_copyTo_OVERLOAD_3(Self._ptr, p0, p1, p2)
		Else
			.IImage_copyTo_OVERLOAD_2(Self._ptr, p0, p1, p2, p3)
		EndIf
	End Method
	Method GetImageDataSizeInPixels:Int()
		Local _ret:Int = .IImage_getImageDataSizeInPixels(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetColorFormat:Int()
		Local _ret:Int = .IImage_getColorFormat(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetGreenMask:Int()
		Local _ret:Int = .IImage_getGreenMask(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRedMask:Int()
		Local _ret:Int = .IImage_getRedMask(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Lock:Byte Ptr()
		Local _ret:Byte Ptr = .IImage_lock(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method CopyToWithAlpha(_target:Iimage, _pos:Vector2di, _sourceRect:Recti, _color:Scolor, _clipRect:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_sourceRect)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		If _clipRect = Null
			.IImage_copyToWithAlpha_OVERLOAD_1(Self._ptr, p0, p1, p2, p3)
		Else
			.IImage_copyToWithAlpha_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, p4)
		EndIf
	End Method
	Method CopyToScalingBoxFilter(_target:Iimage, _bias:Int = -2147483648, _blend:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_target)
		If _bias = -2147483648
			.IImage_copyToScalingBoxFilter_OVERLOAD_2(Self._ptr, p0)
		ElseIf _blend = -2147483648
			.IImage_copyToScalingBoxFilter_OVERLOAD_1(Self._ptr, p0, _bias)
		Else
			.IImage_copyToScalingBoxFilter_OVERLOAD_0(Self._ptr, p0, _bias, _blend)
		EndIf
	End Method
	Method Unlock()
		.IImage_unlock(Self._ptr)
	End Method
	Method CopyToScaling(_target:Byte Ptr, _width:Int, _height:Int, _format:Int = -2147483648, _pitch:Int = -2147483648)
		If _format = -2147483648
			.IImage_copyToScaling_OVERLOAD_2(Self._ptr, _target, _width, _height)
		ElseIf _pitch = -2147483648
			.IImage_copyToScaling_OVERLOAD_1(Self._ptr, _target, _width, _height, _format)
		Else
			.IImage_copyToScaling_OVERLOAD_0(Self._ptr, _target, _width, _height, _format, _pitch)
		EndIf
	End Method
	Method CopyToScalingWithTarget(_target:Iimage)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_target)
		.IImage_copyToScaling_OVERLOAD_3(Self._ptr, p0)
	End Method
	Method GetPixel:Scolor(_x:Int, _y:Int)
		Local _ret:Byte Ptr = .IImage_getPixel(Self._ptr, _x, _y)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPitch:Int()
		Local _ret:Int = .IImage_getPitch(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBlueMask:Int()
		Local _ret:Int = .IImage_getBlueMask(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetImageDataSizeInBytes:Int()
		Local _ret:Int = .IImage_getImageDataSizeInBytes(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPixel(_x:Int, _y:Int, _color:Scolor, _blend:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _blend = -2147483648
			.IImage_setPixel_OVERLOAD_1(Self._ptr, _x, _y, p2)
		Else
			.IImage_setPixel_OVERLOAD_0(Self._ptr, _x, _y, p2, _blend)
		EndIf
	End Method
	Method Fill(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IImage_fill(Self._ptr, p0)
	End Method
End Type

Type Itexture Extends IreferenceCounted Abstract
	Method GetDriverType:Int()
		Local _ret:Int = .ITexture_getDriverType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method HasAlpha:Int()
		Local _ret:Int = .ITexture_hasAlpha(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RegenerateMipMapLevels(_mipmapData:Byte Ptr = Null)
		If _mipmapData = Null
			.ITexture_regenerateMipMapLevels_OVERLOAD_1(Self._ptr)
		Else
			.ITexture_regenerateMipMapLevels_OVERLOAD_0(Self._ptr, _mipmapData)
		EndIf
	End Method
	Method HasMipMaps:Int()
		Local _ret:Int = .ITexture_hasMipMaps(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Lock:Byte Ptr(_mode:Int = -2147483648, _mipmapLevel:Int = -2147483648)
		Local _ret:Byte Ptr
		If _mode = -2147483648
			_ret = .ITexture_lock_OVERLOAD_2(Self._ptr)
		ElseIf _mipmapLevel = -2147483648
			_ret = .ITexture_lock_OVERLOAD_1(Self._ptr, _mode)
		Else
			_ret = .ITexture_lock_OVERLOAD_0(Self._ptr, _mode, _mipmapLevel)
		EndIf
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetSize:Dimension2du()
		Local _ret:Byte Ptr = .ITexture_getSize(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Unlock()
		.ITexture_unlock(Self._ptr)
	End Method
	Method GetOriginalSize:Dimension2du()
		Local _ret:Byte Ptr = .ITexture_getOriginalSize(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetColorFormat:Int()
		Local _ret:Int = .ITexture_getColorFormat(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetName:Byte Ptr()
		Local _ret:Byte Ptr = .ITexture_getName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method IsRenderTarget:Int()
		Local _ret:Int = .ITexture_isRenderTarget(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPitch:Int()
		Local _ret:Int = .ITexture_getPitch(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IvideoDriver Extends IreferenceCounted Abstract
	Method DeleteAllDynamicLights()
		.IVideoDriver_deleteAllDynamicLights(Self._ptr)
	End Method
	Method GetImageLoader:IimageLoader(_n:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getImageLoader(Self._ptr, _n)
		Local rval:IimageLoader = IimageLoader(New _IimageLoader._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DrawMeshBuffer(_mb:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mb)
		.IVideoDriver_drawMeshBuffer(Self._ptr, p0)
	End Method
	Method RemoveTexture(_texture:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		.IVideoDriver_removeTexture(Self._ptr, p0)
	End Method
	Method Draw2DrectangleOutline(_pos:Recti, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw2DRectangleOutline_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_draw2DRectangleOutline_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
	End Method
	Method RemoveHardwareBuffer(_mb:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mb)
		.IVideoDriver_removeHardwareBuffer(Self._ptr, p0)
	End Method
	Method CreateImage:Iimage(_format:Int, _size:Dimension2du)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local _ret:Byte Ptr = .IVideoDriver_createImage_OVERLOAD_0(Self._ptr, _format, p1)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateImageWithFormatImageToCopy:Iimage(_format:Int, _imageToCopy:Iimage)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_imageToCopy)
		Local _ret:Byte Ptr = .IVideoDriver_createImage_OVERLOAD_1(Self._ptr, _format, p1)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateImageWithImageToCopyPosSize:Iimage(_imageToCopy:Iimage, _pos:Vector2di, _size:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_imageToCopy)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local _ret:Byte Ptr = .IVideoDriver_createImage_OVERLOAD_2(Self._ptr, p0, p1, p2)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateImageWithTexturePosSize:Iimage(_texture:Itexture, _pos:Vector2di, _size:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local _ret:Byte Ptr = .IVideoDriver_createImage_OVERLOAD_3(Self._ptr, p0, p1, p2)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMaterialRenderer:ImaterialRenderer(_idx:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getMaterialRenderer(Self._ptr, _idx)
		Local rval:ImaterialRenderer = ImaterialRenderer(New _ImaterialRenderer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MakeNormalMapTexture(_texture:Itexture, _amplitude:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		If _amplitude = -1e100000
			.IVideoDriver_makeNormalMapTexture_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_makeNormalMapTexture_OVERLOAD_0(Self._ptr, p0, _amplitude)
		EndIf
	End Method
	Method SetTransform(_state:Int, _mat:Matrix4)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_mat)
		.IVideoDriver_setTransform(Self._ptr, _state, p1)
	End Method
	Method MakeColorKeyTexture(_texture:Itexture, _color:Scolor, _zeroTexels:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _zeroTexels = -2147483648
			.IVideoDriver_makeColorKeyTexture_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IVideoDriver_makeColorKeyTexture_OVERLOAD_0(Self._ptr, p0, p1, _zeroTexels)
		EndIf
	End Method
	Method MakeColorKeyTextureWithTextureColorKeyPixelPos(_texture:Itexture, _colorKeyPixelPos:Vector2di, _zeroTexels:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_colorKeyPixelPos)
		If _zeroTexels = -2147483648
			.IVideoDriver_makeColorKeyTexture_OVERLOAD_3(Self._ptr, p0, p1)
		Else
			.IVideoDriver_makeColorKeyTexture_OVERLOAD_2(Self._ptr, p0, p1, _zeroTexels)
		EndIf
	End Method
	Method Draw2Dimage(_texture:Itexture, _destPos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_destPos)
		.IVideoDriver_draw2DImage_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method Draw2DimageWithTextureDestPosSourceRect(_texture:Itexture, _destPos:Vector2di, _sourceRect:Recti, _clipRect:Recti = Null, _color:Scolor = Null, _useAlphaChannelOfTexture:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_destPos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_sourceRect)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _clipRect = Null
			.IVideoDriver_draw2DImage_OVERLOAD_4(Self._ptr, p0, p1, p2)
		ElseIf _color = Null
			.IVideoDriver_draw2DImage_OVERLOAD_3(Self._ptr, p0, p1, p2, p3)
		ElseIf _useAlphaChannelOfTexture = -2147483648
			.IVideoDriver_draw2DImage_OVERLOAD_2(Self._ptr, p0, p1, p2, p3, p4)
		Else
			.IVideoDriver_draw2DImage_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, p4, _useAlphaChannelOfTexture)
		EndIf
	End Method
	Method Draw2DimageWithTextureDestRectSourceRect(_texture:Itexture, _destRect:Recti, _sourceRect:Recti, _clipRect:Recti = Null, _colors:Scolor = Null, _useAlphaChannelOfTexture:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_destRect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_sourceRect)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_colors)
		If _clipRect = Null
			.IVideoDriver_draw2DImage_OVERLOAD_8(Self._ptr, p0, p1, p2)
		ElseIf _colors = Null
			.IVideoDriver_draw2DImage_OVERLOAD_7(Self._ptr, p0, p1, p2, p3)
		ElseIf _useAlphaChannelOfTexture = -2147483648
			.IVideoDriver_draw2DImage_OVERLOAD_6(Self._ptr, p0, p1, p2, p3, p4)
		Else
			.IVideoDriver_draw2DImage_OVERLOAD_5(Self._ptr, p0, p1, p2, p3, p4, _useAlphaChannelOfTexture)
		EndIf
	End Method
	Method GetName:String()
		Local _ret:Byte Ptr = .IVideoDriver_getName(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetDriverType:Int()
		Local _ret:Int = .IVideoDriver_getDriverType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTransform:Matrix4(_state:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getTransform(Self._ptr, _state)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMaxTextureSize:Dimension2du()
		Local _ret:Byte Ptr = .IVideoDriver_getMaxTextureSize(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetAmbientLight(_color:Scolorf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IVideoDriver_setAmbientLight(Self._ptr, p0)
	End Method
	Method SetViewPort(_area:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_area)
		.IVideoDriver_setViewPort(Self._ptr, p0)
	End Method
	Method FindTexture:Itexture(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IVideoDriver_findTexture(Self._ptr, p0)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetOcclusionQueryResult:Int(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int = .IVideoDriver_getOcclusionQueryResult(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Draw2Dline(_start:Vector2di, _end:Vector2di, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw2DLine_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IVideoDriver_draw2DLine_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method GetFog(_color:Scolor, _fogType:Int Ptr, _start:Byte Ptr, _end:Byte Ptr, _density:Byte Ptr, _pixelFog:Byte Ptr, _rangeFog:Byte Ptr)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IVideoDriver_getFog(Self._ptr, p0, _fogType, _start, _end, _density, _pixelFog, _rangeFog)
	End Method
	Method EnableMaterial2D(_enable:Int = -2147483648)
		If _enable = -2147483648
			.IVideoDriver_enableMaterial2D_OVERLOAD_1(Self._ptr)
		Else
			.IVideoDriver_enableMaterial2D_OVERLOAD_0(Self._ptr, _enable)
		EndIf
	End Method
	Method RemoveAllTextures()
		.IVideoDriver_removeAllTextures(Self._ptr)
	End Method
	Method FillMaterialStructureFromAttributes(_outMaterial:Smaterial, _attributes:Iattributes)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_outMaterial)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_attributes)
		.IVideoDriver_fillMaterialStructureFromAttributes(Self._ptr, p0, p1)
	End Method
	Method RemoveAllOcclusionQueries()
		.IVideoDriver_removeAllOcclusionQueries(Self._ptr)
	End Method
	Method DrawIndexedTriangleList(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleList_OVERLOAD_0(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method DrawIndexedTriangleListWithVerticesVertexCountIndexListTriangleCount(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleList_OVERLOAD_1(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method DrawIndexedTriangleListWithByte_PtrIntByte_PtrInt(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleList_OVERLOAD_2(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method GetCurrentRenderTargetSize:Dimension2du()
		Local _ret:Byte Ptr = .IVideoDriver_getCurrentRenderTargetSize(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method EndScene:Int()
		Local _ret:Int = .IVideoDriver_endScene(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddExternalImageWriter(_writer:IimageWriter)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_writer)
		.IVideoDriver_addExternalImageWriter(Self._ptr, p0)
	End Method
	Method GetImageWriter:IimageWriter(_n:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getImageWriter(Self._ptr, _n)
		Local rval:IimageWriter = IimageWriter(New _IimageWriter._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Draw3Dtriangle(_triangle:Triangle3df, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_triangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw3DTriangle_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_draw3DTriangle_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
	End Method
	Method DrawPixel(_x:Int, _y:Int, _color:Scolor)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IVideoDriver_drawPixel(Self._ptr, _x, _y, p2)
	End Method
	Method Draw3Dbox(_box:Aabbox3df, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw3DBox_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_draw3DBox_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
	End Method
	Method AddRenderTargetTexture:Itexture(_size:Dimension2du, _name:Path = Null, _format:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Byte Ptr
		If _name = Null
			_ret = .IVideoDriver_addRenderTargetTexture_OVERLOAD_2(Self._ptr, p0)
		ElseIf _format = -2147483648
			_ret = .IVideoDriver_addRenderTargetTexture_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IVideoDriver_addRenderTargetTexture_OVERLOAD_0(Self._ptr, p0, p1, _format)
		EndIf
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Draw3Dline(_start:Vector3df, _end:Vector3df, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw3DLine_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IVideoDriver_draw3DLine_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method Draw2DimageBatch(_texture:Itexture, _pos:Vector2di, _sourceRects:Byte Ptr, _indices:Byte Ptr, _kerningWidth:Int = -2147483648, _clipRect:Recti = Null, _color:Scolor = Null, _useAlphaChannelOfTexture:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _kerningWidth = -2147483648
			.IVideoDriver_draw2DImageBatch_OVERLOAD_4(Self._ptr, p0, p1, _sourceRects, _indices)
		ElseIf _clipRect = Null
			.IVideoDriver_draw2DImageBatch_OVERLOAD_3(Self._ptr, p0, p1, _sourceRects, _indices, _kerningWidth)
		ElseIf _color = Null
			.IVideoDriver_draw2DImageBatch_OVERLOAD_2(Self._ptr, p0, p1, _sourceRects, _indices, _kerningWidth, p5)
		ElseIf _useAlphaChannelOfTexture = -2147483648
			.IVideoDriver_draw2DImageBatch_OVERLOAD_1(Self._ptr, p0, p1, _sourceRects, _indices, _kerningWidth, p5, p6)
		Else
			.IVideoDriver_draw2DImageBatch_OVERLOAD_0(Self._ptr, p0, p1, _sourceRects, _indices, _kerningWidth, p5, p6, _useAlphaChannelOfTexture)
		EndIf
	End Method
	Method Draw2DimageBatchWithTexturePositionsSourceRects(_texture:Itexture, _positions:Byte Ptr, _sourceRects:Byte Ptr, _clipRect:Recti = Null, _color:Scolor = Null, _useAlphaChannelOfTexture:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clipRect)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _clipRect = Null
			.IVideoDriver_draw2DImageBatch_OVERLOAD_8(Self._ptr, p0, _positions, _sourceRects)
		ElseIf _color = Null
			.IVideoDriver_draw2DImageBatch_OVERLOAD_7(Self._ptr, p0, _positions, _sourceRects, p3)
		ElseIf _useAlphaChannelOfTexture = -2147483648
			.IVideoDriver_draw2DImageBatch_OVERLOAD_6(Self._ptr, p0, _positions, _sourceRects, p3, p4)
		Else
			.IVideoDriver_draw2DImageBatch_OVERLOAD_5(Self._ptr, p0, _positions, _sourceRects, p3, p4, _useAlphaChannelOfTexture)
		EndIf
	End Method
	Method GetGpuprogrammingServices:IgpuprogrammingServices()
		Local _ret:Byte Ptr = .IVideoDriver_getGPUProgrammingServices(Self._ptr)
		Local rval:IgpuprogrammingServices = IgpuprogrammingServices(New _IgpuprogrammingServices._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateScreenShot:Iimage(_format:Int = -2147483648, _target:Int = -2147483648)
		Local _ret:Byte Ptr
		If _format = -2147483648
			_ret = .IVideoDriver_createScreenShot_OVERLOAD_2(Self._ptr)
		ElseIf _target = -2147483648
			_ret = .IVideoDriver_createScreenShot_OVERLOAD_1(Self._ptr, _format)
		Else
			_ret = .IVideoDriver_createScreenShot_OVERLOAD_0(Self._ptr, _format, _target)
		EndIf
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMinHardwareBufferVertexCount(_count:Int)
		.IVideoDriver_setMinHardwareBufferVertexCount(Self._ptr, _count)
	End Method
	Method RenameTexture(_texture:Itexture, _newName:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_newName)
		.IVideoDriver_renameTexture(Self._ptr, p0, p1)
	End Method
	Method DrawStencilShadowVolume(_triangles:Byte Ptr, _zfail:Int = -2147483648, _debugDataVisible:Int = -2147483648)
		If _zfail = -2147483648
			.IVideoDriver_drawStencilShadowVolume_OVERLOAD_2(Self._ptr, _triangles)
		ElseIf _debugDataVisible = -2147483648
			.IVideoDriver_drawStencilShadowVolume_OVERLOAD_1(Self._ptr, _triangles, _zfail)
		Else
			.IVideoDriver_drawStencilShadowVolume_OVERLOAD_0(Self._ptr, _triangles, _zfail, _debugDataVisible)
		EndIf
	End Method
	Method Draw2Dpolygon(_center:Vector2di, _radius:Float, _color:Scolor = Null, _vertexCount:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_draw2DPolygon_OVERLOAD_2(Self._ptr, p0, _radius)
		ElseIf _vertexCount = -2147483648
			.IVideoDriver_draw2DPolygon_OVERLOAD_1(Self._ptr, p0, _radius, p2)
		Else
			.IVideoDriver_draw2DPolygon_OVERLOAD_0(Self._ptr, p0, _radius, p2, _vertexCount)
		EndIf
	End Method
	Method GetTextureCreationFlag:Int(_flag:Int)
		Local _ret:Int = .IVideoDriver_getTextureCreationFlag(Self._ptr, _flag)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetRenderTarget:Int(_texture:Itexture, _clearBackBuffer:Int = -2147483648, _clearZBuffer:Int = -2147483648, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Int
		If _clearBackBuffer = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_3(Self._ptr, p0)
		ElseIf _clearZBuffer = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_2(Self._ptr, p0, _clearBackBuffer)
		ElseIf _color = Null
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_1(Self._ptr, p0, _clearBackBuffer, _clearZBuffer)
		Else
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_0(Self._ptr, p0, _clearBackBuffer, _clearZBuffer, p3)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetRenderTargetWithTarget:Int(_target:Int, _clearTarget:Int = -2147483648, _clearZBuffer:Int = -2147483648, _color:Scolor = Null)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Int
		If _clearTarget = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_7(Self._ptr, _target)
		ElseIf _clearZBuffer = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_6(Self._ptr, _target, _clearTarget)
		ElseIf _color = Null
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_5(Self._ptr, _target, _clearTarget, _clearZBuffer)
		Else
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_4(Self._ptr, _target, _clearTarget, _clearZBuffer, p3)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetRenderTargetWithTexture:Int(_texture:Byte Ptr, _clearBackBuffer:Int = -2147483648, _clearZBuffer:Int = -2147483648, _color:Scolor = Null)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Int
		If _clearBackBuffer = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_11(Self._ptr, _texture)
		ElseIf _clearZBuffer = -2147483648
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_10(Self._ptr, _texture, _clearBackBuffer)
		ElseIf _color = Null
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_9(Self._ptr, _texture, _clearBackBuffer, _clearZBuffer)
		Else
			_ret = .IVideoDriver_setRenderTarget_OVERLOAD_8(Self._ptr, _texture, _clearBackBuffer, _clearZBuffer, p3)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method RunAllOcclusionQueries(_visible:Int = -2147483648)
		If _visible = -2147483648
			.IVideoDriver_runAllOcclusionQueries_OVERLOAD_1(Self._ptr)
		Else
			.IVideoDriver_runAllOcclusionQueries_OVERLOAD_0(Self._ptr, _visible)
		EndIf
	End Method
	Method GetMeshManipulator:ImeshManipulator()
		Local _ret:Byte Ptr = .IVideoDriver_getMeshManipulator(Self._ptr)
		Local rval:ImeshManipulator = ImeshManipulator(New _ImeshManipulator._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTexture:Itexture(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IVideoDriver_getTexture_OVERLOAD_0(Self._ptr, p0)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTextureWithFile:Itexture(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IVideoDriver_getTexture_OVERLOAD_1(Self._ptr, p0)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RunOcclusionQuery(_node:IsceneNode, _visible:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		If _visible = -2147483648
			.IVideoDriver_runOcclusionQuery_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_runOcclusionQuery_OVERLOAD_0(Self._ptr, p0, _visible)
		EndIf
	End Method
	Method SetAllowZwriteOnTransparent(_flag:Int)
		.IVideoDriver_setAllowZWriteOnTransparent(Self._ptr, _flag)
	End Method
	Method SetMaterial(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		.IVideoDriver_setMaterial(Self._ptr, p0)
	End Method
	Method AddDynamicLight:Int(_light:Byte Ptr)
		Local _ret:Int = .IVideoDriver_addDynamicLight(Self._ptr, _light)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetViewPort:Recti()
		Local _ret:Byte Ptr = .IVideoDriver_getViewPort(Self._ptr)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method EnableClipPlane(_index:Int, _enable:Int)
		.IVideoDriver_enableClipPlane(Self._ptr, _index, _enable)
	End Method
	Method GetColorFormat:Int()
		Local _ret:Int = .IVideoDriver_getColorFormat(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetFog(_color:Scolor = Null, _fogType:Int = -2147483648, _start:Float = -1e100000, _end:Float = -1e100000, _density:Float = -1e100000, _pixelFog:Int = -2147483648, _rangeFog:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IVideoDriver_setFog_OVERLOAD_7(Self._ptr)
		ElseIf _fogType = -2147483648
			.IVideoDriver_setFog_OVERLOAD_6(Self._ptr, p0)
		ElseIf _start = -1e100000
			.IVideoDriver_setFog_OVERLOAD_5(Self._ptr, p0, _fogType)
		ElseIf _end = -1e100000
			.IVideoDriver_setFog_OVERLOAD_4(Self._ptr, p0, _fogType, _start)
		ElseIf _density = -1e100000
			.IVideoDriver_setFog_OVERLOAD_3(Self._ptr, p0, _fogType, _start, _end)
		ElseIf _pixelFog = -2147483648
			.IVideoDriver_setFog_OVERLOAD_2(Self._ptr, p0, _fogType, _start, _end, _density)
		ElseIf _rangeFog = -2147483648
			.IVideoDriver_setFog_OVERLOAD_1(Self._ptr, p0, _fogType, _start, _end, _density, _pixelFog)
		Else
			.IVideoDriver_setFog_OVERLOAD_0(Self._ptr, p0, _fogType, _start, _end, _density, _pixelFog, _rangeFog)
		EndIf
	End Method
	Method CreateImageFromFile:Iimage(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IVideoDriver_createImageFromFile_OVERLOAD_0(Self._ptr, p0)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateImageFromFileWithFile:Iimage(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IVideoDriver_createImageFromFile_OVERLOAD_1(Self._ptr, p0)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CheckDriverReset:Int()
		Local _ret:Int = .IVideoDriver_checkDriverReset(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DrawVertexPrimitiveList(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _primCount:Int, _vType:Int = -2147483648, _pType:Int = -2147483648, _iType:Int = -2147483648)
		If _vType = -2147483648
			.IVideoDriver_drawVertexPrimitiveList_OVERLOAD_3(Self._ptr, _vertices, _vertexCount, _indexList, _primCount)
		ElseIf _pType = -2147483648
			.IVideoDriver_drawVertexPrimitiveList_OVERLOAD_2(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType)
		ElseIf _iType = -2147483648
			.IVideoDriver_drawVertexPrimitiveList_OVERLOAD_1(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType, _pType)
		Else
			.IVideoDriver_drawVertexPrimitiveList_OVERLOAD_0(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType, _pType, _iType)
		EndIf
	End Method
	Method GetDriverAttributes:Iattributes()
		Local _ret:Byte Ptr = .IVideoDriver_getDriverAttributes(Self._ptr)
		Local rval:Iattributes = Iattributes(New _Iattributes._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Draw2Drectangle(_color:Scolor, _pos:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IVideoDriver_draw2DRectangle_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IVideoDriver_draw2DRectangle_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method Draw2DrectangleWithPosColorLeftUpColorRightUpColorLeftDownColorRightDown(_pos:Recti, _colorLeftUp:Scolor, _colorRightUp:Scolor, _colorLeftDown:Scolor, _colorRightDown:Scolor, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_colorLeftUp)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_colorRightUp)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_colorLeftDown)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_colorRightDown)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IVideoDriver_draw2DRectangle_OVERLOAD_3(Self._ptr, p0, p1, p2, p3, p4)
		Else
			.IVideoDriver_draw2DRectangle_OVERLOAD_2(Self._ptr, p0, p1, p2, p3, p4, p5)
		EndIf
	End Method
	Method GetDynamicLightCount:Int()
		Local _ret:Int = .IVideoDriver_getDynamicLightCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BeginScene:Int(_backBuffer:Int = -2147483648, _zBuffer:Int = -2147483648, _color:Scolor = Null, _videoData:Byte Ptr = Null, _sourceRect:Recti = Null)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_sourceRect)
		Local _ret:Int
		If _backBuffer = -2147483648
			_ret = .IVideoDriver_beginScene_OVERLOAD_5(Self._ptr)
		ElseIf _zBuffer = -2147483648
			_ret = .IVideoDriver_beginScene_OVERLOAD_4(Self._ptr, _backBuffer)
		ElseIf _color = Null
			_ret = .IVideoDriver_beginScene_OVERLOAD_3(Self._ptr, _backBuffer, _zBuffer)
		ElseIf _videoData = Null
			_ret = .IVideoDriver_beginScene_OVERLOAD_2(Self._ptr, _backBuffer, _zBuffer, p2)
		ElseIf _sourceRect = Null
			_ret = .IVideoDriver_beginScene_OVERLOAD_1(Self._ptr, _backBuffer, _zBuffer, p2, _videoData)
		Else
			_ret = .IVideoDriver_beginScene_OVERLOAD_0(Self._ptr, _backBuffer, _zBuffer, p2, _videoData, p4)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method DrawStencilShadow(_clearStencilBuffer:Int = -2147483648, _leftUpEdge:Scolor = Null, _rightUpEdge:Scolor = Null, _leftDownEdge:Scolor = Null, _rightDownEdge:Scolor = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_leftUpEdge)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_rightUpEdge)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_leftDownEdge)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rightDownEdge)
		If _clearStencilBuffer = -2147483648
			.IVideoDriver_drawStencilShadow_OVERLOAD_5(Self._ptr)
		ElseIf _leftUpEdge = Null
			.IVideoDriver_drawStencilShadow_OVERLOAD_4(Self._ptr, _clearStencilBuffer)
		ElseIf _rightUpEdge = Null
			.IVideoDriver_drawStencilShadow_OVERLOAD_3(Self._ptr, _clearStencilBuffer, p1)
		ElseIf _leftDownEdge = Null
			.IVideoDriver_drawStencilShadow_OVERLOAD_2(Self._ptr, _clearStencilBuffer, p1, p2)
		ElseIf _rightDownEdge = Null
			.IVideoDriver_drawStencilShadow_OVERLOAD_1(Self._ptr, _clearStencilBuffer, p1, p2, p3)
		Else
			.IVideoDriver_drawStencilShadow_OVERLOAD_0(Self._ptr, _clearStencilBuffer, p1, p2, p3, p4)
		EndIf
	End Method
	Method Draw2DvertexPrimitiveList(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _primCount:Int, _vType:Int = -2147483648, _pType:Int = -2147483648, _iType:Int = -2147483648)
		If _vType = -2147483648
			.IVideoDriver_draw2DVertexPrimitiveList_OVERLOAD_3(Self._ptr, _vertices, _vertexCount, _indexList, _primCount)
		ElseIf _pType = -2147483648
			.IVideoDriver_draw2DVertexPrimitiveList_OVERLOAD_2(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType)
		ElseIf _iType = -2147483648
			.IVideoDriver_draw2DVertexPrimitiveList_OVERLOAD_1(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType, _pType)
		Else
			.IVideoDriver_draw2DVertexPrimitiveList_OVERLOAD_0(Self._ptr, _vertices, _vertexCount, _indexList, _primCount, _vType, _pType, _iType)
		EndIf
	End Method
	Method WriteImageToFile:Int(_image:Iimage, _filename:Path, _param:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int
		If _param = -2147483648
			_ret = .IVideoDriver_writeImageToFile_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IVideoDriver_writeImageToFile_OVERLOAD_0(Self._ptr, p0, p1, _param)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method WriteImageToFileWithImageFile:Int(_image:Iimage, _file:IwriteFile, _param:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Int
		If _param = -2147483648
			_ret = .IVideoDriver_writeImageToFile_OVERLOAD_3(Self._ptr, p0, p1)
		Else
			_ret = .IVideoDriver_writeImageToFile_OVERLOAD_2(Self._ptr, p0, p1, _param)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method ConvertColor(_sP:Byte Ptr, _sF:Int, _sN:Int, _dP:Byte Ptr, _dF:Int)
		.IVideoDriver_convertColor(Self._ptr, _sP, _sF, _sN, _dP, _dF)
	End Method
	Method GetDynamicLight:Byte Ptr(_idx:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getDynamicLight(Self._ptr, _idx)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetMaterialRendererName:Byte Ptr(_idx:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getMaterialRendererName(Self._ptr, _idx)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method ClearZbuffer()
		.IVideoDriver_clearZBuffer(Self._ptr)
	End Method
	Method DisableFeature(_feature:Int, _flag:Int = -2147483648)
		If _flag = -2147483648
			.IVideoDriver_disableFeature_OVERLOAD_1(Self._ptr, _feature)
		Else
			.IVideoDriver_disableFeature_OVERLOAD_0(Self._ptr, _feature, _flag)
		EndIf
	End Method
	Method CreateAttributesFromMaterial:Iattributes(_material:Smaterial, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Byte Ptr
		If _options = Null
			_ret = .IVideoDriver_createAttributesFromMaterial_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IVideoDriver_createAttributesFromMaterial_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
		Local rval:Iattributes = Iattributes(New _Iattributes._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddMaterialRenderer:Int(_renderer:ImaterialRenderer, _name:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_renderer)
		Local _ret:Int
		If _name = Null
			_ret = .IVideoDriver_addMaterialRenderer_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IVideoDriver_addMaterialRenderer_OVERLOAD_0(Self._ptr, p0, _name)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method TurnLightOn(_lightIndex:Int, _turnOn:Int)
		.IVideoDriver_turnLightOn(Self._ptr, _lightIndex, _turnOn)
	End Method
	Method DrawMeshBufferNormals(_mb:ImeshBuffer, _length:Float = -1e100000, _color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mb)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _length = -1e100000
			.IVideoDriver_drawMeshBufferNormals_OVERLOAD_2(Self._ptr, p0)
		ElseIf _color = Null
			.IVideoDriver_drawMeshBufferNormals_OVERLOAD_1(Self._ptr, p0, _length)
		Else
			.IVideoDriver_drawMeshBufferNormals_OVERLOAD_0(Self._ptr, p0, _length, p2)
		EndIf
	End Method
	Method GetOverrideMaterial:Byte Ptr()
		Local _ret:Byte Ptr = .IVideoDriver_getOverrideMaterial(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method RemoveAllHardwareBuffers()
		.IVideoDriver_removeAllHardwareBuffers(Self._ptr)
	End Method
	Method AddOcclusionQuery(_node:IsceneNode, _mesh:Imesh = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		If _mesh = Null
			.IVideoDriver_addOcclusionQuery_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_addOcclusionQuery_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
	End Method
	Method GetScreenSize:Dimension2du()
		Local _ret:Byte Ptr = .IVideoDriver_getScreenSize(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method UpdateAllOcclusionQueries(_block:Int = -2147483648)
		If _block = -2147483648
			.IVideoDriver_updateAllOcclusionQueries_OVERLOAD_1(Self._ptr)
		Else
			.IVideoDriver_updateAllOcclusionQueries_OVERLOAD_0(Self._ptr, _block)
		EndIf
	End Method
	Method GetMaximalDynamicLightAmount:Int()
		Local _ret:Int = .IVideoDriver_getMaximalDynamicLightAmount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddExternalImageLoader(_loader:IimageLoader)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_loader)
		.IVideoDriver_addExternalImageLoader(Self._ptr, p0)
	End Method
	Method SetMaterialRendererName(_idx:Int, _name:Byte Ptr)
		.IVideoDriver_setMaterialRendererName(Self._ptr, _idx, _name)
	End Method
	Method DrawIndexedTriangleFan(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleFan_OVERLOAD_0(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method DrawIndexedTriangleFanWithVerticesVertexCountIndexListTriangleCount(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleFan_OVERLOAD_1(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method DrawIndexedTriangleFanWithByte_PtrIntByte_PtrInt(_vertices:Byte Ptr, _vertexCount:Int, _indexList:Byte Ptr, _triangleCount:Int)
		.IVideoDriver_drawIndexedTriangleFan_OVERLOAD_2(Self._ptr, _vertices, _vertexCount, _indexList, _triangleCount)
	End Method
	Method SetClipPlane:Int(_index:Int, _plane:Plane3df, _enable:Int = -2147483648)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_plane)
		Local _ret:Int
		If _enable = -2147483648
			_ret = .IVideoDriver_setClipPlane_OVERLOAD_1(Self._ptr, _index, p1)
		Else
			_ret = .IVideoDriver_setClipPlane_OVERLOAD_0(Self._ptr, _index, p1, _enable)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddTexture:Itexture(_size:Dimension2du, _name:Path, _format:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Byte Ptr
		If _format = -2147483648
			_ret = .IVideoDriver_addTexture_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IVideoDriver_addTexture_OVERLOAD_0(Self._ptr, p0, p1, _format)
		EndIf
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddTextureWithNameImage:Itexture(_name:Path, _image:Iimage, _mipmapData:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local _ret:Byte Ptr
		If _mipmapData = Null
			_ret = .IVideoDriver_addTexture_OVERLOAD_3(Self._ptr, p0, p1)
		Else
			_ret = .IVideoDriver_addTexture_OVERLOAD_2(Self._ptr, p0, p1, _mipmapData)
		EndIf
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFps:Int()
		Local _ret:Int = .IVideoDriver_getFPS(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVendorInfo:String()
		Local _ret:Byte Ptr = .IVideoDriver_getVendorInfo(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method SetTextureCreationFlag(_flag:Int, _enabled:Int = -2147483648)
		If _enabled = -2147483648
			.IVideoDriver_setTextureCreationFlag_OVERLOAD_1(Self._ptr, _flag)
		Else
			.IVideoDriver_setTextureCreationFlag_OVERLOAD_0(Self._ptr, _flag, _enabled)
		EndIf
	End Method
	Method GetTextureByIndex:Itexture(_index:Int)
		Local _ret:Byte Ptr = .IVideoDriver_getTextureByIndex(Self._ptr, _index)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method UpdateOcclusionQuery(_node:IsceneNode, _block:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		If _block = -2147483648
			.IVideoDriver_updateOcclusionQuery_OVERLOAD_1(Self._ptr, p0)
		Else
			.IVideoDriver_updateOcclusionQuery_OVERLOAD_0(Self._ptr, p0, _block)
		EndIf
	End Method
	Method GetMaterialRendererCount:Int()
		Local _ret:Int = .IVideoDriver_getMaterialRendererCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetImageWriterCount:Int()
		Local _ret:Int = .IVideoDriver_getImageWriterCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetExposedVideoData:Byte Ptr()
		Local _ret:Byte Ptr = .IVideoDriver_getExposedVideoData(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetMaterial2D:Smaterial()
		Local _ret:Byte Ptr = .IVideoDriver_getMaterial2D(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method QueryFeature:Int(_feature:Int)
		Local _ret:Int = .IVideoDriver_queryFeature(Self._ptr, _feature)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTextureCount:Int()
		Local _ret:Int = .IVideoDriver_getTextureCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPrimitiveCountDrawn:Int(_mode:Int = -2147483648)
		Local _ret:Int
		If _mode = -2147483648
			_ret = .IVideoDriver_getPrimitiveCountDrawn_OVERLOAD_1(Self._ptr)
		Else
			_ret = .IVideoDriver_getPrimitiveCountDrawn_OVERLOAD_0(Self._ptr, _mode)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetImageLoaderCount:Int()
		Local _ret:Int = .IVideoDriver_getImageLoaderCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaximalPrimitiveCount:Int()
		Local _ret:Int = .IVideoDriver_getMaximalPrimitiveCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateImageFromData:Iimage(_format:Int, _size:Dimension2du, _data:Byte Ptr, _ownForeignMemory:Int = -2147483648, _deleteMemory:Int = -2147483648)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local _ret:Byte Ptr
		If _ownForeignMemory = -2147483648
			_ret = .IVideoDriver_createImageFromData_OVERLOAD_2(Self._ptr, _format, p1, _data)
		ElseIf _deleteMemory = -2147483648
			_ret = .IVideoDriver_createImageFromData_OVERLOAD_1(Self._ptr, _format, p1, _data, _ownForeignMemory)
		Else
			_ret = .IVideoDriver_createImageFromData_OVERLOAD_0(Self._ptr, _format, p1, _data, _ownForeignMemory, _deleteMemory)
		EndIf
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RemoveOcclusionQuery(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.IVideoDriver_removeOcclusionQuery(Self._ptr, p0)
	End Method
	Method OnResize(_size:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IVideoDriver_OnResize(Self._ptr, p0)
	End Method
End Type

Type IshaderManager Extends IreferenceCounted Abstract
	Function Make:IshaderManager()
		Local _ret:Byte Ptr = .new_IShaderManager()
		Local rval:IshaderManager = IshaderManager(New _IshaderManager._withPtr(_ret)._withDel(delete_IshaderManager))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type Quaternion Extends _irrlicht_Object Abstract
	Method setY(_Y:Float)
		.quaternion_Y_set(Self._ptr, _Y)
	End Method
	Method Equals:Int(_other:Quaternion, _tolerance:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .quaternion_equals_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .quaternion_equals_OVERLOAD_0(Self._ptr, p0, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method Z:Float()
		Local _ret:Float = .quaternion_Z_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Y:Float()
		Local _ret:Float = .quaternion_Y_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Slerp:Quaternion(_q1:Quaternion, _q2:Quaternion, _time:Float, _threshold:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_q1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_q2)
		Local _ret:Byte Ptr
		If _threshold = -1e100000
			_ret = .quaternion_slerp_OVERLOAD_1(Self._ptr, p0, p1, _time)
		Else
			_ret = .quaternion_slerp_OVERLOAD_0(Self._ptr, p0, p1, _time, _threshold)
		EndIf
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setW(_W:Float)
		.quaternion_W_set(Self._ptr, _W)
	End Method
	Method Mul:Quaternion(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .quaternion___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithS:Quaternion(_s:Float)
		Local _ret:Byte Ptr = .quaternion___mul___OVERLOAD_1(Self._ptr, _s)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithV:Vector3df(_v:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v)
		Local _ret:Byte Ptr = .quaternion___mul___OVERLOAD_2(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .quaternion___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setZ(_Z:Float)
		.quaternion_Z_set(Self._ptr, _Z)
	End Method
	Method Normalize:Quaternion()
		Local _ret:Byte Ptr = .quaternion_normalize(Self._ptr)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Quaternion(_s:Float)
		Local _ret:Byte Ptr = .quaternion___mul_assign___OVERLOAD_0(Self._ptr, _s)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithOther:Quaternion(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .quaternion___mul_assign___OVERLOAD_1(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MakeInverse:Quaternion()
		Local _ret:Byte Ptr = .quaternion_makeInverse(Self._ptr)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MakeIdentity:Quaternion()
		Local _ret:Byte Ptr = .quaternion_makeIdentity(Self._ptr)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMatrixTransposed(_dest:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		.quaternion_getMatrix_transposed(Self._ptr, p0)
	End Method
	Method RotationFromTo:Quaternion(_from:Vector3df, _to:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_from)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_to)
		Local _ret:Byte Ptr = .quaternion_rotationFromTo(Self._ptr, p0, p1)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Quaternion()
		Local _ret:Byte Ptr = .new_quaternion_OVERLOAD_0()
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXYZ:Quaternion(_x:Float, _y:Float, _z:Float, _w:Float = -1e100000)
		Local _ret:Byte Ptr
		If _w = -1e100000
			_ret = .new_quaternion_OVERLOAD_2(_x, _y, _z)
		Else
			_ret = .new_quaternion_OVERLOAD_1(_x, _y, _z, _w)
		EndIf
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithVec:Quaternion(_vec:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vec)
		Local _ret:Byte Ptr = .new_quaternion_OVERLOAD_3(p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMat:Quaternion(_mat:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mat)
		Local _ret:Byte Ptr = .new_quaternion_OVERLOAD_4(p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method W:Float()
		Local _ret:Float = .quaternion_W_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetMatrixCenter(_dest:Matrix4, _center:Vector3df, _translation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		.quaternion_getMatrixCenter(Self._ptr, p0, p1, p2)
	End Method
	Method DotProduct:Float(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .quaternion_dotProduct(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method FromAngleAxis:Quaternion(_angle:Float, _axis:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_axis)
		Local _ret:Byte Ptr = .quaternion_fromAngleAxis(Self._ptr, _angle, p1)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Quaternion(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .quaternion___add__(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ToEuler(_euler:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_euler)
		.quaternion_toEuler(Self._ptr, p0)
	End Method
	Method Lerp:Quaternion(_q1:Quaternion, _q2:Quaternion, _time:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_q1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_q2)
		Local _ret:Byte Ptr = .quaternion_lerp(Self._ptr, p0, p1, _time)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Quaternion(_x:Float, _y:Float, _z:Float, _w:Float = -1e100000)
		Local _ret:Byte Ptr
		If _w = -1e100000
			_ret = .quaternion_set_OVERLOAD_1(Self._ptr, _x, _y, _z)
		Else
			_ret = .quaternion_set_OVERLOAD_0(Self._ptr, _x, _y, _z, _w)
		EndIf
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithVec:Quaternion(_vec:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vec)
		Local _ret:Byte Ptr = .quaternion_set_OVERLOAD_2(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithQuat:Quaternion(_quat:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_quat)
		Local _ret:Byte Ptr = .quaternion_set_OVERLOAD_3(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .quaternion___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setX(_X:Float)
		.quaternion_X_set(Self._ptr, _X)
	End Method
	Method GetMatrix:Matrix4()
		Local _ret:Byte Ptr = .quaternion_getMatrix_OVERLOAD_0(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMatrixWithDest(_dest:Matrix4, _translation:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		If _translation = Null
			.quaternion_getMatrix_OVERLOAD_2(Self._ptr, p0)
		Else
			.quaternion_getMatrix_OVERLOAD_1(Self._ptr, p0, p1)
		EndIf
	End Method
	Method X:Float()
		Local _ret:Float = .quaternion_X_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method _assign:Quaternion(_other:Quaternion)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .quaternion___assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assignWithOther:Quaternion(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .quaternion___assign___OVERLOAD_1(Self._ptr, p0)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ToAngleAxis(_angle:Byte Ptr, _axis:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_axis)
		.quaternion_toAngleAxis(Self._ptr, _angle, p1)
	End Method
End Type

Type IanimatedMeshMd3 Extends IanimatedMesh Abstract
	Method GetOriginalMesh:Byte Ptr()
		Local _ret:Byte Ptr = .IAnimatedMeshMD3_getOriginalMesh(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetInterpolationShift(_shift:Int, _loopMode:Int)
		.IAnimatedMeshMD3_setInterpolationShift(Self._ptr, _shift, _loopMode)
	End Method
	Method GetTagList:Byte Ptr(_frame:Int, _detailLevel:Int, _startFrameLoop:Int, _endFrameLoop:Int)
		Local _ret:Byte Ptr = .IAnimatedMeshMD3_getTagList(Self._ptr, _frame, _detailLevel, _startFrameLoop, _endFrameLoop)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type IattributeExchangingObject Extends IreferenceCounted Abstract
	Method DeserializeAttributes(_in:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		If _options = Null
			.IAttributeExchangingObject_deserializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IAttributeExchangingObject_deserializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method SerializeAttributes(_out:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		If _options = Null
			.IAttributeExchangingObject_serializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IAttributeExchangingObject_serializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Function Make:IattributeExchangingObject()
		Local _ret:Byte Ptr = .new_IAttributeExchangingObject()
		Local rval:IattributeExchangingObject = IattributeExchangingObject(New _IattributeExchangingObject._withPtr(_ret)._withDel(delete_IattributeExchangingObject))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type Ilogger Extends IreferenceCounted Abstract
	Method Log(_text:Byte Ptr, _ll:Int = -2147483648)
		If _ll = -2147483648
			.ILogger_log_OVERLOAD_1(Self._ptr, _text)
		Else
			.ILogger_log_OVERLOAD_0(Self._ptr, _text, _ll)
		EndIf
	End Method
	Method LogWithTextHint(_text:Byte Ptr, _hint:Byte Ptr, _ll:Int = -2147483648)
		If _ll = -2147483648
			.ILogger_log_OVERLOAD_3(Self._ptr, _text, _hint)
		Else
			.ILogger_log_OVERLOAD_2(Self._ptr, _text, _hint, _ll)
		EndIf
	End Method
	Method LogWithByte_PtrString(_text:Byte Ptr, _hint:String, _ll:Int = -2147483648)
		Local cs1:Byte Ptr = _hint.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _hint.Length)
		If _ll = -2147483648
			.ILogger_log_OVERLOAD_5(Self._ptr, _text, ws1)
		Else
			.ILogger_log_OVERLOAD_4(Self._ptr, _text, ws1, _ll)
		EndIf
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method LogWithStringString(_text:String, _hint:String, _ll:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local cs1:Byte Ptr = _hint.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _hint.Length)
		If _ll = -2147483648
			.ILogger_log_OVERLOAD_7(Self._ptr, ws0, ws1)
		Else
			.ILogger_log_OVERLOAD_6(Self._ptr, ws0, ws1, _ll)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method LogWithText(_text:String, _ll:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		If _ll = -2147483648
			.ILogger_log_OVERLOAD_9(Self._ptr, ws0)
		Else
			.ILogger_log_OVERLOAD_8(Self._ptr, ws0, _ll)
		EndIf
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method GetLogLevel:Int()
		Local _ret:Int = .ILogger_getLogLevel(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLogLevel(_ll:Int)
		.ILogger_setLogLevel(Self._ptr, _ll)
	End Method
End Type

Type IeventReceiver Extends _irrlicht_Object Abstract
	Method OnEvent:Int(_event:Byte Ptr)
		Local _ret:Int = .IEventReceiver_OnEvent(Self._ptr, _event)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IsceneNodeAnimator Extends IeventReceiver Abstract
	Method HasFinished:Int()
		Local _ret:Int = .ISceneNodeAnimator_hasFinished(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetType:Int()
		Local _ret:Int = .ISceneNodeAnimator_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AnimateNode(_node:IsceneNode, _timeMs:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ISceneNodeAnimator_animateNode(Self._ptr, p0, _timeMs)
	End Method
	Method IsEventReceiverEnabled:Int()
		Local _ret:Int = .ISceneNodeAnimator_isEventReceiverEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateClone:IsceneNodeAnimator(_node:IsceneNode, _newManager:IsceneManager = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_newManager)
		Local _ret:Byte Ptr
		If _newManager = Null
			_ret = .ISceneNodeAnimator_createClone_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneNodeAnimator_createClone_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type ItriangleSelector Extends IreferenceCounted Abstract
	Method GetSelector:ItriangleSelector(_index:Int)
		Local _ret:Byte Ptr = .ITriangleSelector_getSelector_OVERLOAD_0(Self._ptr, _index)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSelectorCount:Int()
		Local _ret:Int = .ITriangleSelector_getSelectorCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTriangles(_triangles:Triangle3df, _arraySize:Int, _outTriangleCount:Byte Ptr, _transform:Matrix4 = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_triangles)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_transform)
		If _transform = Null
			.ITriangleSelector_getTriangles_OVERLOAD_1(Self._ptr, p0, _arraySize, _outTriangleCount)
		Else
			.ITriangleSelector_getTriangles_OVERLOAD_0(Self._ptr, p0, _arraySize, _outTriangleCount, p3)
		EndIf
	End Method
	Method GetTrianglesWithTrianglesArraySizeOutTriangleCountBox(_triangles:Triangle3df, _arraySize:Int, _outTriangleCount:Byte Ptr, _box:Aabbox3df, _transform:Matrix4 = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_triangles)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_transform)
		If _transform = Null
			.ITriangleSelector_getTriangles_OVERLOAD_3(Self._ptr, p0, _arraySize, _outTriangleCount, p3)
		Else
			.ITriangleSelector_getTriangles_OVERLOAD_2(Self._ptr, p0, _arraySize, _outTriangleCount, p3, p4)
		EndIf
	End Method
	Method GetTrianglesWithTrianglesArraySizeOutTriangleCountLine(_triangles:Triangle3df, _arraySize:Int, _outTriangleCount:Byte Ptr, _line:Line3df, _transform:Matrix4 = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_triangles)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_line)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_transform)
		If _transform = Null
			.ITriangleSelector_getTriangles_OVERLOAD_5(Self._ptr, p0, _arraySize, _outTriangleCount, p3)
		Else
			.ITriangleSelector_getTriangles_OVERLOAD_4(Self._ptr, p0, _arraySize, _outTriangleCount, p3, p4)
		EndIf
	End Method
	Method GetSceneNodeForTriangle:IsceneNode(_triangleIndex:Int)
		Local _ret:Byte Ptr = .ITriangleSelector_getSceneNodeForTriangle(Self._ptr, _triangleIndex)
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTriangleCount:Int()
		Local _ret:Int = .ITriangleSelector_getTriangleCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iattributes Extends IreferenceCounted Abstract
	Method AddBox3d(_attributeName:Byte Ptr, _v:Aabbox3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addBox3d(Self._ptr, _attributeName, p1)
	End Method
	Method AddTexture(_attributeName:Byte Ptr, _texture:Itexture, _filename:Path = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		If _filename = Null
			.IAttributes_addTexture_OVERLOAD_1(Self._ptr, _attributeName, p1)
		Else
			.IAttributes_addTexture_OVERLOAD_0(Self._ptr, _attributeName, p1, p2)
		EndIf
	End Method
	Method GetAttributeAsPlane3d:Plane3df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsPlane3d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsPlane3dWithIndex:Plane3df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsPlane3d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Write:Int(_writer:Ixmlwriter, _writeXMLHeader:Int = -2147483648, _elementName:String = Null)
		Local cs2:Byte Ptr = _elementName.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _elementName.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_writer)
		Local _ret:Int
		If _writeXMLHeader = -2147483648
			_ret = .IAttributes_write_OVERLOAD_2(Self._ptr, p0)
		ElseIf _elementName = Null
			_ret = .IAttributes_write_OVERLOAD_1(Self._ptr, p0, _writeXMLHeader)
		Else
			_ret = .IAttributes_write_OVERLOAD_0(Self._ptr, p0, _writeXMLHeader, ws2)
		EndIf
		MemFree cs2 ; _CStdFree ws2
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsLine2d:Line2df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsLine2d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsLine2dWithIndex:Line2df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsLine2d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsInt:Int(_attributeName:Byte Ptr)
		Local _ret:Int = .IAttributes_getAttributeAsInt_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsIntWithIndex:Int(_index:Int)
		Local _ret:Int = .IAttributes_getAttributeAsInt_OVERLOAD_1(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsFloat:Float(_attributeName:Byte Ptr)
		Local _ret:Float = .IAttributes_getAttributeAsFloat_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetAttributeAsFloatWithIndex:Float(_index:Int)
		Local _ret:Float = .IAttributes_getAttributeAsFloat_OVERLOAD_1(Self._ptr, _index)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetAttributeEnumerationLiteralsOfEnumeration(_attributeName:Byte Ptr, _outLiterals:TStringList)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outLiterals)
		.IAttributes_getAttributeEnumerationLiteralsOfEnumeration_OVERLOAD_0(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeEnumerationLiteralsOfEnumerationWithIndexOutLiterals(_index:Int, _outLiterals:TStringList)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outLiterals)
		.IAttributes_getAttributeEnumerationLiteralsOfEnumeration_OVERLOAD_1(Self._ptr, _index, p1)
	End Method
	Method AddFloat(_attributeName:Byte Ptr, _value:Float)
		.IAttributes_addFloat(Self._ptr, _attributeName, _value)
	End Method
	Method GetAttributeAsPosition2d:Vector2di(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsPosition2d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsPosition2dWithIndex:Vector2di(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsPosition2d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddQuaternion(_attributeName:Byte Ptr, _v:Quaternion)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addQuaternion(Self._ptr, _attributeName, p1)
	End Method
	Method AddArray(_attributeName:Byte Ptr, _value:Byte Ptr)
		.IAttributes_addArray(Self._ptr, _attributeName, _value)
	End Method
	Method ExistsAttribute:Int(_attributeName:Byte Ptr)
		Local _ret:Int = .IAttributes_existsAttribute(Self._ptr, _attributeName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddColorf(_attributeName:Byte Ptr, _value:Scolorf)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addColorf(Self._ptr, _attributeName, p1)
	End Method
	Method AddMatrix(_attributeName:Byte Ptr, _v:Matrix4)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addMatrix(Self._ptr, _attributeName, p1)
	End Method
	Method Clear()
		.IAttributes_clear(Self._ptr)
	End Method
	Method GetAttributeAsRect:Recti(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsRect_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsRectWithIndex:Recti(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsRect_OVERLOAD_1(Self._ptr, _index)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddRect(_attributeName:Byte Ptr, _value:Recti)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addRect(Self._ptr, _attributeName, p1)
	End Method
	Method FindAttribute:Int(_attributeName:Byte Ptr)
		Local _ret:Int = .IAttributes_findAttribute(Self._ptr, _attributeName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Read:Int(_reader:Byte Ptr, _readCurrentElementOnly:Int = -2147483648, _elementName:String = Null)
		Local cs2:Byte Ptr = _elementName.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _elementName.Length)
		Local _ret:Int
		If _readCurrentElementOnly = -2147483648
			_ret = .IAttributes_read_OVERLOAD_2(Self._ptr, _reader)
		ElseIf _elementName = Null
			_ret = .IAttributes_read_OVERLOAD_1(Self._ptr, _reader, _readCurrentElementOnly)
		Else
			_ret = .IAttributes_read_OVERLOAD_0(Self._ptr, _reader, _readCurrentElementOnly, ws2)
		EndIf
		MemFree cs2 ; _CStdFree ws2
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAttribute(_attributeName:Byte Ptr, _value:Int)
		.IAttributes_setAttribute_OVERLOAD_0(Self._ptr, _attributeName, _value)
	End Method
	Method SetAttributeWithIndexValue(_index:Int, _value:Int)
		.IAttributes_setAttribute_OVERLOAD_1(Self._ptr, _index, _value)
	End Method
	Method SetAttributeWithAttributeNameValue(_attributeName:Byte Ptr, _value:Float)
		.IAttributes_setAttribute_OVERLOAD_2(Self._ptr, _attributeName, _value)
	End Method
	Method SetAttributeWithIntFloat(_index:Int, _value:Float)
		.IAttributes_setAttribute_OVERLOAD_3(Self._ptr, _index, _value)
	End Method
	Method SetAttributeWithByte_PtrByte_Ptr(_attributeName:Byte Ptr, _value:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_4(Self._ptr, _attributeName, _value)
	End Method
	Method SetAttributeWithIntByte_Ptr(_index:Int, _value:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_5(Self._ptr, _index, _value)
	End Method
	Method SetAttributeWithByte_PtrString(_attributeName:Byte Ptr, _value:String)
		Local cs1:Byte Ptr = _value.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _value.Length)
		.IAttributes_setAttribute_OVERLOAD_6(Self._ptr, _attributeName, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method SetAttributeWithIntString(_index:Int, _value:String)
		Local cs1:Byte Ptr = _value.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _value.Length)
		.IAttributes_setAttribute_OVERLOAD_7(Self._ptr, _index, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method SetAttributeWithAttributeNameDataDataSizeInBytes(_attributeName:Byte Ptr, _data:Byte Ptr, _dataSizeInBytes:Int)
		.IAttributes_setAttribute_OVERLOAD_8(Self._ptr, _attributeName, _data, _dataSizeInBytes)
	End Method
	Method SetAttributeWithIndexDataDataSizeInBytes(_index:Int, _data:Byte Ptr, _dataSizeInBytes:Int)
		.IAttributes_setAttribute_OVERLOAD_9(Self._ptr, _index, _data, _dataSizeInBytes)
	End Method
	Method SetAttributeWithByte_PtrInt(_attributeName:Byte Ptr, _value:Int)
		.IAttributes_setAttribute_OVERLOAD_12(Self._ptr, _attributeName, _value)
	End Method
	Method SetAttributeWithIntInt(_index:Int, _value:Int)
		.IAttributes_setAttribute_OVERLOAD_13(Self._ptr, _index, _value)
	End Method
	Method SetAttributeWithAttributeNameEnumValueEnumerationLiterals(_attributeName:Byte Ptr, _enumValue:Byte Ptr, _enumerationLiterals:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_14(Self._ptr, _attributeName, _enumValue, _enumerationLiterals)
	End Method
	Method SetAttributeWithIndexEnumValueEnumerationLiterals(_index:Int, _enumValue:Byte Ptr, _enumerationLiterals:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_15(Self._ptr, _index, _enumValue, _enumerationLiterals)
	End Method
	Method SetAttributeWithAttributeNameColor(_attributeName:Byte Ptr, _color:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IAttributes_setAttribute_OVERLOAD_16(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIndexColor(_index:Int, _color:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IAttributes_setAttribute_OVERLOAD_17(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrScolorf(_attributeName:Byte Ptr, _color:Scolorf)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IAttributes_setAttribute_OVERLOAD_18(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntScolorf(_index:Int, _color:Scolorf)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IAttributes_setAttribute_OVERLOAD_19(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithAttributeNameV(_attributeName:Byte Ptr, _v:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_20(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIndexV(_index:Int, _v:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_21(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrVector2df(_attributeName:Byte Ptr, _v:Vector2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_22(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntVector2df(_index:Int, _v:Vector2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_23(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrVector2di(_attributeName:Byte Ptr, _v:Vector2di)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_24(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntVector2di(_index:Int, _v:Vector2di)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_25(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrRecti(_attributeName:Byte Ptr, _v:Recti)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_26(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntRecti(_index:Int, _v:Recti)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_27(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrDimension2du(_attributeName:Byte Ptr, _v:Dimension2du)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_28(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntDimension2du(_index:Int, _v:Dimension2du)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_29(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrMatrix4(_attributeName:Byte Ptr, _v:Matrix4)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_30(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntMatrix4(_index:Int, _v:Matrix4)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_31(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrQuaternion(_attributeName:Byte Ptr, _v:Quaternion)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_32(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntQuaternion(_index:Int, _v:Quaternion)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_33(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrAabbox3df(_attributeName:Byte Ptr, _v:Aabbox3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_34(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntAabbox3df(_index:Int, _v:Aabbox3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_35(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrPlane3df(_attributeName:Byte Ptr, _v:Plane3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_36(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntPlane3df(_index:Int, _v:Plane3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_37(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrTriangle3df(_attributeName:Byte Ptr, _v:Triangle3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_38(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntTriangle3df(_index:Int, _v:Triangle3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_39(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrLine2df(_attributeName:Byte Ptr, _v:Line2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_40(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntLine2df(_index:Int, _v:Line2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_41(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithByte_PtrLine3df(_attributeName:Byte Ptr, _v:Line3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_42(Self._ptr, _attributeName, p1)
	End Method
	Method SetAttributeWithIntLine3df(_index:Int, _v:Line3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_setAttribute_OVERLOAD_43(Self._ptr, _index, p1)
	End Method
	Method SetAttributeWithAttributeNameTexture(_attributeName:Byte Ptr, _texture:Itexture, _filename:Path = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		If _filename = Null
			.IAttributes_setAttribute_OVERLOAD_45(Self._ptr, _attributeName, p1)
		Else
			.IAttributes_setAttribute_OVERLOAD_44(Self._ptr, _attributeName, p1, p2)
		EndIf
	End Method
	Method SetAttributeWithIndexTexture(_index:Int, _texture:Itexture, _filename:Path = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		If _filename = Null
			.IAttributes_setAttribute_OVERLOAD_47(Self._ptr, _index, p1)
		Else
			.IAttributes_setAttribute_OVERLOAD_46(Self._ptr, _index, p1, p2)
		EndIf
	End Method
	Method SetAttributeWithAttributeNameUserPointer(_attributeName:Byte Ptr, _userPointer:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_48(Self._ptr, _attributeName, _userPointer)
	End Method
	Method SetAttributeWithIndexUserPointer(_index:Int, _userPointer:Byte Ptr)
		.IAttributes_setAttribute_OVERLOAD_49(Self._ptr, _index, _userPointer)
	End Method
	Method GetAttributeAsBinaryData(_attributeName:Byte Ptr, _outData:Byte Ptr, _maxSizeInBytes:Int)
		.IAttributes_getAttributeAsBinaryData_OVERLOAD_0(Self._ptr, _attributeName, _outData, _maxSizeInBytes)
	End Method
	Method GetAttributeAsBinaryDataWithIndexOutDataMaxSizeInBytes(_index:Int, _outData:Byte Ptr, _maxSizeInBytes:Int)
		.IAttributes_getAttributeAsBinaryData_OVERLOAD_1(Self._ptr, _index, _outData, _maxSizeInBytes)
	End Method
	Method AddString(_attributeName:Byte Ptr, _value:Byte Ptr)
		.IAttributes_addString_OVERLOAD_0(Self._ptr, _attributeName, _value)
	End Method
	Method AddStringWithAttributeNameValue(_attributeName:Byte Ptr, _value:String)
		Local cs1:Byte Ptr = _value.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _value.Length)
		.IAttributes_addString_OVERLOAD_1(Self._ptr, _attributeName, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method GetAttributeName:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeName(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsEnumeration:Byte Ptr(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsEnumeration_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsEnumerationWithAttributeNameEnumerationLiteralsToUse:Int(_attributeName:Byte Ptr, _enumerationLiteralsToUse:Byte Ptr)
		Local _ret:Int = .IAttributes_getAttributeAsEnumeration_OVERLOAD_1(Self._ptr, _attributeName, _enumerationLiteralsToUse)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsEnumerationWithIndexEnumerationLiteralsToUse:Int(_index:Int, _enumerationLiteralsToUse:Byte Ptr)
		Local _ret:Int = .IAttributes_getAttributeAsEnumeration_OVERLOAD_2(Self._ptr, _index, _enumerationLiteralsToUse)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsEnumerationWithIndex:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsEnumeration_OVERLOAD_3(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsVector3d:Vector3df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsVector3d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsVector3dWithIndex:Vector3df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsVector3d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddUserPointer(_attributeName:Byte Ptr, _userPointer:Byte Ptr)
		.IAttributes_addUserPointer(Self._ptr, _attributeName, _userPointer)
	End Method
	Method GetAttributeAsQuaternion:Quaternion(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsQuaternion_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsQuaternionWithIndex:Quaternion(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsQuaternion_OVERLOAD_1(Self._ptr, _index)
		Local rval:Quaternion = Quaternion(New _Quaternion._withPtr(_ret)._withDel(delete_Quaternion))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsColorf:Scolorf(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsColorf_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsColorfWithIndex:Scolorf(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsColorf_OVERLOAD_1(Self._ptr, _index)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsArray:Byte Ptr(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsArray_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsArrayWithIndex:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsArray_OVERLOAD_1(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsVector2d:Vector2df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsVector2d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsVector2dWithIndex:Vector2df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsVector2d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddLine3d(_attributeName:Byte Ptr, _v:Line3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addLine3d(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeAsBox3d:Aabbox3df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsBox3d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsBox3dWithIndex:Aabbox3df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsBox3d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddVector3d(_attributeName:Byte Ptr, _value:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addVector3d(Self._ptr, _attributeName, p1)
	End Method
	Method AddBinary(_attributeName:Byte Ptr, _data:Byte Ptr, _dataSizeInBytes:Int)
		.IAttributes_addBinary(Self._ptr, _attributeName, _data, _dataSizeInBytes)
	End Method
	Method GetAttributeAsStringW:String(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsStringW_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeAsStringWWithAttributeNameTarget(_attributeName:Byte Ptr, _target:String)
		Local cs1:Byte Ptr = _target.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _target.Length)
		.IAttributes_getAttributeAsStringW_OVERLOAD_1(Self._ptr, _attributeName, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method GetAttributeAsStringWWithIndex:String(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsStringW_OVERLOAD_2(Self._ptr, _index)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeAsUserPointer:Byte Ptr(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsUserPointer_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsUserPointerWithIndex:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsUserPointer_OVERLOAD_1(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetAttributeAsBool:Int(_attributeName:Byte Ptr)
		Local _ret:Int = .IAttributes_getAttributeAsBool_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeAsBoolWithIndex:Int(_index:Int)
		Local _ret:Int = .IAttributes_getAttributeAsBool_OVERLOAD_1(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddColor(_attributeName:Byte Ptr, _value:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addColor(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeType:Int(_attributeName:Byte Ptr)
		Local _ret:Int = .IAttributes_getAttributeType_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAttributeTypeWithIndex:Int(_index:Int)
		Local _ret:Int = .IAttributes_getAttributeType_OVERLOAD_1(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddTriangle3d(_attributeName:Byte Ptr, _v:Triangle3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addTriangle3d(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeAsMatrix:Matrix4(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsMatrix_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsMatrixWithIndex:Matrix4(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsMatrix_OVERLOAD_1(Self._ptr, _index)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddPlane3d(_attributeName:Byte Ptr, _v:Plane3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addPlane3d(Self._ptr, _attributeName, p1)
	End Method
	Method AddLine2d(_attributeName:Byte Ptr, _v:Line2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v)
		.IAttributes_addLine2d(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeAsTexture:Itexture(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsTexture_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsTextureWithIndex:Itexture(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsTexture_OVERLOAD_1(Self._ptr, _index)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeTypeString:String(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeTypeString_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeTypeStringWithIndex:String(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeTypeString_OVERLOAD_1(Self._ptr, _index)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeCount:Int()
		Local _ret:Int = .IAttributes_getAttributeCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddInt(_attributeName:Byte Ptr, _value:Int)
		.IAttributes_addInt(Self._ptr, _attributeName, _value)
	End Method
	Method AddVector2d(_attributeName:Byte Ptr, _value:Vector2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addVector2d(Self._ptr, _attributeName, p1)
	End Method
	Method AddDimension2d(_attributeName:Byte Ptr, _value:Dimension2du)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addDimension2d(Self._ptr, _attributeName, p1)
	End Method
	Method GetAttributeAsDimension2d:Dimension2du(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsDimension2d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsDimension2dWithIndex:Dimension2du(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsDimension2d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsColor:Scolor(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsColor_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsColorWithIndex:Scolor(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsColor_OVERLOAD_1(Self._ptr, _index)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsTriangle3d:Triangle3df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsTriangle3d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Triangle3df = Triangle3df(New _Triangle3df._withPtr(_ret)._withDel(delete_Triangle3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsTriangle3dWithIndex:Triangle3df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsTriangle3d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Triangle3df = Triangle3df(New _Triangle3df._withPtr(_ret)._withDel(delete_Triangle3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddEnum(_attributeName:Byte Ptr, _enumValue:Byte Ptr, _enumerationLiterals:Byte Ptr)
		.IAttributes_addEnum_OVERLOAD_0(Self._ptr, _attributeName, _enumValue, _enumerationLiterals)
	End Method
	Method AddEnumWithAttributeNameEnumValueEnumerationLiterals(_attributeName:Byte Ptr, _enumValue:Int, _enumerationLiterals:Byte Ptr)
		.IAttributes_addEnum_OVERLOAD_1(Self._ptr, _attributeName, _enumValue, _enumerationLiterals)
	End Method
	Method GetAttributeAsString:String(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsString_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeAsStringWithAttributeNameTarget(_attributeName:Byte Ptr, _target:Byte Ptr)
		.IAttributes_getAttributeAsString_OVERLOAD_1(Self._ptr, _attributeName, _target)
	End Method
	Method GetAttributeAsStringWithIndex:String(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsString_OVERLOAD_2(Self._ptr, _index)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetAttributeAsLine3d:Line3df(_attributeName:Byte Ptr)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsLine3d_OVERLOAD_0(Self._ptr, _attributeName)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttributeAsLine3dWithIndex:Line3df(_index:Int)
		Local _ret:Byte Ptr = .IAttributes_getAttributeAsLine3d_OVERLOAD_1(Self._ptr, _index)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddPosition2d(_attributeName:Byte Ptr, _value:Vector2di)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_value)
		.IAttributes_addPosition2d(Self._ptr, _attributeName, p1)
	End Method
	Method AddBool(_attributeName:Byte Ptr, _value:Int)
		.IAttributes_addBool(Self._ptr, _attributeName, _value)
	End Method
End Type

Type IsceneNode Extends IattributeExchangingObject Abstract
	Method RemoveAnimator(_animator:IsceneNodeAnimator)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_animator)
		.ISceneNode_removeAnimator(Self._ptr, p0)
	End Method
	Method UpdateAbsolutePosition()
		.ISceneNode_updateAbsolutePosition(Self._ptr)
	End Method
	Method AddAnimator(_animator:IsceneNodeAnimator)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_animator)
		.ISceneNode_addAnimator(Self._ptr, p0)
	End Method
	Method IsVisible:Int()
		Local _ret:Int = .ISceneNode_isVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAbsoluteTransformation:Matrix4()
		Local _ret:Byte Ptr = .ISceneNode_getAbsoluteTransformation(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetIsDebugObject(_debugObject:Int)
		.ISceneNode_setIsDebugObject(Self._ptr, _debugObject)
	End Method
	Method GetScale:Vector3df()
		Local _ret:Byte Ptr = .ISceneNode_getScale(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetBoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .ISceneNode_getBoundingBox(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPosition:Vector3df()
		Local _ret:Byte Ptr = .ISceneNode_getPosition(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsTrulyVisible:Int()
		Local _ret:Int = .ISceneNode_isTrulyVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaterial:Smaterial(_num:Int)
		Local _ret:Byte Ptr = .ISceneNode_getMaterial(Self._ptr, _num)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDebugDataVisible(_state:Int)
		.ISceneNode_setDebugDataVisible(Self._ptr, _state)
	End Method
	Method GetTriangleSelector:ItriangleSelector()
		Local _ret:Byte Ptr = .ISceneNode_getTriangleSelector(Self._ptr)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAbsolutePosition:Vector3df()
		Local _ret:Byte Ptr = .ISceneNode_getAbsolutePosition(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMaterialTexture(_textureLayer:Int, _texture:Itexture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		.ISceneNode_setMaterialTexture(Self._ptr, _textureLayer, p1)
	End Method
	Method GetAutomaticCulling:Int()
		Local _ret:Int = .ISceneNode_getAutomaticCulling(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveAll()
		.ISceneNode_removeAll(Self._ptr)
	End Method
	Method SetRotation(_rotation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		.ISceneNode_setRotation(Self._ptr, p0)
	End Method
	Method SetId(_id:Int)
		.ISceneNode_setID(Self._ptr, _id)
	End Method
	Method SetAutomaticCulling(_state:Int)
		.ISceneNode_setAutomaticCulling(Self._ptr, _state)
	End Method
	Method GetSceneManager:IsceneManager()
		Local _ret:Byte Ptr = .ISceneNode_getSceneManager(Self._ptr)
		Local rval:IsceneManager = IsceneManager(New _IsceneManager._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetParent(_newParent:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newParent)
		.ISceneNode_setParent(Self._ptr, p0)
	End Method
	Method SetPosition(_newpos:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newpos)
		.ISceneNode_setPosition(Self._ptr, p0)
	End Method
	Method GetAnimators:IsceneNodeAnimatorList()
		Local _ret:Byte Ptr = .ISceneNode_getAnimators(Self._ptr)
		Local rval:IsceneNodeAnimatorList = IsceneNodeAnimatorList(New _IsceneNodeAnimatorList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetParent:IsceneNode()
		Local _ret:Byte Ptr = .ISceneNode_getParent(Self._ptr)
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Render()
		.ISceneNode_render(Self._ptr)
	End Method
	Method SetMaterialType(_newType:Int)
		.ISceneNode_setMaterialType(Self._ptr, _newType)
	End Method
	Method SetVisible(_isVisible:Int)
		.ISceneNode_setVisible(Self._ptr, _isVisible)
	End Method
	Method AddChild(_child:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		.ISceneNode_addChild(Self._ptr, p0)
	End Method
	Method DeserializeAttributes(_in:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		If _options = Null
			.ISceneNode_deserializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.ISceneNode_deserializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method SetScale(_scale:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		.ISceneNode_setScale(Self._ptr, p0)
	End Method
	Method GetId:Int()
		Local _ret:Int = .ISceneNode_getID(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveChild:Int(_child:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .ISceneNode_removeChild(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTriangleSelector(_selector:ItriangleSelector)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_selector)
		.ISceneNode_setTriangleSelector(Self._ptr, p0)
	End Method
	Method GetChildren:IsceneNodeList()
		Local _ret:Byte Ptr = .ISceneNode_getChildren(Self._ptr)
		Local rval:IsceneNodeList = IsceneNodeList(New _IsceneNodeList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method OnAnimate(_timeMs:Int)
		.ISceneNode_OnAnimate(Self._ptr, _timeMs)
	End Method
	Method GetMaterialCount:Int()
		Local _ret:Int = .ISceneNode_getMaterialCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsDebugDataVisible:Int()
		Local _ret:Int = .ISceneNode_isDebugDataVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRotation:Vector3df()
		Local _ret:Byte Ptr = .ISceneNode_getRotation(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetType:Int()
		Local _ret:Int = .ISceneNode_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRelativeTransformation:Matrix4()
		Local _ret:Byte Ptr = .ISceneNode_getRelativeTransformation(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetName:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNode_getName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SerializeAttributes(_out:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		If _options = Null
			.ISceneNode_serializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.ISceneNode_serializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method GetTransformedBoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .ISceneNode_getTransformedBoundingBox(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Clone:IsceneNode(_newParent:IsceneNode = Null, _newManager:IsceneManager = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newParent)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_newManager)
		Local _ret:Byte Ptr
		If _newParent = Null
			_ret = .ISceneNode_clone_OVERLOAD_2(Self._ptr)
		ElseIf _newManager = Null
			_ret = .ISceneNode_clone_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneNode_clone_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsDebugObject:Int()
		Local _ret:Int = .ISceneNode_isDebugObject(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method OnRegisterSceneNode()
		.ISceneNode_OnRegisterSceneNode(Self._ptr)
	End Method
	Method Remove()
		.ISceneNode_remove(Self._ptr)
	End Method
	Method SetName(_name:Byte Ptr)
		.ISceneNode_setName_OVERLOAD_0(Self._ptr, _name)
	End Method
	Method SetNameWithName(_name:String)
		Local cs0:Byte Ptr = _name.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		.ISceneNode_setName_OVERLOAD_1(Self._ptr, is0)
		MemFree cs0 ; delete_path is0
	End Method
	Method SetMaterialFlag(_flag:Int, _newvalue:Int)
		.ISceneNode_setMaterialFlag(Self._ptr, _flag, _newvalue)
	End Method
	Method RemoveAnimators()
		.ISceneNode_removeAnimators(Self._ptr)
	End Method
End Type

Type IboneSceneNode Extends IsceneNode Abstract
	Method setScaleHint(_scaleHint:Int)
		.IBoneSceneNode_scaleHint_set(Self._ptr, _scaleHint)
	End Method
	Method RotationHint:Int()
		Local _ret:Int = .IBoneSceneNode_rotationHint_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSkinningSpace:Int()
		Local _ret:Int = .IBoneSceneNode_getSkinningSpace(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setPositionHint(_positionHint:Int)
		.IBoneSceneNode_positionHint_set(Self._ptr, _positionHint)
	End Method
	Method ScaleHint:Int()
		Local _ret:Int = .IBoneSceneNode_scaleHint_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setRotationHint(_rotationHint:Int)
		.IBoneSceneNode_rotationHint_set(Self._ptr, _rotationHint)
	End Method
	Method GetAnimationMode:Int()
		Local _ret:Int = .IBoneSceneNode_getAnimationMode(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method UpdateAbsolutePositionOfAllChildren()
		.IBoneSceneNode_updateAbsolutePositionOfAllChildren(Self._ptr)
	End Method
	Method GetBoneName:Byte Ptr()
		Local _ret:Byte Ptr = .IBoneSceneNode_getBoneName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetSkinningSpace(_space:Int)
		.IBoneSceneNode_setSkinningSpace(Self._ptr, _space)
	End Method
	Method PositionHint:Int()
		Local _ret:Int = .IBoneSceneNode_positionHint_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAnimationMode:Int(_mode:Int)
		Local _ret:Int = .IBoneSceneNode_setAnimationMode(Self._ptr, _mode)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBoneIndex:Int()
		Local _ret:Int = .IBoneSceneNode_getBoneIndex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IanimationEndCallBack Extends IreferenceCounted Abstract
	Method OnAnimationEnd(_node:IanimatedMeshSceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.IAnimationEndCallBack_OnAnimationEnd(Self._ptr, p0)
	End Method
End Type

Type IanimatedMeshSceneNode Extends IsceneNode Abstract
	Method SetJointMode(_mode:Int)
		.IAnimatedMeshSceneNode_setJointMode(Self._ptr, _mode)
	End Method
	Method GetJointCount:Int()
		Local _ret:Int = .IAnimatedMeshSceneNode_getJointCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLoopMode(_playAnimationLooped:Int)
		.IAnimatedMeshSceneNode_setLoopMode(Self._ptr, _playAnimationLooped)
	End Method
	Method SetAnimationEndCallback(_callback:IanimationEndCallBack = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		If _callback = Null
			.IAnimatedMeshSceneNode_setAnimationEndCallback_OVERLOAD_1(Self._ptr)
		Else
			.IAnimatedMeshSceneNode_setAnimationEndCallback_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method GetLoopMode:Int()
		Local _ret:Int = .IAnimatedMeshSceneNode_getLoopMode(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAnimationSpeed(_framesPerSecond:Float)
		.IAnimatedMeshSceneNode_setAnimationSpeed(Self._ptr, _framesPerSecond)
	End Method
	Method GetEndFrame:Int()
		Local _ret:Int = .IAnimatedMeshSceneNode_getEndFrame(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTransitionTime(_Time:Float)
		.IAnimatedMeshSceneNode_setTransitionTime(Self._ptr, _Time)
	End Method
	Method SetCurrentFrame(_frame:Float)
		.IAnimatedMeshSceneNode_setCurrentFrame(Self._ptr, _frame)
	End Method
	Method GetMesh:IanimatedMesh()
		Local _ret:Byte Ptr = .IAnimatedMeshSceneNode_getMesh(Self._ptr)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Clone:IsceneNode(_newParent:IsceneNode = Null, _newManager:IsceneManager = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newParent)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_newManager)
		Local _ret:Byte Ptr
		If _newParent = Null
			_ret = .IAnimatedMeshSceneNode_clone_OVERLOAD_2(Self._ptr)
		ElseIf _newManager = Null
			_ret = .IAnimatedMeshSceneNode_clone_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IAnimatedMeshSceneNode_clone_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetRenderFromIdentity(_On:Int)
		.IAnimatedMeshSceneNode_setRenderFromIdentity(Self._ptr, _On)
	End Method
	Method IsReadOnlyMaterials:Int()
		Local _ret:Int = .IAnimatedMeshSceneNode_isReadOnlyMaterials(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMd3TagTransformation:Byte Ptr(_tagname:String)
		Local cs0:Byte Ptr = _tagname.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Byte Ptr = .IAnimatedMeshSceneNode_getMD3TagTransformation(Self._ptr, is0)
		MemFree cs0 ; delete_path is0
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method AnimateJoints(_CalculateAbsolutePositions:Int = -2147483648)
		If _CalculateAbsolutePositions = -2147483648
			.IAnimatedMeshSceneNode_animateJoints_OVERLOAD_1(Self._ptr)
		Else
			.IAnimatedMeshSceneNode_animateJoints_OVERLOAD_0(Self._ptr, _CalculateAbsolutePositions)
		EndIf
	End Method
	Method AddShadowVolumeSceneNode:IshadowVolumeSceneNode(_shadowMesh:Imesh = Null, _id:Int = -2147483648, _zfailmethod:Int = -2147483648, _infinity:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_shadowMesh)
		Local _ret:Byte Ptr
		If _shadowMesh = Null
			_ret = .IAnimatedMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_4(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .IAnimatedMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_3(Self._ptr, p0)
		ElseIf _zfailmethod = -2147483648
			_ret = .IAnimatedMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_2(Self._ptr, p0, _id)
		ElseIf _infinity = -1e100000
			_ret = .IAnimatedMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_1(Self._ptr, p0, _id, _zfailmethod)
		Else
			_ret = .IAnimatedMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_0(Self._ptr, p0, _id, _zfailmethod, _infinity)
		EndIf
		Local rval:IshadowVolumeSceneNode = IshadowVolumeSceneNode(New _IshadowVolumeSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetStartFrame:Int()
		Local _ret:Int = .IAnimatedMeshSceneNode_getStartFrame(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetJointNode:IboneSceneNode(_jointName:Byte Ptr)
		Local _ret:Byte Ptr = .IAnimatedMeshSceneNode_getJointNode_OVERLOAD_0(Self._ptr, _jointName)
		Local rval:IboneSceneNode = IboneSceneNode(New _IboneSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetJointNodeWithJointID:IboneSceneNode(_jointID:Int)
		Local _ret:Byte Ptr = .IAnimatedMeshSceneNode_getJointNode_OVERLOAD_1(Self._ptr, _jointID)
		Local rval:IboneSceneNode = IboneSceneNode(New _IboneSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMd2Animation:Int(_anim:Int)
		Local _ret:Int = .IAnimatedMeshSceneNode_setMD2Animation_OVERLOAD_0(Self._ptr, _anim)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMd2AnimationWithAnimationName:Int(_animationName:Byte Ptr)
		Local _ret:Int = .IAnimatedMeshSceneNode_setMD2Animation_OVERLOAD_1(Self._ptr, _animationName)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetFrameLoop:Int(_begin:Int, _end:Int)
		Local _ret:Int = .IAnimatedMeshSceneNode_setFrameLoop(Self._ptr, _begin, _end)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMesh(_mesh:IanimatedMesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IAnimatedMeshSceneNode_setMesh(Self._ptr, p0)
	End Method
	Method SetReadOnlyMaterials(_readonly:Int)
		.IAnimatedMeshSceneNode_setReadOnlyMaterials(Self._ptr, _readonly)
	End Method
	Method GetFrameNr:Float()
		Local _ret:Float = .IAnimatedMeshSceneNode_getFrameNr(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetAnimationSpeed:Float()
		Local _ret:Float = .IAnimatedMeshSceneNode_getAnimationSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
End Type

Type IbillboardSceneNode Extends IsceneNode Abstract
	Method SetSize(_size:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IBillboardSceneNode_setSize_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetSizeWithHeightBottomEdgeWidthTopEdgeWidth(_height:Float, _bottomEdgeWidth:Float, _topEdgeWidth:Float)
		.IBillboardSceneNode_setSize_OVERLOAD_1(Self._ptr, _height, _bottomEdgeWidth, _topEdgeWidth)
	End Method
	Method GetColor(_topColor:Scolor, _bottomColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_topColor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_bottomColor)
		.IBillboardSceneNode_getColor(Self._ptr, p0, p1)
	End Method
	Method GetSize:Dimension2df()
		Local _ret:Byte Ptr = .IBillboardSceneNode_getSize_OVERLOAD_0(Self._ptr)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSizeWithHeightBottomEdgeWidthTopEdgeWidth(_height:Byte Ptr, _bottomEdgeWidth:Byte Ptr, _topEdgeWidth:Byte Ptr)
		.IBillboardSceneNode_getSize_OVERLOAD_1(Self._ptr, _height, _bottomEdgeWidth, _topEdgeWidth)
	End Method
	Method SetColor(_overallColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_overallColor)
		.IBillboardSceneNode_setColor_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetColorWithTopColorBottomColor(_topColor:Scolor, _bottomColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_topColor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_bottomColor)
		.IBillboardSceneNode_setColor_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
End Type

Type IbillboardTextSceneNode Extends IbillboardSceneNode Abstract
	Method SetText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IBillboardTextSceneNode_setText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method SetTextColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IBillboardTextSceneNode_setTextColor(Self._ptr, p0)
	End Method
	Method SetColor(_overallColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_overallColor)
		.IBillboardTextSceneNode_setColor_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetColorWithTopColorBottomColor(_topColor:Scolor, _bottomColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_topColor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_bottomColor)
		.IBillboardTextSceneNode_setColor_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
End Type

Type IcameraSceneNode Extends ISceneNode Abstract
	Method SetInputReceiverEnabled(_enabled:Int)
		.ICameraSceneNode_setInputReceiverEnabled(Self._ptr, _enabled)
	End Method
	Method GetViewMatrixAffector:Matrix4()
		Local _ret:Byte Ptr = .ICameraSceneNode_getViewMatrixAffector(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsInputReceiverEnabled:Int()
		Local _ret:Int = .ICameraSceneNode_isInputReceiverEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetNearValue(_zn:Float)
		.ICameraSceneNode_setNearValue(Self._ptr, _zn)
	End Method
	Method DeserializeAttributes(_in:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		If _options = Null
			.ICameraSceneNode_deserializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.ICameraSceneNode_deserializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method GetFarValue:Float()
		Local _ret:Float = .ICameraSceneNode_getFarValue(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetViewMatrix:Matrix4()
		Local _ret:Byte Ptr = .ICameraSceneNode_getViewMatrix(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetNearValue:Float()
		Local _ret:Float = .ICameraSceneNode_getNearValue(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetViewMatrixAffector(_affector:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_affector)
		.ICameraSceneNode_setViewMatrixAffector(Self._ptr, p0)
	End Method
	Method GetViewFrustum:Byte Ptr()
		Local _ret:Byte Ptr = .ICameraSceneNode_getViewFrustum(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method BindTargetAndRotation(_bound:Int)
		.ICameraSceneNode_bindTargetAndRotation(Self._ptr, _bound)
	End Method
	Method GetTargetAndRotationBinding:Int()
		Local _ret:Int = .ICameraSceneNode_getTargetAndRotationBinding(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetUpVector:Vector3df()
		Local _ret:Byte Ptr = .ICameraSceneNode_getUpVector(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTarget:Vector3df()
		Local _ret:Byte Ptr = .ICameraSceneNode_getTarget(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetAspectRatio(_aspect:Float)
		.ICameraSceneNode_setAspectRatio(Self._ptr, _aspect)
	End Method
	Method SetFov(_fovy:Float)
		.ICameraSceneNode_setFOV(Self._ptr, _fovy)
	End Method
	Method GetAspectRatio:Float()
		Local _ret:Float = .ICameraSceneNode_getAspectRatio(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetUpVector(_pos:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.ICameraSceneNode_setUpVector(Self._ptr, p0)
	End Method
	Method GetFov:Float()
		Local _ret:Float = .ICameraSceneNode_getFOV(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetTarget(_pos:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.ICameraSceneNode_setTarget(Self._ptr, p0)
	End Method
	Method IsOrthogonal:Int()
		Local _ret:Int = .ICameraSceneNode_isOrthogonal(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetProjectionMatrix:Matrix4()
		Local _ret:Byte Ptr = .ICameraSceneNode_getProjectionMatrix(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetProjectionMatrix(_projection:Matrix4, _isOrthogonal:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_projection)
		If _isOrthogonal = -2147483648
			.ICameraSceneNode_setProjectionMatrix_OVERLOAD_1(Self._ptr, p0)
		Else
			.ICameraSceneNode_setProjectionMatrix_OVERLOAD_0(Self._ptr, p0, _isOrthogonal)
		EndIf
	End Method
	Method SerializeAttributes(_out:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		If _options = Null
			.ICameraSceneNode_serializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.ICameraSceneNode_serializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method SetFarValue(_zf:Float)
		.ICameraSceneNode_setFarValue(Self._ptr, _zf)
	End Method
End Type

Type IcursorControl Extends IreferenceCounted Abstract
	Method IsVisible:Int()
		Local _ret:Int = .ICursorControl_isVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddIcon:Int(_icon:Byte Ptr)
		Local _ret:Int = .ICursorControl_addIcon(Self._ptr, _icon)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPosition:Vector2di()
		Local _ret:Byte Ptr = .ICursorControl_getPosition(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetActiveIcon(_iconId:Int)
		.ICursorControl_setActiveIcon(Self._ptr, _iconId)
	End Method
	Method SetPlatformBehavior(_behavior:Int)
		.ICursorControl_setPlatformBehavior(Self._ptr, _behavior)
	End Method
	Method GetActiveIcon:Int()
		Local _ret:Int = .ICursorControl_getActiveIcon(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPosition(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.ICursorControl_setPosition_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetPositionWithXY(_x:Float, _y:Float)
		.ICursorControl_setPosition_OVERLOAD_1(Self._ptr, _x, _y)
	End Method
	Method SetPositionWithPos(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.ICursorControl_setPosition_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method SetPositionWithIntInt(_x:Int, _y:Int)
		.ICursorControl_setPosition_OVERLOAD_3(Self._ptr, _x, _y)
	End Method
	Method GetRelativePosition:Vector2df()
		Local _ret:Byte Ptr = .ICursorControl_getRelativePosition(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetVisible(_visible:Int)
		.ICursorControl_setVisible(Self._ptr, _visible)
	End Method
	Method GetSupportedIconSize:Dimension2di()
		Local _ret:Byte Ptr = .ICursorControl_getSupportedIconSize(Self._ptr)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ChangeIcon(_iconId:Int, _sprite:Byte Ptr)
		.ICursorControl_changeIcon(Self._ptr, _iconId, _sprite)
	End Method
	Method SetReferenceRect(_rect:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		If _rect = Null
			.ICursorControl_setReferenceRect_OVERLOAD_1(Self._ptr)
		Else
			.ICursorControl_setReferenceRect_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method GetPlatformBehavior:Int()
		Local _ret:Int = .ICursorControl_getPlatformBehavior(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IdummyTransformationSceneNode Extends IsceneNode Abstract
	Method GetRelativeTransformationMatrix:Matrix4()
		Local _ret:Byte Ptr = .IDummyTransformationSceneNode_getRelativeTransformationMatrix(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IgeometryCreator Extends IreferenceCounted Abstract
	Method CreateCubeMesh:Imesh(_size:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local _ret:Byte Ptr
		If _size = Null
			_ret = .IGeometryCreator_createCubeMesh_OVERLOAD_1(Self._ptr)
		Else
			_ret = .IGeometryCreator_createCubeMesh_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateSphereMesh:Imesh(_radius:Float = -1e100000, _polyCountX:Int = -2147483648, _polyCountY:Int = -2147483648)
		Local _ret:Byte Ptr
		If _radius = -1e100000
			_ret = .IGeometryCreator_createSphereMesh_OVERLOAD_3(Self._ptr)
		ElseIf _polyCountX = -2147483648
			_ret = .IGeometryCreator_createSphereMesh_OVERLOAD_2(Self._ptr, _radius)
		ElseIf _polyCountY = -2147483648
			_ret = .IGeometryCreator_createSphereMesh_OVERLOAD_1(Self._ptr, _radius, _polyCountX)
		Else
			_ret = .IGeometryCreator_createSphereMesh_OVERLOAD_0(Self._ptr, _radius, _polyCountX, _polyCountY)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateConeMesh:Imesh(_radius:Float, _length:Float, _tesselation:Int, _colorTop:Scolor = Null, _colorBottom:Scolor = Null, _oblique:Float = -1e100000)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_colorTop)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_colorBottom)
		Local _ret:Byte Ptr
		If _colorTop = Null
			_ret = .IGeometryCreator_createConeMesh_OVERLOAD_3(Self._ptr, _radius, _length, _tesselation)
		ElseIf _colorBottom = Null
			_ret = .IGeometryCreator_createConeMesh_OVERLOAD_2(Self._ptr, _radius, _length, _tesselation, p3)
		ElseIf _oblique = -1e100000
			_ret = .IGeometryCreator_createConeMesh_OVERLOAD_1(Self._ptr, _radius, _length, _tesselation, p3, p4)
		Else
			_ret = .IGeometryCreator_createConeMesh_OVERLOAD_0(Self._ptr, _radius, _length, _tesselation, p3, p4, _oblique)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateTerrainMesh:Imesh(_texture:Iimage, _heightmap:Iimage, _stretchSize:Dimension2df, _maxHeight:Float, _driver:IvideoDriver, _defaultVertexBlockSize:Dimension2du, _debugBorders:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_heightmap)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_stretchSize)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_driver)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_defaultVertexBlockSize)
		Local _ret:Byte Ptr
		If _debugBorders = -2147483648
			_ret = .IGeometryCreator_createTerrainMesh_OVERLOAD_1(Self._ptr, p0, p1, p2, _maxHeight, p4, p5)
		Else
			_ret = .IGeometryCreator_createTerrainMesh_OVERLOAD_0(Self._ptr, p0, p1, p2, _maxHeight, p4, p5, _debugBorders)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateHillPlaneMesh:Imesh(_tileSize:Dimension2df, _tileCount:Dimension2du, _material:Smaterial, _hillHeight:Float, _countHills:Dimension2df, _textureRepeatCount:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_tileSize)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_tileCount)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_countHills)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_textureRepeatCount)
		Local _ret:Byte Ptr = .IGeometryCreator_createHillPlaneMesh(Self._ptr, p0, p1, p2, _hillHeight, p4, p5)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreatePlaneMesh:Imesh(_tileSize:Dimension2df, _tileCount:Dimension2du = Null, _material:Smaterial = Null, _textureRepeatCount:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_tileSize)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_tileCount)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_textureRepeatCount)
		Local _ret:Byte Ptr
		If _tileCount = Null
			_ret = .IGeometryCreator_createPlaneMesh_OVERLOAD_3(Self._ptr, p0)
		ElseIf _material = Null
			_ret = .IGeometryCreator_createPlaneMesh_OVERLOAD_2(Self._ptr, p0, p1)
		ElseIf _textureRepeatCount = Null
			_ret = .IGeometryCreator_createPlaneMesh_OVERLOAD_1(Self._ptr, p0, p1, p2)
		Else
			_ret = .IGeometryCreator_createPlaneMesh_OVERLOAD_0(Self._ptr, p0, p1, p2, p3)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateArrowMesh:Imesh(_tesselationCylinder:Int = -2147483648, _tesselationCone:Int = -2147483648, _height:Float = -1e100000, _cylinderHeight:Float = -1e100000, _widthCylinder:Float = -1e100000, _widthCone:Float = -1e100000, _colorCylinder:Scolor = Null, _colorCone:Scolor = Null)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_colorCylinder)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_colorCone)
		Local _ret:Byte Ptr
		If _tesselationCylinder = -2147483648
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_8(Self._ptr)
		ElseIf _tesselationCone = -2147483648
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_7(Self._ptr, _tesselationCylinder)
		ElseIf _height = -1e100000
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_6(Self._ptr, _tesselationCylinder, _tesselationCone)
		ElseIf _cylinderHeight = -1e100000
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_5(Self._ptr, _tesselationCylinder, _tesselationCone, _height)
		ElseIf _widthCylinder = -1e100000
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_4(Self._ptr, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight)
		ElseIf _widthCone = -1e100000
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_3(Self._ptr, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder)
		ElseIf _colorCylinder = Null
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_2(Self._ptr, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder, _widthCone)
		ElseIf _colorCone = Null
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_1(Self._ptr, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder, _widthCone, p6)
		Else
			_ret = .IGeometryCreator_createArrowMesh_OVERLOAD_0(Self._ptr, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder, _widthCone, p6, p7)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateCylinderMesh:Imesh(_radius:Float, _length:Float, _tesselation:Int, _color:Scolor = Null, _closeTop:Int = -2147483648, _oblique:Float = -1e100000)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Byte Ptr
		If _color = Null
			_ret = .IGeometryCreator_createCylinderMesh_OVERLOAD_3(Self._ptr, _radius, _length, _tesselation)
		ElseIf _closeTop = -2147483648
			_ret = .IGeometryCreator_createCylinderMesh_OVERLOAD_2(Self._ptr, _radius, _length, _tesselation, p3)
		ElseIf _oblique = -1e100000
			_ret = .IGeometryCreator_createCylinderMesh_OVERLOAD_1(Self._ptr, _radius, _length, _tesselation, p3, _closeTop)
		Else
			_ret = .IGeometryCreator_createCylinderMesh_OVERLOAD_0(Self._ptr, _radius, _length, _tesselation, p3, _closeTop, _oblique)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateVolumeLightMesh:Imesh(_subdivideU:Int = -2147483648, _subdivideV:Int = -2147483648, _footColor:Scolor = Null, _tailColor:Scolor = Null, _lpDistance:Float = -1e100000, _lightDim:Vector3df = Null)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_footColor)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_tailColor)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_lightDim)
		Local _ret:Byte Ptr
		If _subdivideU = -2147483648
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_6(Self._ptr)
		ElseIf _subdivideV = -2147483648
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_5(Self._ptr, _subdivideU)
		ElseIf _footColor = Null
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_4(Self._ptr, _subdivideU, _subdivideV)
		ElseIf _tailColor = Null
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_3(Self._ptr, _subdivideU, _subdivideV, p2)
		ElseIf _lpDistance = -1e100000
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_2(Self._ptr, _subdivideU, _subdivideV, p2, p3)
		ElseIf _lightDim = Null
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_1(Self._ptr, _subdivideU, _subdivideV, p2, p3, _lpDistance)
		Else
			_ret = .IGeometryCreator_createVolumeLightMesh_OVERLOAD_0(Self._ptr, _subdivideU, _subdivideV, p2, p3, _lpDistance, p5)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IgpuprogrammingServices Extends _irrlicht_Object Abstract
	Method AddShaderMaterial:Int(_vertexShaderProgram:Byte Ptr = Null, _pixelShaderProgram:Byte Ptr = Null, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _vertexShaderProgram = Null
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_5(Self._ptr)
		ElseIf _pixelShaderProgram = Null
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_4(Self._ptr, _vertexShaderProgram)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_3(Self._ptr, _vertexShaderProgram, _pixelShaderProgram)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_2(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_1(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addShaderMaterial_OVERLOAD_0(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddShaderMaterialFromFiles:Int(_vertexShaderProgram:IreadFile, _pixelShaderProgram:IreadFile, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgram)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgram)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _callback = Null
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_2(Self._ptr, p0, p1, p2)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_1(Self._ptr, p0, p1, p2, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_0(Self._ptr, p0, p1, p2, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddShaderMaterialFromFilesWithVertexShaderProgramFileNamePixelShaderProgramFileName:Int(_vertexShaderProgramFileName:Path, _pixelShaderProgramFileName:Path, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgramFileName)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgramFileName)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _callback = Null
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_7(Self._ptr, p0, p1)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_6(Self._ptr, p0, p1, p2)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_5(Self._ptr, p0, p1, p2, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addShaderMaterialFromFiles_OVERLOAD_4(Self._ptr, p0, p1, p2, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterial:Int(_vertexShaderProgram:Byte Ptr, _vertexShaderEntryPointName:Byte Ptr, _vsCompileTarget:Int, _pixelShaderProgram:Byte Ptr, _pixelShaderEntryPointName:Byte Ptr, _psCompileTarget:Int, _geometryShaderProgram:Byte Ptr, _geometryShaderEntryPointName:Byte Ptr = Null, _gsCompileTarget:Int = -2147483648, _inType:Int = -2147483648, _outType:Int = -2147483648, _verticesOut:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p12:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _geometryShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_9(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram)
		ElseIf _gsCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_8(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName)
		ElseIf _inType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_7(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget)
		ElseIf _outType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_6(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType)
		ElseIf _verticesOut = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_5(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_4(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_3(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_2(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_1(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_0(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, _geometryShaderProgram, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialWithVertexShaderProgramVertexShaderEntryPointNameVsCompileTarget:Int(_vertexShaderProgram:Byte Ptr, _vertexShaderEntryPointName:Byte Ptr, _vsCompileTarget:Int, _pixelShaderProgram:Byte Ptr = Null, _pixelShaderEntryPointName:Byte Ptr = Null, _psCompileTarget:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _pixelShaderProgram = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_17(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget)
		ElseIf _pixelShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_16(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram)
		ElseIf _psCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_15(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_14(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_13(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, p6)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_12(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_11(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_10(Self._ptr, _vertexShaderProgram, _vertexShaderEntryPointName, _vsCompileTarget, _pixelShaderProgram, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialWithVertexShaderProgramPixelShaderProgramCallback:Int(_vertexShaderProgram:Byte Ptr, _pixelShaderProgram:Byte Ptr, _callback:IshaderConstantSetCallBack, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_20(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_19(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_18(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, p2, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialWithVertexShaderProgramPixelShaderProgramGeometryShaderProgram:Int(_vertexShaderProgram:Byte Ptr, _pixelShaderProgram:Byte Ptr, _geometryShaderProgram:Byte Ptr, _inType:Int = -2147483648, _outType:Int = -2147483648, _verticesOut:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _inType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_27(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram)
		ElseIf _outType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_26(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType)
		ElseIf _verticesOut = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_25(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType, _outType)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_24(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType, _outType, _verticesOut)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_23(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType, _outType, _verticesOut, p6)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_22(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType, _outType, _verticesOut, p6, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterial_OVERLOAD_21(Self._ptr, _vertexShaderProgram, _pixelShaderProgram, _geometryShaderProgram, _inType, _outType, _verticesOut, p6, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFiles:Int(_vertexShaderProgramFileName:Path, _vertexShaderEntryPointName:Byte Ptr, _vsCompileTarget:Int, _pixelShaderProgramFileName:Path, _pixelShaderEntryPointName:Byte Ptr, _psCompileTarget:Int, _geometryShaderProgramFileName:Path, _geometryShaderEntryPointName:Byte Ptr = Null, _gsCompileTarget:Int = -2147483648, _inType:Int = -2147483648, _outType:Int = -2147483648, _verticesOut:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgramFileName)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgramFileName)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_geometryShaderProgramFileName)
		Local p12:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _geometryShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_9(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6)
		ElseIf _gsCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_8(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName)
		ElseIf _inType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_7(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget)
		ElseIf _outType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_6(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType)
		ElseIf _verticesOut = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_5(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_4(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_3(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_2(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_1(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_0(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFilesWithVertexShaderProgramFileNameVertexShaderEntryPointName:Int(_vertexShaderProgramFileName:Path, _vertexShaderEntryPointName:Byte Ptr, _vsCompileTarget:Int = -2147483648, _pixelShaderProgramFileName:Path = Null, _pixelShaderEntryPointName:Byte Ptr = Null, _psCompileTarget:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgramFileName)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgramFileName)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _vsCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_18(Self._ptr, p0, _vertexShaderEntryPointName)
		ElseIf _pixelShaderProgramFileName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_17(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget)
		ElseIf _pixelShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_16(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3)
		ElseIf _psCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_15(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_14(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_13(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_12(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_11(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_10(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFilesWithVertexShaderProgramFileNamePixelShaderProgramFileNameCallback:Int(_vertexShaderProgramFileName:Path, _pixelShaderProgramFileName:Path, _callback:IshaderConstantSetCallBack, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgramFileName)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgramFileName)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_21(Self._ptr, p0, p1, p2)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_20(Self._ptr, p0, p1, p2, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_19(Self._ptr, p0, p1, p2, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFilesWithVertexShaderProgramFileNamePixelShaderProgramFileNameGeometryShaderProgramFileName:Int(_vertexShaderProgramFileName:Path, _pixelShaderProgramFileName:Path, _geometryShaderProgramFileName:Path, _inType:Int = -2147483648, _outType:Int = -2147483648, _verticesOut:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgramFileName)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgramFileName)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_geometryShaderProgramFileName)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _inType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_28(Self._ptr, p0, p1, p2)
		ElseIf _outType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_27(Self._ptr, p0, p1, p2, _inType)
		ElseIf _verticesOut = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_26(Self._ptr, p0, p1, p2, _inType, _outType)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_25(Self._ptr, p0, p1, p2, _inType, _outType, _verticesOut)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_24(Self._ptr, p0, p1, p2, _inType, _outType, _verticesOut, p6)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_23(Self._ptr, p0, p1, p2, _inType, _outType, _verticesOut, p6, _baseMaterial)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_22(Self._ptr, p0, p1, p2, _inType, _outType, _verticesOut, p6, _baseMaterial, _userData)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFilesWithVertexShaderProgramVertexShaderEntryPointNameVsCompileTargetPixelShaderProgramPixelShaderEntryPointNamePsCompileTargetGeometryShaderProgram:Int(_vertexShaderProgram:IreadFile, _vertexShaderEntryPointName:Byte Ptr, _vsCompileTarget:Int, _pixelShaderProgram:IreadFile, _pixelShaderEntryPointName:Byte Ptr, _psCompileTarget:Int, _geometryShaderProgram:IreadFile, _geometryShaderEntryPointName:Byte Ptr = Null, _gsCompileTarget:Int = -2147483648, _inType:Int = -2147483648, _outType:Int = -2147483648, _verticesOut:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgram)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgram)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_geometryShaderProgram)
		Local p12:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _geometryShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_38(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6)
		ElseIf _gsCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_37(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName)
		ElseIf _inType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_36(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget)
		ElseIf _outType = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_35(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType)
		ElseIf _verticesOut = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_34(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_33(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_32(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_31(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_30(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_29(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _geometryShaderEntryPointName, _gsCompileTarget, _inType, _outType, _verticesOut, p12, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddHighLevelShaderMaterialFromFilesWithVertexShaderProgram:Int(_vertexShaderProgram:IreadFile, _vertexShaderEntryPointName:Byte Ptr = Null, _vsCompileTarget:Int = -2147483648, _pixelShaderProgram:IreadFile = Null, _pixelShaderEntryPointName:Byte Ptr = Null, _psCompileTarget:Int = -2147483648, _callback:IshaderConstantSetCallBack = Null, _baseMaterial:Int = -2147483648, _userData:Int = -2147483648, _shadingLang:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vertexShaderProgram)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_pixelShaderProgram)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		Local _ret:Int
		If _vertexShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_48(Self._ptr, p0)
		ElseIf _vsCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_47(Self._ptr, p0, _vertexShaderEntryPointName)
		ElseIf _pixelShaderProgram = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_46(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget)
		ElseIf _pixelShaderEntryPointName = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_45(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3)
		ElseIf _psCompileTarget = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_44(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName)
		ElseIf _callback = Null
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_43(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget)
		ElseIf _baseMaterial = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_42(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6)
		ElseIf _userData = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_41(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial)
		ElseIf _shadingLang = -2147483648
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_40(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData)
		Else
			_ret = .IGPUProgrammingServices_addHighLevelShaderMaterialFromFiles_OVERLOAD_39(Self._ptr, p0, _vertexShaderEntryPointName, _vsCompileTarget, p3, _pixelShaderEntryPointName, _psCompileTarget, p6, _baseMaterial, _userData, _shadingLang)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iguielement Extends IeventReceiver Abstract
	Method GetNextElement:Int(_startOrder:Int, _reverse:Int, _group:Int, _first:Iguielement, _closest:Iguielement, _includeInvisible:Int = -2147483648)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_first)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_closest)
		Local _ret:Int
		If _includeInvisible = -2147483648
			_ret = .IGUIElement_getNextElement_OVERLOAD_1(Self._ptr, _startOrder, _reverse, _group, p3, p4)
		Else
			_ret = .IGUIElement_getNextElement_OVERLOAD_0(Self._ptr, _startOrder, _reverse, _group, p3, p4, _includeInvisible)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMinSize(_size:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IGUIElement_setMinSize(Self._ptr, p0)
	End Method
	Method SetTabGroup(_isGroup:Int)
		.IGUIElement_setTabGroup(Self._ptr, _isGroup)
	End Method
	Method GetName:Byte Ptr()
		Local _ret:Byte Ptr = .IGUIElement_getName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method IsVisible:Int()
		Local _ret:Int = .IGUIElement_isVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method OnPostRender(_timeMs:Int)
		.IGUIElement_OnPostRender(Self._ptr, _timeMs)
	End Method
	Method UpdateAbsolutePosition()
		.IGUIElement_updateAbsolutePosition(Self._ptr)
	End Method
	Method SendToBack:Int(_child:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .IGUIElement_sendToBack(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetNotClipped(_noClip:Int)
		.IGUIElement_setNotClipped(Self._ptr, _noClip)
	End Method
	Function MakeWithTypeEnvironmentParentIdRectangle:Iguielement(_type:Int, _environment:Iguienvironment, _parent:Iguielement, _id:Int, _rectangle:Recti)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_environment)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local _ret:Byte Ptr = .new_IGUIElement(_type, p1, p2, _id, p4)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret)._withDel(delete_Iguielement))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetEnabled(_enabled:Int)
		.IGUIElement_setEnabled(Self._ptr, _enabled)
	End Method
	Method GetElementFromPoint:Iguielement(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .IGUIElement_getElementFromPoint(Self._ptr, p0)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method HasType:Int(_type:Int)
		Local _ret:Int = .IGUIElement_hasType(Self._ptr, _type)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAbsolutePosition:Recti()
		Local _ret:Byte Ptr = .IGUIElement_getAbsolutePosition(Self._ptr)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsTabGroup:Int()
		Local _ret:Int = .IGUIElement_isTabGroup(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTabOrder(_index:Int)
		.IGUIElement_setTabOrder(Self._ptr, _index)
	End Method
	Method SetName(_name:Byte Ptr)
		.IGUIElement_setName_OVERLOAD_0(Self._ptr, _name)
	End Method
	Method SetNameWithName(_name:String)
		Local cs0:Byte Ptr = _name.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		.IGUIElement_setName_OVERLOAD_1(Self._ptr, is0)
		MemFree cs0 ; delete_path is0
	End Method
	Method Draw()
		.IGUIElement_draw(Self._ptr)
	End Method
	Method SetRelativePosition(_r:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_r)
		.IGUIElement_setRelativePosition_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetRelativePositionWithPosition(_position:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_position)
		.IGUIElement_setRelativePosition_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method GetRelativePosition:Recti()
		Local _ret:Byte Ptr = .IGUIElement_getRelativePosition(Self._ptr)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsPointInside:Int(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .IGUIElement_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetId(_id:Int)
		.IGUIElement_setID(Self._ptr, _id)
	End Method
	Method GetTypeName:Byte Ptr()
		Local _ret:Byte Ptr = .IGUIElement_getTypeName(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method BringToFront:Int(_element:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .IGUIElement_bringToFront(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsMyChild:Int(_child:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .IGUIElement_isMyChild(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsSubElement:Int()
		Local _ret:Int = .IGUIElement_isSubElement(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetChildren:Byte Ptr()
		Local _ret:Byte Ptr = .IGUIElement_getChildren(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetVisible(_visible:Int)
		.IGUIElement_setVisible(Self._ptr, _visible)
	End Method
	Method GetToolTipText:String()
		Local _ret:Byte Ptr = .IGUIElement_getToolTipText(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method DeserializeAttributes(_in:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		If _options = Null
			.IGUIElement_deserializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IGUIElement_deserializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method GetId:Int()
		Local _ret:Int = .IGUIElement_getID(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsEnabled:Int()
		Local _ret:Int = .IGUIElement_isEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveChild(_child:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		.IGUIElement_removeChild(Self._ptr, p0)
	End Method
	Method IsTabStop:Int()
		Local _ret:Int = .IGUIElement_isTabStop(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMaxSize(_size:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IGUIElement_setMaxSize(Self._ptr, p0)
	End Method
	Method SetTabStop(_enable:Int)
		.IGUIElement_setTabStop(Self._ptr, _enable)
	End Method
	Method SetAlignment(_left:Int, _right:Int, _top:Int, _bottom:Int)
		.IGUIElement_setAlignment(Self._ptr, _left, _right, _top, _bottom)
	End Method
	Method SetRelativePositionProportional(_r:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_r)
		.IGUIElement_setRelativePositionProportional(Self._ptr, p0)
	End Method
	Method SetSubElement(_subElement:Int)
		.IGUIElement_setSubElement(Self._ptr, _subElement)
	End Method
	Method GetType:Int()
		Local _ret:Int = .IGUIElement_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IGUIElement_setText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method SetToolTipText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IGUIElement_setToolTipText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method SerializeAttributes(_out:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		If _options = Null
			.IGUIElement_serializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IGUIElement_serializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method GetAbsoluteClippingRect:Recti()
		Local _ret:Byte Ptr = .IGUIElement_getAbsoluteClippingRect(Self._ptr)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetText:String()
		Local _ret:Byte Ptr = .IGUIElement_getText(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method IsNotClipped:Int()
		Local _ret:Int = .IGUIElement_isNotClipped(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Remove()
		.IGUIElement_remove(Self._ptr)
	End Method
	Method GetParent:Iguielement()
		Local _ret:Byte Ptr = .IGUIElement_getParent(Self._ptr)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTabOrder:Int()
		Local _ret:Int = .IGUIElement_getTabOrder(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddChild(_child:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		.IGUIElement_addChild(Self._ptr, p0)
	End Method
	Method GetTabGroup:Iguielement()
		Local _ret:Byte Ptr = .IGUIElement_getTabGroup(Self._ptr)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Move(_absoluteMovement:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_absoluteMovement)
		.IGUIElement_move(Self._ptr, p0)
	End Method
	Method GetElementFromId:Iguielement(_id:Int, _searchchildren:Int = -2147483648)
		Local _ret:Byte Ptr
		If _searchchildren = -2147483648
			_ret = .IGUIElement_getElementFromId_OVERLOAD_1(Self._ptr, _id)
		Else
			_ret = .IGUIElement_getElementFromId_OVERLOAD_0(Self._ptr, _id, _searchchildren)
		EndIf
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Iguibutton Extends Iguielement Abstract
	Method SetSpriteBank(_bank:IguispriteBank = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_bank)
		If _bank = Null
			.IGUIButton_setSpriteBank_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setSpriteBank_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method GetActiveFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIButton_getActiveFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetPressedImage(_image:Itexture = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		If _image = Null
			.IGUIButton_setPressedImage_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setPressedImage_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method SetPressedImageWithImagePos(_image:Itexture, _pos:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.IGUIButton_setPressedImage_OVERLOAD_2(Self._ptr, p0, p1)
	End Method
	Method GetOverrideFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIButton_getOverrideFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetOverrideFont(_font:Iguifont = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		If _font = Null
			.IGUIButton_setOverrideFont_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setOverrideFont_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method IsAlphaChannelUsed:Int()
		Local _ret:Int = .IGUIButton_isAlphaChannelUsed(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsScalingImage:Int()
		Local _ret:Int = .IGUIButton_isScalingImage(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPushButton:Int()
		Local _ret:Int = .IGUIButton_isPushButton(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSprite(_state:Int, _index:Int, _color:Scolor = Null, _loop:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.IGUIButton_setSprite_OVERLOAD_2(Self._ptr, _state, _index)
		ElseIf _loop = -2147483648
			.IGUIButton_setSprite_OVERLOAD_1(Self._ptr, _state, _index, p2)
		Else
			.IGUIButton_setSprite_OVERLOAD_0(Self._ptr, _state, _index, p2, _loop)
		EndIf
	End Method
	Method SetIsPushButton(_isPushButton:Int = -2147483648)
		If _isPushButton = -2147483648
			.IGUIButton_setIsPushButton_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setIsPushButton_OVERLOAD_0(Self._ptr, _isPushButton)
		EndIf
	End Method
	Method SetDrawBorder(_border:Int = -2147483648)
		If _border = -2147483648
			.IGUIButton_setDrawBorder_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setDrawBorder_OVERLOAD_0(Self._ptr, _border)
		EndIf
	End Method
	Method SetPressed(_pressed:Int = -2147483648)
		If _pressed = -2147483648
			.IGUIButton_setPressed_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setPressed_OVERLOAD_0(Self._ptr, _pressed)
		EndIf
	End Method
	Method IsPressed:Int()
		Local _ret:Int = .IGUIButton_isPressed(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetUseAlphaChannel(_useAlphaChannel:Int = -2147483648)
		If _useAlphaChannel = -2147483648
			.IGUIButton_setUseAlphaChannel_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setUseAlphaChannel_OVERLOAD_0(Self._ptr, _useAlphaChannel)
		EndIf
	End Method
	Method SetImage(_image:Itexture = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		If _image = Null
			.IGUIButton_setImage_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setImage_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method SetImageWithImagePos(_image:Itexture, _pos:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		.IGUIButton_setImage_OVERLOAD_2(Self._ptr, p0, p1)
	End Method
	Method SetScaleImage(_scaleImage:Int = -2147483648)
		If _scaleImage = -2147483648
			.IGUIButton_setScaleImage_OVERLOAD_1(Self._ptr)
		Else
			.IGUIButton_setScaleImage_OVERLOAD_0(Self._ptr, _scaleImage)
		EndIf
	End Method
	Method IsDrawingBorder:Int()
		Local _ret:Int = .IGUIButton_isDrawingBorder(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IguicheckBox Extends Iguielement Abstract
	Method SetChecked(_checked:Int)
		.IGUICheckBox_setChecked(Self._ptr, _checked)
	End Method
	Method IsChecked:Int()
		Local _ret:Int = .IGUICheckBox_isChecked(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IguicolorSelectDialog Extends Iguielement Abstract
	Function MakeWithEnvironmentParentIdRectangle:IguicolorSelectDialog(_environment:Iguienvironment, _parent:Iguielement, _id:Int, _rectangle:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_environment)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local _ret:Byte Ptr = .new_IGUIColorSelectDialog(p0, p1, _id, p3)
		Local rval:IguicolorSelectDialog = IguicolorSelectDialog(New _IguicolorSelectDialog._withPtr(_ret)._withDel(delete_IguicolorSelectDialog))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type IguicomboBox Extends Iguielement Abstract
	Method GetSelected:Int()
		Local _ret:Int = .IGUIComboBox_getSelected(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaxSelectionRows:Int()
		Local _ret:Int = .IGUIComboBox_getMaxSelectionRows(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveItem(_idx:Int)
		.IGUIComboBox_removeItem(Self._ptr, _idx)
	End Method
	Method SetMaxSelectionRows(_max:Int)
		.IGUIComboBox_setMaxSelectionRows(Self._ptr, _max)
	End Method
	Method Clear()
		.IGUIComboBox_clear(Self._ptr)
	End Method
	Method GetItem:String(_idx:Int)
		Local _ret:Byte Ptr = .IGUIComboBox_getItem(Self._ptr, _idx)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetItemData:Int(_idx:Int)
		Local _ret:Int = .IGUIComboBox_getItemData(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddItem:Int(_text:String, _data:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Int
		If _data = -2147483648
			_ret = .IGUIComboBox_addItem_OVERLOAD_1(Self._ptr, ws0)
		Else
			_ret = .IGUIComboBox_addItem_OVERLOAD_0(Self._ptr, ws0, _data)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetItemCount:Int()
		Local _ret:Int = .IGUIComboBox_getItemCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTextAlignment(_horizontal:Int, _vertical:Int)
		.IGUIComboBox_setTextAlignment(Self._ptr, _horizontal, _vertical)
	End Method
	Method GetIndexForItemData:Int(_data:Int)
		Local _ret:Int = .IGUIComboBox_getIndexForItemData(Self._ptr, _data)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSelected(_idx:Int)
		.IGUIComboBox_setSelected(Self._ptr, _idx)
	End Method
End Type

Type IguicontextMenu Extends Iguielement Abstract
	Method GetItemCount:Int()
		Local _ret:Int = .IGUIContextMenu_getItemCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsItemEnabled:Int(_idx:Int)
		Local _ret:Int = .IGUIContextMenu_isItemEnabled(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemChecked(_idx:Int, _enabled:Int)
		.IGUIContextMenu_setItemChecked(Self._ptr, _idx, _enabled)
	End Method
	Method GetItemCommandId:Int(_idx:Int)
		Local _ret:Int = .IGUIContextMenu_getItemCommandId(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemText(_idx:Int, _text:String)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		.IGUIContextMenu_setItemText(Self._ptr, _idx, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method FindItemWithCommandId:Int(_commandId:Int, _idxStartSearch:Int = -2147483648)
		Local _ret:Int
		If _idxStartSearch = -2147483648
			_ret = .IGUIContextMenu_findItemWithCommandId_OVERLOAD_1(Self._ptr, _commandId)
		Else
			_ret = .IGUIContextMenu_findItemWithCommandId_OVERLOAD_0(Self._ptr, _commandId, _idxStartSearch)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemEnabled(_idx:Int, _enabled:Int)
		.IGUIContextMenu_setItemEnabled(Self._ptr, _idx, _enabled)
	End Method
	Method SetCloseHandling(_onClose:Int)
		.IGUIContextMenu_setCloseHandling(Self._ptr, _onClose)
	End Method
	Method AddItem:Int(_text:String, _commandId:Int = -2147483648, _enabled:Int = -2147483648, _hasSubMenu:Int = -2147483648, _checked:Int = -2147483648, _autoChecking:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Int
		If _commandId = -2147483648
			_ret = .IGUIContextMenu_addItem_OVERLOAD_5(Self._ptr, ws0)
		ElseIf _enabled = -2147483648
			_ret = .IGUIContextMenu_addItem_OVERLOAD_4(Self._ptr, ws0, _commandId)
		ElseIf _hasSubMenu = -2147483648
			_ret = .IGUIContextMenu_addItem_OVERLOAD_3(Self._ptr, ws0, _commandId, _enabled)
		ElseIf _checked = -2147483648
			_ret = .IGUIContextMenu_addItem_OVERLOAD_2(Self._ptr, ws0, _commandId, _enabled, _hasSubMenu)
		ElseIf _autoChecking = -2147483648
			_ret = .IGUIContextMenu_addItem_OVERLOAD_1(Self._ptr, ws0, _commandId, _enabled, _hasSubMenu, _checked)
		Else
			_ret = .IGUIContextMenu_addItem_OVERLOAD_0(Self._ptr, ws0, _commandId, _enabled, _hasSubMenu, _checked, _autoChecking)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method InsertItem:Int(_idx:Int, _text:String, _commandId:Int = -2147483648, _enabled:Int = -2147483648, _hasSubMenu:Int = -2147483648, _checked:Int = -2147483648, _autoChecking:Int = -2147483648)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local _ret:Int
		If _commandId = -2147483648
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_5(Self._ptr, _idx, ws1)
		ElseIf _enabled = -2147483648
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_4(Self._ptr, _idx, ws1, _commandId)
		ElseIf _hasSubMenu = -2147483648
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_3(Self._ptr, _idx, ws1, _commandId, _enabled)
		ElseIf _checked = -2147483648
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_2(Self._ptr, _idx, ws1, _commandId, _enabled, _hasSubMenu)
		ElseIf _autoChecking = -2147483648
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_1(Self._ptr, _idx, ws1, _commandId, _enabled, _hasSubMenu, _checked)
		Else
			_ret = .IGUIContextMenu_insertItem_OVERLOAD_0(Self._ptr, _idx, ws1, _commandId, _enabled, _hasSubMenu, _checked, _autoChecking)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsItemChecked:Int(_idx:Int)
		Local _ret:Int = .IGUIContextMenu_isItemChecked(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemCommandId(_idx:Int, _id:Int)
		.IGUIContextMenu_setItemCommandId(Self._ptr, _idx, _id)
	End Method
	Method SetItemAutoChecking(_idx:Int, _autoChecking:Int)
		.IGUIContextMenu_setItemAutoChecking(Self._ptr, _idx, _autoChecking)
	End Method
	Method SetEventParent(_parent:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		.IGUIContextMenu_setEventParent(Self._ptr, p0)
	End Method
	Method AddSeparator()
		.IGUIContextMenu_addSeparator(Self._ptr)
	End Method
	Method GetItemText:String(_idx:Int)
		Local _ret:Byte Ptr = .IGUIContextMenu_getItemText(Self._ptr, _idx)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method RemoveItem(_idx:Int)
		.IGUIContextMenu_removeItem(Self._ptr, _idx)
	End Method
	Method RemoveAllItems()
		.IGUIContextMenu_removeAllItems(Self._ptr)
	End Method
	Method GetCloseHandling:Int()
		Local _ret:Int = .IGUIContextMenu_getCloseHandling(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSubMenu:IguicontextMenu(_idx:Int)
		Local _ret:Byte Ptr = .IGUIContextMenu_getSubMenu(Self._ptr, _idx)
		Local rval:IguicontextMenu = IguicontextMenu(New _IguicontextMenu._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSelectedItem:Int()
		Local _ret:Int = .IGUIContextMenu_getSelectedItem(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetItemAutoChecking:Int(_idx:Int)
		Local _ret:Int = .IGUIContextMenu_getItemAutoChecking(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IguieditBox Extends Iguielement Abstract
	Method IsMultiLineEnabled:Int()
		Local _ret:Int = .IGUIEditBox_isMultiLineEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPasswordBox(_passwordBox:Int, _passwordChar:Byte Ptr = Null)
		If _passwordChar = Null
			.IGUIEditBox_setPasswordBox_OVERLOAD_1(Self._ptr, _passwordBox)
		Else
			.IGUIEditBox_setPasswordBox_OVERLOAD_0(Self._ptr, _passwordBox, _passwordChar)
		EndIf
	End Method
	Method SetTextAlignment(_horizontal:Int, _vertical:Int)
		.IGUIEditBox_setTextAlignment(Self._ptr, _horizontal, _vertical)
	End Method
	Method SetOverrideFont(_font:Iguifont = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		If _font = Null
			.IGUIEditBox_setOverrideFont_OVERLOAD_1(Self._ptr)
		Else
			.IGUIEditBox_setOverrideFont_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method SetMultiLine(_enable:Int)
		.IGUIEditBox_setMultiLine(Self._ptr, _enable)
	End Method
	Method SetAutoScroll(_enable:Int)
		.IGUIEditBox_setAutoScroll(Self._ptr, _enable)
	End Method
	Method GetActiveFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIEditBox_getActiveFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDrawBorder(_border:Int)
		.IGUIEditBox_setDrawBorder(Self._ptr, _border)
	End Method
	Method IsPasswordBox:Int()
		Local _ret:Int = .IGUIEditBox_isPasswordBox(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EnableOverrideColor(_enable:Int)
		.IGUIEditBox_enableOverrideColor(Self._ptr, _enable)
	End Method
	Method IsWordWrapEnabled:Int()
		Local _ret:Int = .IGUIEditBox_isWordWrapEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetOverrideFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIEditBox_getOverrideFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTextDimension:Dimension2du()
		Local _ret:Byte Ptr = .IGUIEditBox_getTextDimension(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetOverrideColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIEditBox_setOverrideColor(Self._ptr, p0)
	End Method
	Method SetWordWrap(_enable:Int)
		.IGUIEditBox_setWordWrap(Self._ptr, _enable)
	End Method
	Method GetOverrideColor:Scolor()
		Local _ret:Byte Ptr = .IGUIEditBox_getOverrideColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMax:Int()
		Local _ret:Int = .IGUIEditBox_getMax(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsAutoScrollEnabled:Int()
		Local _ret:Int = .IGUIEditBox_isAutoScrollEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDrawBackground(_draw:Int)
		.IGUIEditBox_setDrawBackground(Self._ptr, _draw)
	End Method
	Method IsOverrideColorEnabled:Int()
		Local _ret:Int = .IGUIEditBox_isOverrideColorEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMax(_max:Int)
		.IGUIEditBox_setMax(Self._ptr, _max)
	End Method
End Type

Type IguielementFactory Extends IreferenceCounted Abstract
	Method AddGuielement:Iguielement(_type:Int, _parent:Iguielement = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIElementFactory_addGUIElement_OVERLOAD_1(Self._ptr, _type)
		Else
			_ret = .IGUIElementFactory_addGUIElement_OVERLOAD_0(Self._ptr, _type, p1)
		EndIf
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddGuielementWithTypeName:Iguielement(_typeName:Byte Ptr, _parent:Iguielement = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIElementFactory_addGUIElement_OVERLOAD_3(Self._ptr, _typeName)
		Else
			_ret = .IGUIElementFactory_addGUIElement_OVERLOAD_2(Self._ptr, _typeName, p1)
		EndIf
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCreatableGuielementTypeCount:Int()
		Local _ret:Int = .IGUIElementFactory_getCreatableGUIElementTypeCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCreateableGuielementType:Int(_idx:Int)
		Local _ret:Int = .IGUIElementFactory_getCreateableGUIElementType(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCreateableGuielementTypeName:Byte Ptr(_idx:Int)
		Local _ret:Byte Ptr = .IGUIElementFactory_getCreateableGUIElementTypeName_OVERLOAD_0(Self._ptr, _idx)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetCreateableGuielementTypeNameWithType:Byte Ptr(_type:Int)
		Local _ret:Byte Ptr = .IGUIElementFactory_getCreateableGUIElementTypeName_OVERLOAD_1(Self._ptr, _type)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type Iguiskin Extends IattributeExchangingObject Abstract
	Method Draw3DtabBody(_element:Iguielement, _border:Int, _background:Int, _rect:Recti, _clip:Recti = Null, _tabHeight:Int = -2147483648, _alignment:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DTabBody_OVERLOAD_3(Self._ptr, p0, _border, _background, p3)
		ElseIf _tabHeight = -2147483648
			.IGUISkin_draw3DTabBody_OVERLOAD_2(Self._ptr, p0, _border, _background, p3, p4)
		ElseIf _alignment = -2147483648
			.IGUISkin_draw3DTabBody_OVERLOAD_1(Self._ptr, p0, _border, _background, p3, p4, _tabHeight)
		Else
			.IGUISkin_draw3DTabBody_OVERLOAD_0(Self._ptr, p0, _border, _background, p3, p4, _tabHeight, _alignment)
		EndIf
	End Method
	Method GetSpriteBank:IguispriteBank()
		Local _ret:Byte Ptr = .IGUISkin_getSpriteBank(Self._ptr)
		Local rval:IguispriteBank = IguispriteBank(New _IguispriteBank._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetColor:Scolor(_color:Int)
		Local _ret:Byte Ptr = .IGUISkin_getColor(Self._ptr, _color)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Draw3DbuttonPaneStandard(_element:Iguielement, _rect:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DButtonPaneStandard_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IGUISkin_draw3DButtonPaneStandard_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method Draw3DsunkenPane(_element:Iguielement, _bgcolor:Scolor, _flat:Int, _fillBackGround:Int, _rect:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_bgcolor)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DSunkenPane_OVERLOAD_1(Self._ptr, p0, p1, _flat, _fillBackGround, p4)
		Else
			.IGUISkin_draw3DSunkenPane_OVERLOAD_0(Self._ptr, p0, p1, _flat, _fillBackGround, p4, p5)
		EndIf
	End Method
	Method SetSize(_which:Int, _size:Int)
		.IGUISkin_setSize(Self._ptr, _which, _size)
	End Method
	Method GetSize:Int(_size:Int)
		Local _ret:Int = .IGUISkin_getSize(Self._ptr, _size)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DrawIcon(_element:Iguielement, _icon:Int, _position:Vector2di, _starttime:Int = -2147483648, _currenttime:Int = -2147483648, _loop:Int = -2147483648, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _starttime = -2147483648
			.IGUISkin_drawIcon_OVERLOAD_4(Self._ptr, p0, _icon, p2)
		ElseIf _currenttime = -2147483648
			.IGUISkin_drawIcon_OVERLOAD_3(Self._ptr, p0, _icon, p2, _starttime)
		ElseIf _loop = -2147483648
			.IGUISkin_drawIcon_OVERLOAD_2(Self._ptr, p0, _icon, p2, _starttime, _currenttime)
		ElseIf _clip = Null
			.IGUISkin_drawIcon_OVERLOAD_1(Self._ptr, p0, _icon, p2, _starttime, _currenttime, _loop)
		Else
			.IGUISkin_drawIcon_OVERLOAD_0(Self._ptr, p0, _icon, p2, _starttime, _currenttime, _loop, p6)
		EndIf
	End Method
	Method SetDefaultText(_which:Int, _newText:String)
		Local cs1:Byte Ptr = _newText.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _newText.Length)
		.IGUISkin_setDefaultText(Self._ptr, _which, ws1)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method Draw3DwindowBackground:Recti(_element:Iguielement, _drawTitleBar:Int, _titleBarColor:Scolor, _rect:Recti, _clip:Recti = Null, _checkClientArea:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_titleBarColor)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_checkClientArea)
		Local _ret:Byte Ptr
		If _clip = Null
			_ret = .IGUISkin_draw3DWindowBackground_OVERLOAD_2(Self._ptr, p0, _drawTitleBar, p2, p3)
		ElseIf _checkClientArea = Null
			_ret = .IGUISkin_draw3DWindowBackground_OVERLOAD_1(Self._ptr, p0, _drawTitleBar, p2, p3, p4)
		Else
			_ret = .IGUISkin_draw3DWindowBackground_OVERLOAD_0(Self._ptr, p0, _drawTitleBar, p2, p3, p4, p5)
		EndIf
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Draw3DtoolBar(_element:Iguielement, _rect:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DToolBar_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IGUISkin_draw3DToolBar_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method GetIcon:Int(_icon:Int)
		Local _ret:Int = .IGUISkin_getIcon(Self._ptr, _icon)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Draw3DtabButton(_element:Iguielement, _active:Int, _rect:Recti, _clip:Recti = Null, _alignment:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DTabButton_OVERLOAD_2(Self._ptr, p0, _active, p2)
		ElseIf _alignment = -2147483648
			.IGUISkin_draw3DTabButton_OVERLOAD_1(Self._ptr, p0, _active, p2, p3)
		Else
			.IGUISkin_draw3DTabButton_OVERLOAD_0(Self._ptr, p0, _active, p2, p3, _alignment)
		EndIf
	End Method
	Method SetFont(_font:Iguifont, _which:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		If _which = -2147483648
			.IGUISkin_setFont_OVERLOAD_1(Self._ptr, p0)
		Else
			.IGUISkin_setFont_OVERLOAD_0(Self._ptr, p0, _which)
		EndIf
	End Method
	Method Draw2Drectangle(_element:Iguielement, _color:Scolor, _pos:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw2DRectangle_OVERLOAD_1(Self._ptr, p0, p1, p2)
		Else
			.IGUISkin_draw2DRectangle_OVERLOAD_0(Self._ptr, p0, p1, p2, p3)
		EndIf
	End Method
	Method SetSpriteBank(_bank:IguispriteBank)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_bank)
		.IGUISkin_setSpriteBank(Self._ptr, p0)
	End Method
	Method GetType:Int()
		Local _ret:Int = .IGUISkin_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetColor(_which:Int, _newColor:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_newColor)
		.IGUISkin_setColor(Self._ptr, _which, p1)
	End Method
	Method Draw3DbuttonPanePressed(_element:Iguielement, _rect:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DButtonPanePressed_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IGUISkin_draw3DButtonPanePressed_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method SetIcon(_icon:Int, _index:Int)
		.IGUISkin_setIcon(Self._ptr, _icon, _index)
	End Method
	Method GetDefaultText:String(_text:Int)
		Local _ret:Byte Ptr = .IGUISkin_getDefaultText(Self._ptr, _text)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method Draw3DmenuPane(_element:Iguielement, _rect:Recti, _clip:Recti = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUISkin_draw3DMenuPane_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IGUISkin_draw3DMenuPane_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
	End Method
	Method GetFont:Iguifont(_which:Int = -2147483648)
		Local _ret:Byte Ptr
		If _which = -2147483648
			_ret = .IGUISkin_getFont_OVERLOAD_1(Self._ptr)
		Else
			_ret = .IGUISkin_getFont_OVERLOAD_0(Self._ptr, _which)
		EndIf
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Iguienvironment Extends IreferenceCounted Abstract
	Method AddListBox:IguilistBox(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _drawBackground:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addListBox_OVERLOAD_3(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addListBox_OVERLOAD_2(Self._ptr, p0, p1)
		ElseIf _drawBackground = -2147483648
			_ret = .IGUIEnvironment_addListBox_OVERLOAD_1(Self._ptr, p0, p1, _id)
		Else
			_ret = .IGUIEnvironment_addListBox_OVERLOAD_0(Self._ptr, p0, p1, _id, _drawBackground)
		EndIf
		Local rval:IguilistBox = IguilistBox(New _IguilistBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetUserEventReceiver(_evr:IeventReceiver)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_evr)
		.IGUIEnvironment_setUserEventReceiver(Self._ptr, p0)
	End Method
	Method AddTreeView:IguitreeView(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _drawBackground:Int = -2147483648, _scrollBarVertical:Int = -2147483648, _scrollBarHorizontal:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_5(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_4(Self._ptr, p0, p1)
		ElseIf _drawBackground = -2147483648
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_3(Self._ptr, p0, p1, _id)
		ElseIf _scrollBarVertical = -2147483648
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_2(Self._ptr, p0, p1, _id, _drawBackground)
		ElseIf _scrollBarHorizontal = -2147483648
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_1(Self._ptr, p0, p1, _id, _drawBackground, _scrollBarVertical)
		Else
			_ret = .IGUIEnvironment_addTreeView_OVERLOAD_0(Self._ptr, p0, p1, _id, _drawBackground, _scrollBarVertical, _scrollBarHorizontal)
		EndIf
		Local rval:IguitreeView = IguitreeView(New _IguitreeView._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetBuiltInFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIEnvironment_getBuiltInFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDefaultGuielementFactory:IguielementFactory()
		Local _ret:Byte Ptr = .IGUIEnvironment_getDefaultGUIElementFactory(Self._ptr)
		Local rval:IguielementFactory = IguielementFactory(New _IguielementFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetOsoperator:Iosoperator()
		Local _ret:Byte Ptr = .IGUIEnvironment_getOSOperator(Self._ptr)
		Local rval:Iosoperator = Iosoperator(New _Iosoperator._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWindow:Iguiwindow(_rectangle:Recti, _modal:Int = -2147483648, _text:String = Null, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local cs2:Byte Ptr = _text.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _modal = -2147483648
			_ret = .IGUIEnvironment_addWindow_OVERLOAD_4(Self._ptr, p0)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addWindow_OVERLOAD_3(Self._ptr, p0, _modal)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addWindow_OVERLOAD_2(Self._ptr, p0, _modal, ws2)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addWindow_OVERLOAD_1(Self._ptr, p0, _modal, ws2, p3)
		Else
			_ret = .IGUIEnvironment_addWindow_OVERLOAD_0(Self._ptr, p0, _modal, ws2, p3, _id)
		EndIf
		MemFree cs2 ; _CStdFree ws2
		Local rval:Iguiwindow = Iguiwindow(New _Iguiwindow._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddComboBox:IguicomboBox(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addComboBox_OVERLOAD_2(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addComboBox_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IGUIEnvironment_addComboBox_OVERLOAD_0(Self._ptr, p0, p1, _id)
		EndIf
		Local rval:IguicomboBox = IguicomboBox(New _IguicomboBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SerializeAttributes(_out:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		If _options = Null
			.IGUIEnvironment_serializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IGUIEnvironment_serializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method AddTable:Iguitable(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _drawBackground:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addTable_OVERLOAD_3(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addTable_OVERLOAD_2(Self._ptr, p0, p1)
		ElseIf _drawBackground = -2147483648
			_ret = .IGUIEnvironment_addTable_OVERLOAD_1(Self._ptr, p0, p1, _id)
		Else
			_ret = .IGUIEnvironment_addTable_OVERLOAD_0(Self._ptr, p0, p1, _id, _drawBackground)
		EndIf
		Local rval:Iguitable = Iguitable(New _Iguitable._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddContextMenu:IguicontextMenu(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addContextMenu_OVERLOAD_2(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addContextMenu_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IGUIEnvironment_addContextMenu_OVERLOAD_0(Self._ptr, p0, p1, _id)
		EndIf
		Local rval:IguicontextMenu = IguicontextMenu(New _IguicontextMenu._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddCheckBox:IguicheckBox(_checked:Int, _rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _text:String = Null)
		Local cs4:Byte Ptr = _text.ToCString(), ws4:Byte Ptr = _CStrToWStr(cs4, _text.Length)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addCheckBox_OVERLOAD_3(Self._ptr, _checked, p1)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addCheckBox_OVERLOAD_2(Self._ptr, _checked, p1, p2)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addCheckBox_OVERLOAD_1(Self._ptr, _checked, p1, p2, _id)
		Else
			_ret = .IGUIEnvironment_addCheckBox_OVERLOAD_0(Self._ptr, _checked, p1, p2, _id, ws4)
		EndIf
		MemFree cs4 ; _CStdFree ws4
		Local rval:IguicheckBox = IguicheckBox(New _IguicheckBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method LoadGui:Int(_filename:Path, _parent:Iguielement = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Int
		If _parent = Null
			_ret = .IGUIEnvironment_loadGUI_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_loadGUI_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method LoadGuiWithFile:Int(_file:IreadFile, _parent:Iguielement = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Int
		If _parent = Null
			_ret = .IGUIEnvironment_loadGUI_OVERLOAD_3(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_loadGUI_OVERLOAD_2(Self._ptr, p0, p1)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRootGuielement:Iguielement()
		Local _ret:Byte Ptr = .IGUIEnvironment_getRootGUIElement(Self._ptr)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddMessageBox:Iguiwindow(_caption:String, _text:String = Null, _modal:Int = -2147483648, _flags:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648, _image:Itexture = Null)
		Local cs0:Byte Ptr = _caption.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _caption.Length)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local _ret:Byte Ptr
		If _text = Null
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_6(Self._ptr, ws0)
		ElseIf _modal = -2147483648
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_5(Self._ptr, ws0, ws1)
		ElseIf _flags = -2147483648
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_4(Self._ptr, ws0, ws1, _modal)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_3(Self._ptr, ws0, ws1, _modal, _flags)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_2(Self._ptr, ws0, ws1, _modal, _flags, p4)
		ElseIf _image = Null
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_1(Self._ptr, ws0, ws1, _modal, _flags, p4, _id)
		Else
			_ret = .IGUIEnvironment_addMessageBox_OVERLOAD_0(Self._ptr, ws0, ws1, _modal, _flags, p4, _id, p6)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
		Local rval:Iguiwindow = Iguiwindow(New _Iguiwindow._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Clear()
		.IGUIEnvironment_clear(Self._ptr)
	End Method
	Method AddSpinBox:IguispinBox(_text:String, _rectangle:Recti, _border:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _border = -2147483648
			_ret = .IGUIEnvironment_addSpinBox_OVERLOAD_3(Self._ptr, ws0, p1)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addSpinBox_OVERLOAD_2(Self._ptr, ws0, p1, _border)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addSpinBox_OVERLOAD_1(Self._ptr, ws0, p1, _border, p3)
		Else
			_ret = .IGUIEnvironment_addSpinBox_OVERLOAD_0(Self._ptr, ws0, p1, _border, p3, _id)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:IguispinBox = IguispinBox(New _IguispinBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DrawAll()
		.IGUIEnvironment_drawAll(Self._ptr)
	End Method
	Method AddFileOpenDialog:IguifileOpenDialog(_title:String = Null, _modal:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648, _restoreCWD:Int = -2147483648, _startDir:Byte Ptr = Null)
		Local cs0:Byte Ptr = _title.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _title.Length)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _title = Null
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_6(Self._ptr)
		ElseIf _modal = -2147483648
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_5(Self._ptr, ws0)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_4(Self._ptr, ws0, _modal)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_3(Self._ptr, ws0, _modal, p2)
		ElseIf _restoreCWD = -2147483648
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_2(Self._ptr, ws0, _modal, p2, _id)
		ElseIf _startDir = Null
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_1(Self._ptr, ws0, _modal, p2, _id, _restoreCWD)
		Else
			_ret = .IGUIEnvironment_addFileOpenDialog_OVERLOAD_0(Self._ptr, ws0, _modal, p2, _id, _restoreCWD, _startDir)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:IguifileOpenDialog = IguifileOpenDialog(New _IguifileOpenDialog._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetSkin(_skin:Iguiskin)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_skin)
		.IGUIEnvironment_setSkin(Self._ptr, p0)
	End Method
	Method RegisterGuielementFactory(_factoryToAdd:IguielementFactory)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factoryToAdd)
		.IGUIEnvironment_registerGUIElementFactory(Self._ptr, p0)
	End Method
	Method GetFont:Iguifont(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IGUIEnvironment_getFont(Self._ptr, p0)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddGuielement:Iguielement(_elementName:Byte Ptr, _parent:Iguielement = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addGUIElement_OVERLOAD_1(Self._ptr, _elementName)
		Else
			_ret = .IGUIEnvironment_addGUIElement_OVERLOAD_0(Self._ptr, _elementName, p1)
		EndIf
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddButton:Iguibutton(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _text:String = Null, _tooltiptext:String = Null)
		Local cs3:Byte Ptr = _text.ToCString(), ws3:Byte Ptr = _CStrToWStr(cs3, _text.Length)
		Local cs4:Byte Ptr = _tooltiptext.ToCString(), ws4:Byte Ptr = _CStrToWStr(cs4, _tooltiptext.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addButton_OVERLOAD_4(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addButton_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addButton_OVERLOAD_2(Self._ptr, p0, p1, _id)
		ElseIf _tooltiptext = Null
			_ret = .IGUIEnvironment_addButton_OVERLOAD_1(Self._ptr, p0, p1, _id, ws3)
		Else
			_ret = .IGUIEnvironment_addButton_OVERLOAD_0(Self._ptr, p0, p1, _id, ws3, ws4)
		EndIf
		MemFree cs3 ; _CStdFree ws3
		MemFree cs4 ; _CStdFree ws4
		Local rval:Iguibutton = Iguibutton(New _Iguibutton._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DeserializeAttributes(_in:Iattributes, _options:Byte Ptr = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		If _options = Null
			.IGUIEnvironment_deserializeAttributes_OVERLOAD_1(Self._ptr, p0)
		Else
			.IGUIEnvironment_deserializeAttributes_OVERLOAD_0(Self._ptr, p0, _options)
		EndIf
	End Method
	Method GetSkin:Iguiskin()
		Local _ret:Byte Ptr = .IGUIEnvironment_getSkin(Self._ptr)
		Local rval:Iguiskin = Iguiskin(New _Iguiskin._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ReadGuielement(_reader:Byte Ptr, _node:Iguielement)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.IGUIEnvironment_readGUIElement(Self._ptr, _reader, p1)
	End Method
	Method RemoveFont(_font:Iguifont)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		.IGUIEnvironment_removeFont(Self._ptr, p0)
	End Method
	Method WriteGuielement(_writer:Ixmlwriter, _node:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_writer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.IGUIEnvironment_writeGUIElement(Self._ptr, p0, p1)
	End Method
	Method GetHovered:Iguielement()
		Local _ret:Byte Ptr = .IGUIEnvironment_getHovered(Self._ptr)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoDriver:IvideoDriver()
		Local _ret:Byte Ptr = .IGUIEnvironment_getVideoDriver(Self._ptr)
		Local rval:IvideoDriver = IvideoDriver(New _IvideoDriver._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method PostEventFromUser:Int(_event:Byte Ptr)
		Local _ret:Int = .IGUIEnvironment_postEventFromUser(Self._ptr, _event)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddImage:Iguiimage(_image:Itexture, _pos:Vector2di, _useAlphaChannel:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648, _text:String = Null)
		Local cs5:Byte Ptr = _text.ToCString(), ws5:Byte Ptr = _CStrToWStr(cs5, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _useAlphaChannel = -2147483648
			_ret = .IGUIEnvironment_addImage_OVERLOAD_4(Self._ptr, p0, p1)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addImage_OVERLOAD_3(Self._ptr, p0, p1, _useAlphaChannel)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addImage_OVERLOAD_2(Self._ptr, p0, p1, _useAlphaChannel, p3)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addImage_OVERLOAD_1(Self._ptr, p0, p1, _useAlphaChannel, p3, _id)
		Else
			_ret = .IGUIEnvironment_addImage_OVERLOAD_0(Self._ptr, p0, p1, _useAlphaChannel, p3, _id, ws5)
		EndIf
		MemFree cs5 ; _CStdFree ws5
		Local rval:Iguiimage = Iguiimage(New _Iguiimage._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddImageWithRectangle:Iguiimage(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _text:String = Null, _useAlphaChannel:Int = -2147483648)
		Local cs3:Byte Ptr = _text.ToCString(), ws3:Byte Ptr = _CStrToWStr(cs3, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addImage_OVERLOAD_9(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addImage_OVERLOAD_8(Self._ptr, p0, p1)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addImage_OVERLOAD_7(Self._ptr, p0, p1, _id)
		ElseIf _useAlphaChannel = -2147483648
			_ret = .IGUIEnvironment_addImage_OVERLOAD_6(Self._ptr, p0, p1, _id, ws3)
		Else
			_ret = .IGUIEnvironment_addImage_OVERLOAD_5(Self._ptr, p0, p1, _id, ws3, _useAlphaChannel)
		EndIf
		MemFree cs3 ; _CStdFree ws3
		Local rval:Iguiimage = Iguiimage(New _Iguiimage._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddEmptySpriteBank:IguispriteBank(_name:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Byte Ptr = .IGUIEnvironment_addEmptySpriteBank(Self._ptr, p0)
		Local rval:IguispriteBank = IguispriteBank(New _IguispriteBank._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddInOutFader:IguiinOutFader(_rectangle:Recti = Null, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _rectangle = Null
			_ret = .IGUIEnvironment_addInOutFader_OVERLOAD_3(Self._ptr)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addInOutFader_OVERLOAD_2(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addInOutFader_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IGUIEnvironment_addInOutFader_OVERLOAD_0(Self._ptr, p0, p1, _id)
		EndIf
		Local rval:IguiinOutFader = IguiinOutFader(New _IguiinOutFader._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddTabControl:IguitabControl(_rectangle:Recti, _parent:Iguielement = Null, _fillbackground:Int = -2147483648, _border:Int = -2147483648, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addTabControl_OVERLOAD_4(Self._ptr, p0)
		ElseIf _fillbackground = -2147483648
			_ret = .IGUIEnvironment_addTabControl_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _border = -2147483648
			_ret = .IGUIEnvironment_addTabControl_OVERLOAD_2(Self._ptr, p0, p1, _fillbackground)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addTabControl_OVERLOAD_1(Self._ptr, p0, p1, _fillbackground, _border)
		Else
			_ret = .IGUIEnvironment_addTabControl_OVERLOAD_0(Self._ptr, p0, p1, _fillbackground, _border, _id)
		EndIf
		Local rval:IguitabControl = IguitabControl(New _IguitabControl._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method HasFocus:Int(_element:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .IGUIEnvironment_hasFocus(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddMeshViewer:IguimeshViewer(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648, _text:String = Null)
		Local cs3:Byte Ptr = _text.ToCString(), ws3:Byte Ptr = _CStrToWStr(cs3, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addMeshViewer_OVERLOAD_3(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addMeshViewer_OVERLOAD_2(Self._ptr, p0, p1)
		ElseIf _text = Null
			_ret = .IGUIEnvironment_addMeshViewer_OVERLOAD_1(Self._ptr, p0, p1, _id)
		Else
			_ret = .IGUIEnvironment_addMeshViewer_OVERLOAD_0(Self._ptr, p0, p1, _id, ws3)
		EndIf
		MemFree cs3 ; _CStdFree ws3
		Local rval:IguimeshViewer = IguimeshViewer(New _IguimeshViewer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateImageList:IguiimageList(_texture:Itexture, _imageSize:Dimension2di, _useAlphaChannel:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_imageSize)
		Local _ret:Byte Ptr = .IGUIEnvironment_createImageList(Self._ptr, p0, p1, _useAlphaChannel)
		Local rval:IguiimageList = IguiimageList(New _IguiimageList._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddFont:Iguifont(_name:Path, _font:Iguifont)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_font)
		Local _ret:Byte Ptr = .IGUIEnvironment_addFont(Self._ptr, p0, p1)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddModalScreen:Iguielement(_parent:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr = .IGUIEnvironment_addModalScreen(Self._ptr, p0)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFileSystem:IfileSystem()
		Local _ret:Byte Ptr = .IGUIEnvironment_getFileSystem(Self._ptr)
		Local rval:IfileSystem = IfileSystem(New _IfileSystem._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFocus:Iguielement()
		Local _ret:Byte Ptr = .IGUIEnvironment_getFocus(Self._ptr)
		Local rval:Iguielement = Iguielement(New _Iguielement._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddColorSelectDialog:IguicolorSelectDialog(_title:String = Null, _modal:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local cs0:Byte Ptr = _title.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _title.Length)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _title = Null
			_ret = .IGUIEnvironment_addColorSelectDialog_OVERLOAD_4(Self._ptr)
		ElseIf _modal = -2147483648
			_ret = .IGUIEnvironment_addColorSelectDialog_OVERLOAD_3(Self._ptr, ws0)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addColorSelectDialog_OVERLOAD_2(Self._ptr, ws0, _modal)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addColorSelectDialog_OVERLOAD_1(Self._ptr, ws0, _modal, p2)
		Else
			_ret = .IGUIEnvironment_addColorSelectDialog_OVERLOAD_0(Self._ptr, ws0, _modal, p2, _id)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:IguicolorSelectDialog = IguicolorSelectDialog(New _IguicolorSelectDialog._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetFocus:Int(_element:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .IGUIEnvironment_setFocus(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveFocus:Int(_element:Iguielement)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .IGUIEnvironment_removeFocus(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddToolBar:IguitoolBar(_parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addToolBar_OVERLOAD_2(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addToolBar_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_addToolBar_OVERLOAD_0(Self._ptr, p0, _id)
		EndIf
		Local rval:IguitoolBar = IguitoolBar(New _IguitoolBar._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddScrollBar:IguiscrollBar(_horizontal:Int, _rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addScrollBar_OVERLOAD_2(Self._ptr, _horizontal, p1)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addScrollBar_OVERLOAD_1(Self._ptr, _horizontal, p1, p2)
		Else
			_ret = .IGUIEnvironment_addScrollBar_OVERLOAD_0(Self._ptr, _horizontal, p1, p2, _id)
		EndIf
		Local rval:IguiscrollBar = IguiscrollBar(New _IguiscrollBar._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetGuielementFactory:IguielementFactory(_index:Int)
		Local _ret:Byte Ptr = .IGUIEnvironment_getGUIElementFactory(Self._ptr, _index)
		Local rval:IguielementFactory = IguielementFactory(New _IguielementFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SaveGui:Int(_filename:Path, _start:Iguielement = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local _ret:Int
		If _start = Null
			_ret = .IGUIEnvironment_saveGUI_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_saveGUI_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SaveGuiWithFile:Int(_file:IwriteFile, _start:Iguielement = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local _ret:Int
		If _start = Null
			_ret = .IGUIEnvironment_saveGUI_OVERLOAD_3(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_saveGUI_OVERLOAD_2(Self._ptr, p0, p1)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSpriteBank:IguispriteBank(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IGUIEnvironment_getSpriteBank(Self._ptr, p0)
		Local rval:IguispriteBank = IguispriteBank(New _IguispriteBank._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddMenu:IguicontextMenu(_parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addMenu_OVERLOAD_2(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addMenu_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IGUIEnvironment_addMenu_OVERLOAD_0(Self._ptr, p0, _id)
		EndIf
		Local rval:IguicontextMenu = IguicontextMenu(New _IguicontextMenu._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddEditBox:IguieditBox(_text:String, _rectangle:Recti, _border:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _border = -2147483648
			_ret = .IGUIEnvironment_addEditBox_OVERLOAD_3(Self._ptr, ws0, p1)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addEditBox_OVERLOAD_2(Self._ptr, ws0, p1, _border)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addEditBox_OVERLOAD_1(Self._ptr, ws0, p1, _border, p3)
		Else
			_ret = .IGUIEnvironment_addEditBox_OVERLOAD_0(Self._ptr, ws0, p1, _border, p3, _id)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:IguieditBox = IguieditBox(New _IguieditBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateSkin:Iguiskin(_type:Int)
		Local _ret:Byte Ptr = .IGUIEnvironment_createSkin(Self._ptr, _type)
		Local rval:Iguiskin = Iguiskin(New _Iguiskin._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddTab:Iguitab(_rectangle:Recti, _parent:Iguielement = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .IGUIEnvironment_addTab_OVERLOAD_2(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addTab_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IGUIEnvironment_addTab_OVERLOAD_0(Self._ptr, p0, p1, _id)
		EndIf
		Local rval:Iguitab = Iguitab(New _Iguitab._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddStaticText:IguistaticText(_text:String, _rectangle:Recti, _border:Int = -2147483648, _wordWrap:Int = -2147483648, _parent:Iguielement = Null, _id:Int = -2147483648, _fillBackground:Int = -2147483648)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rectangle)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _border = -2147483648
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_5(Self._ptr, ws0, p1)
		ElseIf _wordWrap = -2147483648
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_4(Self._ptr, ws0, p1, _border)
		ElseIf _parent = Null
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_3(Self._ptr, ws0, p1, _border, _wordWrap)
		ElseIf _id = -2147483648
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_2(Self._ptr, ws0, p1, _border, _wordWrap, p4)
		ElseIf _fillBackground = -2147483648
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_1(Self._ptr, ws0, p1, _border, _wordWrap, p4, _id)
		Else
			_ret = .IGUIEnvironment_addStaticText_OVERLOAD_0(Self._ptr, ws0, p1, _border, _wordWrap, p4, _id, _fillBackground)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:IguistaticText = IguistaticText(New _IguistaticText._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRegisteredGuielementFactoryCount:Int()
		Local _ret:Int = .IGUIEnvironment_getRegisteredGUIElementFactoryCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IguifileOpenDialog Extends Iguielement Abstract
	Method GetFileName:String()
		Local _ret:Byte Ptr = .IGUIFileOpenDialog_getFileName(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetDirectoryName:Path()
		Local _ret:Byte Ptr = .IGUIFileOpenDialog_getDirectoryName(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Iguifont Extends IreferenceCounted Abstract
	Method SetInvisibleCharacters(_s:String)
		Local cs0:Byte Ptr = _s.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _s.Length)
		.IGUIFont_setInvisibleCharacters(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method GetType:Int()
		Local _ret:Int = .IGUIFont_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetKerningWidth(_kerning:Int)
		.IGUIFont_setKerningWidth(Self._ptr, _kerning)
	End Method
	Method SetKerningHeight(_kerning:Int)
		.IGUIFont_setKerningHeight(Self._ptr, _kerning)
	End Method
	Method GetCharacterFromPos:Int(_text:String, _pixel_x:Int)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Int = .IGUIFont_getCharacterFromPos(Self._ptr, ws0, _pixel_x)
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetKerningWidth:Int(_thisLetter:String = Null, _previousLetter:String = Null)
		Local cs0:Byte Ptr = _thisLetter.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _thisLetter.Length)
		Local cs1:Byte Ptr = _previousLetter.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _previousLetter.Length)
		Local _ret:Int
		If _thisLetter = Null
			_ret = .IGUIFont_getKerningWidth_OVERLOAD_2(Self._ptr)
		ElseIf _previousLetter = Null
			_ret = .IGUIFont_getKerningWidth_OVERLOAD_1(Self._ptr, ws0)
		Else
			_ret = .IGUIFont_getKerningWidth_OVERLOAD_0(Self._ptr, ws0, ws1)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
		Local rval:Int = _ret ; Return rval
	End Method
	Method Draw(_text:String, _position:Recti, _color:Scolor, _hcenter:Int = -2147483648, _vcenter:Int = -2147483648, _clip:Recti = Null)
		Local cs0:Byte Ptr = _text.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _hcenter = -2147483648
			.IGUIFont_draw_OVERLOAD_3(Self._ptr, is0, p1, p2)
		ElseIf _vcenter = -2147483648
			.IGUIFont_draw_OVERLOAD_2(Self._ptr, is0, p1, p2, _hcenter)
		ElseIf _clip = Null
			.IGUIFont_draw_OVERLOAD_1(Self._ptr, is0, p1, p2, _hcenter, _vcenter)
		Else
			.IGUIFont_draw_OVERLOAD_0(Self._ptr, is0, p1, p2, _hcenter, _vcenter, p5)
		EndIf
		MemFree cs0 ; delete_path is0
	End Method
	Method GetKerningHeight:Int()
		Local _ret:Int = .IGUIFont_getKerningHeight(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetDimension:Dimension2du(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Byte Ptr = .IGUIFont_getDimension(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IguifontBitmap Extends Iguifont Abstract
	Method GetSpriteBank:IguispriteBank()
		Local _ret:Byte Ptr = .IGUIFontBitmap_getSpriteBank(Self._ptr)
		Local rval:IguispriteBank = IguispriteBank(New _IguispriteBank._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSpriteNoFromChar:Int(_c:String)
		Local cs0:Byte Ptr = _c.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _c.Length)
		Local _ret:Int = .IGUIFontBitmap_getSpriteNoFromChar(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetKerningWidth:Int(_thisLetter:String = Null, _previousLetter:String = Null)
		Local cs0:Byte Ptr = _thisLetter.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _thisLetter.Length)
		Local cs1:Byte Ptr = _previousLetter.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _previousLetter.Length)
		Local _ret:Int
		If _thisLetter = Null
			_ret = .IGUIFontBitmap_getKerningWidth_OVERLOAD_2(Self._ptr)
		ElseIf _previousLetter = Null
			_ret = .IGUIFontBitmap_getKerningWidth_OVERLOAD_1(Self._ptr, ws0)
		Else
			_ret = .IGUIFontBitmap_getKerningWidth_OVERLOAD_0(Self._ptr, ws0, ws1)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iguiimage Extends Iguielement Abstract
	Method GetImage:Itexture()
		Local _ret:Byte Ptr = .IGUIImage_getImage(Self._ptr)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsAlphaChannelUsed:Int()
		Local _ret:Int = .IGUIImage_isAlphaChannelUsed(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetColor:Scolor()
		Local _ret:Byte Ptr = .IGUIImage_getColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetImage(_image:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_image)
		.IGUIImage_setImage(Self._ptr, p0)
	End Method
	Method SetColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIImage_setColor(Self._ptr, p0)
	End Method
	Method IsImageScaled:Int()
		Local _ret:Int = .IGUIImage_isImageScaled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetScaleImage(_scale:Int)
		.IGUIImage_setScaleImage(Self._ptr, _scale)
	End Method
	Method SetUseAlphaChannel(_use:Int)
		.IGUIImage_setUseAlphaChannel(Self._ptr, _use)
	End Method
End Type

Type IguiinOutFader Extends Iguielement Abstract
	Method FadeIn(_time:Int)
		.IGUIInOutFader_fadeIn(Self._ptr, _time)
	End Method
	Method IsReady:Int()
		Local _ret:Int = .IGUIInOutFader_isReady(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method FadeOut(_time:Int)
		.IGUIInOutFader_fadeOut(Self._ptr, _time)
	End Method
	Method GetColor:Scolor()
		Local _ret:Byte Ptr = .IGUIInOutFader_getColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIInOutFader_setColor_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method SetColorWithSourceDest(_source:Scolor, _dest:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_source)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		.IGUIInOutFader_setColor_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
End Type

Type IguilistBox Extends Iguielement Abstract
	Method GetItemCount:Int()
		Local _ret:Int = .IGUIListBox_getItemCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method HasItemOverrideColor:Int(_index:Int, _colorType:Int)
		Local _ret:Int = .IGUIListBox_hasItemOverrideColor(Self._ptr, _index, _colorType)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemHeight(_height:Int)
		.IGUIListBox_setItemHeight(Self._ptr, _height)
	End Method
	Method SwapItems(_index1:Int, _index2:Int)
		.IGUIListBox_swapItems(Self._ptr, _index1, _index2)
	End Method
	Method Clear()
		.IGUIListBox_clear(Self._ptr)
	End Method
	Method SetAutoScrollEnabled(_scroll:Int)
		.IGUIListBox_setAutoScrollEnabled(Self._ptr, _scroll)
	End Method
	Method GetSelected:Int()
		Local _ret:Int = .IGUIListBox_getSelected(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClearItemOverrideColor(_index:Int)
		.IGUIListBox_clearItemOverrideColor_OVERLOAD_0(Self._ptr, _index)
	End Method
	Method ClearItemOverrideColorWithIndexColorType(_index:Int, _colorType:Int)
		.IGUIListBox_clearItemOverrideColor_OVERLOAD_1(Self._ptr, _index, _colorType)
	End Method
	Method SetDrawBackground(_draw:Int)
		.IGUIListBox_setDrawBackground(Self._ptr, _draw)
	End Method
	Method AddItem:Int(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Int = .IGUIListBox_addItem_OVERLOAD_0(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddItemWithTextIcon:Int(_text:String, _icon:Int)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local _ret:Int = .IGUIListBox_addItem_OVERLOAD_1(Self._ptr, ws0, _icon)
		MemFree cs0 ; _CStdFree ws0
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItemOverrideColor(_index:Int, _color:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIListBox_setItemOverrideColor_OVERLOAD_0(Self._ptr, _index, p1)
	End Method
	Method SetItemOverrideColorWithIndexColorTypeColor(_index:Int, _colorType:Int, _color:Scolor)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIListBox_setItemOverrideColor_OVERLOAD_1(Self._ptr, _index, _colorType, p2)
	End Method
	Method RemoveItem(_index:Int)
		.IGUIListBox_removeItem(Self._ptr, _index)
	End Method
	Method GetListItem:String(_id:Int)
		Local _ret:Byte Ptr = .IGUIListBox_getListItem(Self._ptr, _id)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetItemAt:Int(_xpos:Int, _ypos:Int)
		Local _ret:Int = .IGUIListBox_getItemAt(Self._ptr, _xpos, _ypos)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetItem(_index:Int, _text:String, _icon:Int)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		.IGUIListBox_setItem(Self._ptr, _index, ws1, _icon)
		MemFree cs1 ; _CStdFree ws1
	End Method
	Method SetSpriteBank(_bank:IguispriteBank)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_bank)
		.IGUIListBox_setSpriteBank(Self._ptr, p0)
	End Method
	Method GetIcon:Int(_index:Int)
		Local _ret:Int = .IGUIListBox_getIcon(Self._ptr, _index)
		Local rval:Int = _ret ; Return rval
	End Method
	Method InsertItem:Int(_index:Int, _text:String, _icon:Int)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local _ret:Int = .IGUIListBox_insertItem(Self._ptr, _index, ws1, _icon)
		MemFree cs1 ; _CStdFree ws1
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSelected(_index:Int)
		.IGUIListBox_setSelected_OVERLOAD_0(Self._ptr, _index)
	End Method
	Method SetSelectedWithItem(_item:String)
		Local cs0:Byte Ptr = _item.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _item.Length)
		.IGUIListBox_setSelected_OVERLOAD_1(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method IsAutoScrollEnabled:Int()
		Local _ret:Int = .IGUIListBox_isAutoScrollEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetItemOverrideColor:Scolor(_index:Int, _colorType:Int)
		Local _ret:Byte Ptr = .IGUIListBox_getItemOverrideColor(Self._ptr, _index, _colorType)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetItemDefaultColor:Scolor(_colorType:Int)
		Local _ret:Byte Ptr = .IGUIListBox_getItemDefaultColor(Self._ptr, _colorType)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IguimeshViewer Extends Iguielement Abstract
	Method SetMaterial(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		.IGUIMeshViewer_setMaterial(Self._ptr, p0)
	End Method
	Method SetMesh(_mesh:IanimatedMesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IGUIMeshViewer_setMesh(Self._ptr, p0)
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .IGUIMeshViewer_getMaterial(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMesh:IanimatedMesh()
		Local _ret:Byte Ptr = .IGUIMeshViewer_getMesh(Self._ptr)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IguiscrollBar Extends Iguielement Abstract
	Method GetMin:Int()
		Local _ret:Int = .IGUIScrollBar_getMin(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSmallStep(_step:Int)
		.IGUIScrollBar_setSmallStep(Self._ptr, _step)
	End Method
	Method GetSmallStep:Int()
		Local _ret:Int = .IGUIScrollBar_getSmallStep(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMin(_min:Int)
		.IGUIScrollBar_setMin(Self._ptr, _min)
	End Method
	Method GetLargeStep:Int()
		Local _ret:Int = .IGUIScrollBar_getLargeStep(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPos(_pos:Int)
		.IGUIScrollBar_setPos(Self._ptr, _pos)
	End Method
	Method GetMax:Int()
		Local _ret:Int = .IGUIScrollBar_getMax(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLargeStep(_step:Int)
		.IGUIScrollBar_setLargeStep(Self._ptr, _step)
	End Method
	Method GetPos:Int()
		Local _ret:Int = .IGUIScrollBar_getPos(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMax(_max:Int)
		.IGUIScrollBar_setMax(Self._ptr, _max)
	End Method
End Type

Type IguispinBox Extends Iguielement Abstract
	Method GetEditBox:IguieditBox()
		Local _ret:Byte Ptr = .IGUISpinBox_getEditBox(Self._ptr)
		Local rval:IguieditBox = IguieditBox(New _IguieditBox._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetValue:Float()
		Local _ret:Float = .IGUISpinBox_getValue(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetStepSize(_step:Float = -1e100000)
		If _step = -1e100000
			.IGUISpinBox_setStepSize_OVERLOAD_1(Self._ptr)
		Else
			.IGUISpinBox_setStepSize_OVERLOAD_0(Self._ptr, _step)
		EndIf
	End Method
	Method SetValue(_val:Float)
		.IGUISpinBox_setValue(Self._ptr, _val)
	End Method
	Method GetMax:Float()
		Local _ret:Float = .IGUISpinBox_getMax(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetDecimalPlaces(_places:Int)
		.IGUISpinBox_setDecimalPlaces(Self._ptr, _places)
	End Method
	Method SetRange(_min:Float, _max:Float)
		.IGUISpinBox_setRange(Self._ptr, _min, _max)
	End Method
	Method GetMin:Float()
		Local _ret:Float = .IGUISpinBox_getMin(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetStepSize:Float()
		Local _ret:Float = .IGUISpinBox_getStepSize(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
End Type

Type IguispriteBank Extends IreferenceCounted Abstract
	Method AddTexture(_texture:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		.IGUISpriteBank_addTexture(Self._ptr, p0)
	End Method
	Method GetPositions:Byte Ptr()
		Local _ret:Byte Ptr = .IGUISpriteBank_getPositions(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetTextureCount:Int()
		Local _ret:Int = .IGUISpriteBank_getTextureCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Draw2DspriteBatch(_indices:Byte Ptr, _pos:Byte Ptr, _clip:Recti = Null, _color:Scolor = Null, _starttime:Int = -2147483648, _currenttime:Int = -2147483648, _loop:Int = -2147483648, _center:Int = -2147483648)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _clip = Null
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_6(Self._ptr, _indices, _pos)
		ElseIf _color = Null
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_5(Self._ptr, _indices, _pos, p2)
		ElseIf _starttime = -2147483648
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_4(Self._ptr, _indices, _pos, p2, p3)
		ElseIf _currenttime = -2147483648
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_3(Self._ptr, _indices, _pos, p2, p3, _starttime)
		ElseIf _loop = -2147483648
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_2(Self._ptr, _indices, _pos, p2, p3, _starttime, _currenttime)
		ElseIf _center = -2147483648
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_1(Self._ptr, _indices, _pos, p2, p3, _starttime, _currenttime, _loop)
		Else
			.IGUISpriteBank_draw2DSpriteBatch_OVERLOAD_0(Self._ptr, _indices, _pos, p2, p3, _starttime, _currenttime, _loop, _center)
		EndIf
	End Method
	Method GetSprites:Byte Ptr()
		Local _ret:Byte Ptr = .IGUISpriteBank_getSprites(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Draw2Dsprite(_index:Int, _pos:Vector2di, _clip:Recti = Null, _color:Scolor = Null, _starttime:Int = -2147483648, _currenttime:Int = -2147483648, _loop:Int = -2147483648, _center:Int = -2147483648)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _clip = Null
			.IGUISpriteBank_draw2DSprite_OVERLOAD_6(Self._ptr, _index, p1)
		ElseIf _color = Null
			.IGUISpriteBank_draw2DSprite_OVERLOAD_5(Self._ptr, _index, p1, p2)
		ElseIf _starttime = -2147483648
			.IGUISpriteBank_draw2DSprite_OVERLOAD_4(Self._ptr, _index, p1, p2, p3)
		ElseIf _currenttime = -2147483648
			.IGUISpriteBank_draw2DSprite_OVERLOAD_3(Self._ptr, _index, p1, p2, p3, _starttime)
		ElseIf _loop = -2147483648
			.IGUISpriteBank_draw2DSprite_OVERLOAD_2(Self._ptr, _index, p1, p2, p3, _starttime, _currenttime)
		ElseIf _center = -2147483648
			.IGUISpriteBank_draw2DSprite_OVERLOAD_1(Self._ptr, _index, p1, p2, p3, _starttime, _currenttime, _loop)
		Else
			.IGUISpriteBank_draw2DSprite_OVERLOAD_0(Self._ptr, _index, p1, p2, p3, _starttime, _currenttime, _loop, _center)
		EndIf
	End Method
	Method Clear()
		.IGUISpriteBank_clear(Self._ptr)
	End Method
	Method AddTextureAsSprite:Int(_texture:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local _ret:Int = .IGUISpriteBank_addTextureAsSprite(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTexture:Itexture(_index:Int)
		Local _ret:Byte Ptr = .IGUISpriteBank_getTexture(Self._ptr, _index)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetTexture(_index:Int, _texture:Itexture)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		.IGUISpriteBank_setTexture(Self._ptr, _index, p1)
	End Method
End Type

Type IguistaticText Extends Iguielement Abstract
	Method IsRightToLeft:Int()
		Local _ret:Int = .IGUIStaticText_isRightToLeft(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTextAlignment(_horizontal:Int, _vertical:Int)
		.IGUIStaticText_setTextAlignment(Self._ptr, _horizontal, _vertical)
	End Method
	Method GetBackgroundColor:Scolor()
		Local _ret:Byte Ptr = .IGUIStaticText_getBackgroundColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetOverrideFont(_font:Iguifont = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		If _font = Null
			.IGUIStaticText_setOverrideFont_OVERLOAD_1(Self._ptr)
		Else
			.IGUIStaticText_setOverrideFont_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method IsDrawBackgroundEnabled:Int()
		Local _ret:Int = .IGUIStaticText_isDrawBackgroundEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetActiveFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIStaticText_getActiveFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDrawBorder(_draw:Int)
		.IGUIStaticText_setDrawBorder(Self._ptr, _draw)
	End Method
	Method SetRightToLeft(_rtl:Int)
		.IGUIStaticText_setRightToLeft(Self._ptr, _rtl)
	End Method
	Method SetBackgroundColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIStaticText_setBackgroundColor(Self._ptr, p0)
	End Method
	Method GetTextWidth:Int()
		Local _ret:Int = .IGUIStaticText_getTextWidth(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetOverrideColor:Scolor()
		Local _ret:Byte Ptr = .IGUIStaticText_getOverrideColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method EnableOverrideColor(_enable:Int)
		.IGUIStaticText_enableOverrideColor(Self._ptr, _enable)
	End Method
	Method IsDrawBorderEnabled:Int()
		Local _ret:Int = .IGUIStaticText_isDrawBorderEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetOverrideFont:Iguifont()
		Local _ret:Byte Ptr = .IGUIStaticText_getOverrideFont(Self._ptr)
		Local rval:Iguifont = Iguifont(New _Iguifont._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetTextRestrainedInside(_restrainedInside:Int)
		.IGUIStaticText_setTextRestrainedInside(Self._ptr, _restrainedInside)
	End Method
	Method SetOverrideColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUIStaticText_setOverrideColor(Self._ptr, p0)
	End Method
	Method SetWordWrap(_enable:Int)
		.IGUIStaticText_setWordWrap(Self._ptr, _enable)
	End Method
	Method IsTextRestrainedInside:Int()
		Local _ret:Int = .IGUIStaticText_isTextRestrainedInside(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsWordWrapEnabled:Int()
		Local _ret:Int = .IGUIStaticText_isWordWrapEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDrawBackground(_draw:Int)
		.IGUIStaticText_setDrawBackground(Self._ptr, _draw)
	End Method
	Method IsOverrideColorEnabled:Int()
		Local _ret:Int = .IGUIStaticText_isOverrideColorEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTextHeight:Int()
		Local _ret:Int = .IGUIStaticText_getTextHeight(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iguitab Extends Iguielement Abstract
	Method IsDrawingBackground:Int()
		Local _ret:Int = .IGUITab_isDrawingBackground(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetBackgroundColor:Scolor()
		Local _ret:Byte Ptr = .IGUITab_getBackgroundColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTextColor:Scolor()
		Local _ret:Byte Ptr = .IGUITab_getTextColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetBackgroundColor(_c:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_c)
		.IGUITab_setBackgroundColor(Self._ptr, p0)
	End Method
	Method SetDrawBackground(_draw:Int = -2147483648)
		If _draw = -2147483648
			.IGUITab_setDrawBackground_OVERLOAD_1(Self._ptr)
		Else
			.IGUITab_setDrawBackground_OVERLOAD_0(Self._ptr, _draw)
		EndIf
	End Method
	Method GetNumber:Int()
		Local _ret:Int = .IGUITab_getNumber(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTextColor(_c:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_c)
		.IGUITab_setTextColor(Self._ptr, p0)
	End Method
End Type

Type IguitabControl Extends Iguielement Abstract
	Method GetTabExtraWidth:Int()
		Local _ret:Int = .IGUITabControl_getTabExtraWidth(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTabVerticalAlignment:Int()
		Local _ret:Int = .IGUITabControl_getTabVerticalAlignment(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTabVerticalAlignment(_alignment:Int)
		.IGUITabControl_setTabVerticalAlignment(Self._ptr, _alignment)
	End Method
	Method InsertTab:Iguitab(_idx:Int, _caption:String, _id:Int = -2147483648)
		Local cs1:Byte Ptr = _caption.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _caption.Length)
		Local _ret:Byte Ptr
		If _id = -2147483648
			_ret = .IGUITabControl_insertTab_OVERLOAD_1(Self._ptr, _idx, ws1)
		Else
			_ret = .IGUITabControl_insertTab_OVERLOAD_0(Self._ptr, _idx, ws1, _id)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		Local rval:Iguitab = Iguitab(New _Iguitab._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RemoveTab(_idx:Int)
		.IGUITabControl_removeTab(Self._ptr, _idx)
	End Method
	Method GetTabHeight:Int()
		Local _ret:Int = .IGUITabControl_getTabHeight(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Clear()
		.IGUITabControl_clear(Self._ptr)
	End Method
	Method AddTab:Iguitab(_caption:String, _id:Int = -2147483648)
		Local cs0:Byte Ptr = _caption.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _caption.Length)
		Local _ret:Byte Ptr
		If _id = -2147483648
			_ret = .IGUITabControl_addTab_OVERLOAD_1(Self._ptr, ws0)
		Else
			_ret = .IGUITabControl_addTab_OVERLOAD_0(Self._ptr, ws0, _id)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		Local rval:Iguitab = Iguitab(New _Iguitab._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetTabMaxWidth(_width:Int)
		.IGUITabControl_setTabMaxWidth(Self._ptr, _width)
	End Method
	Method GetTabAt:Int(_xpos:Int, _ypos:Int)
		Local _ret:Int = .IGUITabControl_getTabAt(Self._ptr, _xpos, _ypos)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTabExtraWidth(_extraWidth:Int)
		.IGUITabControl_setTabExtraWidth(Self._ptr, _extraWidth)
	End Method
	Method GetTabMaxWidth:Int()
		Local _ret:Int = .IGUITabControl_getTabMaxWidth(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTabCount:Int()
		Local _ret:Int = .IGUITabControl_getTabCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetActiveTab:Int(_idx:Int)
		Local _ret:Int = .IGUITabControl_setActiveTab_OVERLOAD_0(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetActiveTabWithTab:Int(_tab:Iguitab)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_tab)
		Local _ret:Int = .IGUITabControl_setActiveTab_OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTab:Iguitab(_idx:Int)
		Local _ret:Byte Ptr = .IGUITabControl_getTab(Self._ptr, _idx)
		Local rval:Iguitab = Iguitab(New _Iguitab._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetTabHeight(_height:Int)
		.IGUITabControl_setTabHeight(Self._ptr, _height)
	End Method
	Method GetActiveTab:Int()
		Local _ret:Int = .IGUITabControl_getActiveTab(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iguitable Extends Iguielement Abstract
	Method SetCellText(_rowIndex:Int, _columnIndex:Int, _text:String)
		Local cs2:Byte Ptr = _text.ToCString(), is2:Byte Ptr = new_fromCString_OVERLOAD_1(cs2)
		.IGUITable_setCellText_OVERLOAD_0(Self._ptr, _rowIndex, _columnIndex, is2)
		MemFree cs2 ; delete_path is2
	End Method
	Method SetCellTextWithRowIndexColumnIndexTextColor(_rowIndex:Int, _columnIndex:Int, _text:String, _color:Scolor)
		Local cs2:Byte Ptr = _text.ToCString(), is2:Byte Ptr = new_fromCString_OVERLOAD_1(cs2)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUITable_setCellText_OVERLOAD_1(Self._ptr, _rowIndex, _columnIndex, is2, p3)
		MemFree cs2 ; delete_path is2
	End Method
	Method RemoveColumn(_columnIndex:Int)
		.IGUITable_removeColumn(Self._ptr, _columnIndex)
	End Method
	Method SetDrawFlags(_flags:Int)
		.IGUITable_setDrawFlags(Self._ptr, _flags)
	End Method
	Method GetDrawFlags:Int()
		Local _ret:Int = .IGUITable_getDrawFlags(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRowCount:Int()
		Local _ret:Int = .IGUITable_getRowCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method HasResizableColumns:Int()
		Local _ret:Int = .IGUITable_hasResizableColumns(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetColumnWidth:Int(_columnIndex:Int)
		Local _ret:Int = .IGUITable_getColumnWidth(Self._ptr, _columnIndex)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetColumnWidth(_columnIndex:Int, _width:Int)
		.IGUITable_setColumnWidth(Self._ptr, _columnIndex, _width)
	End Method
	Method ClearRows()
		.IGUITable_clearRows(Self._ptr)
	End Method
	Method AddRow:Int(_rowIndex:Int)
		Local _ret:Int = .IGUITable_addRow(Self._ptr, _rowIndex)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RemoveRow(_rowIndex:Int)
		.IGUITable_removeRow(Self._ptr, _rowIndex)
	End Method
	Method SetCellData(_rowIndex:Int, _columnIndex:Int, _data:Byte Ptr)
		.IGUITable_setCellData(Self._ptr, _rowIndex, _columnIndex, _data)
	End Method
	Method SetActiveColumn:Int(_idx:Int, _doOrder:Int = -2147483648)
		Local _ret:Int
		If _doOrder = -2147483648
			_ret = .IGUITable_setActiveColumn_OVERLOAD_1(Self._ptr, _idx)
		Else
			_ret = .IGUITable_setActiveColumn_OVERLOAD_0(Self._ptr, _idx, _doOrder)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetCellColor(_rowIndex:Int, _columnIndex:Int, _color:Scolor)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IGUITable_setCellColor(Self._ptr, _rowIndex, _columnIndex, p2)
	End Method
	Method GetCellData:Byte Ptr(_rowIndex:Int, _columnIndex:Int)
		Local _ret:Byte Ptr = .IGUITable_getCellData(Self._ptr, _rowIndex, _columnIndex)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method AddColumn(_caption:String, _columnIndex:Int = -2147483648)
		Local cs0:Byte Ptr = _caption.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _caption.Length)
		If _columnIndex = -2147483648
			.IGUITable_addColumn_OVERLOAD_1(Self._ptr, ws0)
		Else
			.IGUITable_addColumn_OVERLOAD_0(Self._ptr, ws0, _columnIndex)
		EndIf
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method GetSelected:Int()
		Local _ret:Int = .IGUITable_getSelected(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetResizableColumns(_resizable:Int)
		.IGUITable_setResizableColumns(Self._ptr, _resizable)
	End Method
	Method GetActiveColumn:Int()
		Local _ret:Int = .IGUITable_getActiveColumn(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCellText:String(_rowIndex:Int, _columnIndex:Int)
		Local _ret:Byte Ptr = .IGUITable_getCellText(Self._ptr, _rowIndex, _columnIndex)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method SetColumnOrdering(_columnIndex:Int, _mode:Int)
		.IGUITable_setColumnOrdering(Self._ptr, _columnIndex, _mode)
	End Method
	Method OrderRows(_columnIndex:Int = -2147483648, _mode:Int = -2147483648)
		If _columnIndex = -2147483648
			.IGUITable_orderRows_OVERLOAD_2(Self._ptr)
		ElseIf _mode = -2147483648
			.IGUITable_orderRows_OVERLOAD_1(Self._ptr, _columnIndex)
		Else
			.IGUITable_orderRows_OVERLOAD_0(Self._ptr, _columnIndex, _mode)
		EndIf
	End Method
	Method SetSelected(_index:Int)
		.IGUITable_setSelected(Self._ptr, _index)
	End Method
	Method GetColumnCount:Int()
		Local _ret:Int = .IGUITable_getColumnCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SwapRows(_rowIndexA:Int, _rowIndexB:Int)
		.IGUITable_swapRows(Self._ptr, _rowIndexA, _rowIndexB)
	End Method
	Method GetActiveColumnOrdering:Int()
		Local _ret:Int = .IGUITable_getActiveColumnOrdering(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Clear()
		.IGUITable_clear(Self._ptr)
	End Method
End Type

Type IguitoolBar Extends Iguielement Abstract
	Method AddButton:Iguibutton(_id:Int = -2147483648, _text:String = Null, _tooltiptext:String = Null, _img:Itexture = Null, _pressedimg:Itexture = Null, _isPushButton:Int = -2147483648, _useAlphaChannel:Int = -2147483648)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local cs2:Byte Ptr = _tooltiptext.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _tooltiptext.Length)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_img)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_pressedimg)
		Local _ret:Byte Ptr
		If _id = -2147483648
			_ret = .IGUIToolBar_addButton_OVERLOAD_7(Self._ptr)
		ElseIf _text = Null
			_ret = .IGUIToolBar_addButton_OVERLOAD_6(Self._ptr, _id)
		ElseIf _tooltiptext = Null
			_ret = .IGUIToolBar_addButton_OVERLOAD_5(Self._ptr, _id, ws1)
		ElseIf _img = Null
			_ret = .IGUIToolBar_addButton_OVERLOAD_4(Self._ptr, _id, ws1, ws2)
		ElseIf _pressedimg = Null
			_ret = .IGUIToolBar_addButton_OVERLOAD_3(Self._ptr, _id, ws1, ws2, p3)
		ElseIf _isPushButton = -2147483648
			_ret = .IGUIToolBar_addButton_OVERLOAD_2(Self._ptr, _id, ws1, ws2, p3, p4)
		ElseIf _useAlphaChannel = -2147483648
			_ret = .IGUIToolBar_addButton_OVERLOAD_1(Self._ptr, _id, ws1, ws2, p3, p4, _isPushButton)
		Else
			_ret = .IGUIToolBar_addButton_OVERLOAD_0(Self._ptr, _id, ws1, ws2, p3, p4, _isPushButton, _useAlphaChannel)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		MemFree cs2 ; _CStdFree ws2
		Local rval:Iguibutton = Iguibutton(New _Iguibutton._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Iguiwindow Extends Iguielement Abstract
	Method IsDraggable:Int()
		Local _ret:Int = .IGUIWindow_isDraggable(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaximizeButton:Iguibutton()
		Local _ret:Byte Ptr = .IGUIWindow_getMaximizeButton(Self._ptr)
		Local rval:Iguibutton = Iguibutton(New _Iguibutton._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDrawTitlebar:Int()
		Local _ret:Int = .IGUIWindow_getDrawTitlebar(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCloseButton:Iguibutton()
		Local _ret:Byte Ptr = .IGUIWindow_getCloseButton(Self._ptr)
		Local rval:Iguibutton = Iguibutton(New _Iguibutton._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDrawBackground:Int()
		Local _ret:Int = .IGUIWindow_getDrawBackground(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDrawBackground(_draw:Int)
		.IGUIWindow_setDrawBackground(Self._ptr, _draw)
	End Method
	Method GetMinimizeButton:Iguibutton()
		Local _ret:Byte Ptr = .IGUIWindow_getMinimizeButton(Self._ptr)
		Local rval:Iguibutton = Iguibutton(New _Iguibutton._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDrawTitlebar(_draw:Int)
		.IGUIWindow_setDrawTitlebar(Self._ptr, _draw)
	End Method
	Method GetClientRect:Recti()
		Local _ret:Byte Ptr = .IGUIWindow_getClientRect(Self._ptr)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDraggable(_draggable:Int)
		.IGUIWindow_setDraggable(Self._ptr, _draggable)
	End Method
End Type

Type IguiimageList Extends IreferenceCounted Abstract
	Method GetImageSize:Dimension2di()
		Local _ret:Byte Ptr = .IGUIImageList_getImageSize(Self._ptr)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetImageCount:Int()
		Local _ret:Int = .IGUIImageList_getImageCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Draw(_index:Int, _destPos:Vector2di, _clip:Recti = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_destPos)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_clip)
		If _clip = Null
			.IGUIImageList_draw_OVERLOAD_1(Self._ptr, _index, p1)
		Else
			.IGUIImageList_draw_OVERLOAD_0(Self._ptr, _index, p1, p2)
		EndIf
	End Method
End Type

Type IguitreeViewNode Extends IreferenceCounted Abstract
	Method IsRoot:Int()
		Local _ret:Int = .IGUITreeViewNode_isRoot(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSelected:Int()
		Local _ret:Int = .IGUITreeViewNode_getSelected(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFirstChild:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getFirstChild(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClearChildren()
		.IGUITreeViewNode_clearChildren(Self._ptr)
	End Method
	Method GetExpanded:Int()
		Local _ret:Int = .IGUITreeViewNode_getExpanded(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIcon:String()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getIcon(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetLastChild:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getLastChild(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetIcon(_icon:String)
		Local cs0:Byte Ptr = _icon.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _icon.Length)
		.IGUITreeViewNode_setIcon(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method AddChildBack:IguitreeViewNode(_text:String, _icon:String = Null, _imageIndex:Int = -2147483648, _selectedImageIndex:Int = -2147483648, _data:Byte Ptr = Null, _data2:IreferenceCounted = Null)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local cs1:Byte Ptr = _icon.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _icon.Length)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_data2)
		Local _ret:Byte Ptr
		If _icon = Null
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_5(Self._ptr, ws0)
		ElseIf _imageIndex = -2147483648
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_4(Self._ptr, ws0, ws1)
		ElseIf _selectedImageIndex = -2147483648
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_3(Self._ptr, ws0, ws1, _imageIndex)
		ElseIf _data = Null
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_2(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex)
		ElseIf _data2 = Null
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_1(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex, _data)
		Else
			_ret = .IGUITreeViewNode_addChildBack_OVERLOAD_0(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex, _data, p5)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddChildFront:IguitreeViewNode(_text:String, _icon:String = Null, _imageIndex:Int = -2147483648, _selectedImageIndex:Int = -2147483648, _data:Byte Ptr = Null, _data2:IreferenceCounted = Null)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		Local cs1:Byte Ptr = _icon.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _icon.Length)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_data2)
		Local _ret:Byte Ptr
		If _icon = Null
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_5(Self._ptr, ws0)
		ElseIf _imageIndex = -2147483648
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_4(Self._ptr, ws0, ws1)
		ElseIf _selectedImageIndex = -2147483648
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_3(Self._ptr, ws0, ws1, _imageIndex)
		ElseIf _data = Null
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_2(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex)
		ElseIf _data2 = Null
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_1(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex, _data)
		Else
			_ret = .IGUITreeViewNode_addChildFront_OVERLOAD_0(Self._ptr, ws0, ws1, _imageIndex, _selectedImageIndex, _data, p5)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs1 ; _CStdFree ws1
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method HasChilds:Int()
		Local _ret:Int = .IGUITreeViewNode_hasChilds(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetData:Byte Ptr()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getData(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetNextVisible:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getNextVisible(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClearChilds()
		.IGUITreeViewNode_clearChilds(Self._ptr)
	End Method
	Method GetPrevSibling:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getPrevSibling(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetNextSibling:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getNextSibling(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetData(_data:Byte Ptr)
		.IGUITreeViewNode_setData(Self._ptr, _data)
	End Method
	Method HasChildren:Int()
		Local _ret:Int = .IGUITreeViewNode_hasChildren(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DeleteChild:Int(_child:IguitreeViewNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .IGUITreeViewNode_deleteChild(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSelectedImageIndex:Int()
		Local _ret:Int = .IGUITreeViewNode_getSelectedImageIndex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetData2(_data:IreferenceCounted)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_data)
		.IGUITreeViewNode_setData2(Self._ptr, p0)
	End Method
	Method GetOwner:IguitreeView()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getOwner(Self._ptr)
		Local rval:IguitreeView = IguitreeView(New _IguitreeView._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetImageIndex:Int()
		Local _ret:Int = .IGUITreeViewNode_getImageIndex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLevel:Int()
		Local _ret:Int = .IGUITreeViewNode_getLevel(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSelectedImageIndex(_imageIndex:Int)
		.IGUITreeViewNode_setSelectedImageIndex(Self._ptr, _imageIndex)
	End Method
	Method InsertChildAfter:IguitreeViewNode(_other:IguitreeViewNode, _text:String, _icon:String = Null, _imageIndex:Int = -2147483648, _selectedImageIndex:Int = -2147483648, _data:Byte Ptr = Null, _data2:IreferenceCounted = Null)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local cs2:Byte Ptr = _icon.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _icon.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_data2)
		Local _ret:Byte Ptr
		If _icon = Null
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_5(Self._ptr, p0, ws1)
		ElseIf _imageIndex = -2147483648
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_4(Self._ptr, p0, ws1, ws2)
		ElseIf _selectedImageIndex = -2147483648
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_3(Self._ptr, p0, ws1, ws2, _imageIndex)
		ElseIf _data = Null
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_2(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex)
		ElseIf _data2 = Null
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_1(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex, _data)
		Else
			_ret = .IGUITreeViewNode_insertChildAfter_OVERLOAD_0(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex, _data, p6)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		MemFree cs2 ; _CStdFree ws2
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MoveChildUp:Int(_child:IguitreeViewNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .IGUITreeViewNode_moveChildUp(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSelected(_selected:Int)
		.IGUITreeViewNode_setSelected(Self._ptr, _selected)
	End Method
	Method SetImageIndex(_imageIndex:Int)
		.IGUITreeViewNode_setImageIndex(Self._ptr, _imageIndex)
	End Method
	Method GetParent:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getParent(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method InsertChildBefore:IguitreeViewNode(_other:IguitreeViewNode, _text:String, _icon:String = Null, _imageIndex:Int = -2147483648, _selectedImageIndex:Int = -2147483648, _data:Byte Ptr = Null, _data2:IreferenceCounted = Null)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local cs2:Byte Ptr = _icon.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _icon.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_data2)
		Local _ret:Byte Ptr
		If _icon = Null
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_5(Self._ptr, p0, ws1)
		ElseIf _imageIndex = -2147483648
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_4(Self._ptr, p0, ws1, ws2)
		ElseIf _selectedImageIndex = -2147483648
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_3(Self._ptr, p0, ws1, ws2, _imageIndex)
		ElseIf _data = Null
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_2(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex)
		ElseIf _data2 = Null
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_1(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex, _data)
		Else
			_ret = .IGUITreeViewNode_insertChildBefore_OVERLOAD_0(Self._ptr, p0, ws1, ws2, _imageIndex, _selectedImageIndex, _data, p6)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		MemFree cs2 ; _CStdFree ws2
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IGUITreeViewNode_setText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method MoveChildDown:Int(_child:IguitreeViewNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_child)
		Local _ret:Int = .IGUITreeViewNode_moveChildDown(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsVisible:Int()
		Local _ret:Int = .IGUITreeViewNode_isVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetData2:IreferenceCounted()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getData2(Self._ptr)
		Local rval:IreferenceCounted = IreferenceCounted(New _IreferenceCounted._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetText:String()
		Local _ret:Byte Ptr = .IGUITreeViewNode_getText(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetChildCount:Int()
		Local _ret:Int = .IGUITreeViewNode_getChildCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetExpanded(_expanded:Int)
		.IGUITreeViewNode_setExpanded(Self._ptr, _expanded)
	End Method
End Type

Type IguitreeView Extends Iguielement Abstract
	Method SetLinesVisible(_visible:Int)
		.IGUITreeView_setLinesVisible(Self._ptr, _visible)
	End Method
	Method SetImageList(_imageList:IguiimageList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_imageList)
		.IGUITreeView_setImageList(Self._ptr, p0)
	End Method
	Method GetSelected:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeView_getSelected(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRoot:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeView_getRoot(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLinesVisible:Int()
		Local _ret:Int = .IGUITreeView_getLinesVisible(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLastEventNode:IguitreeViewNode()
		Local _ret:Byte Ptr = .IGUITreeView_getLastEventNode(Self._ptr)
		Local rval:IguitreeViewNode = IguitreeViewNode(New _IguitreeViewNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetImageLeftOfIcon:Int()
		Local _ret:Int = .IGUITreeView_getImageLeftOfIcon(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetImageList:IguiimageList()
		Local _ret:Byte Ptr = .IGUITreeView_getImageList(Self._ptr)
		Local rval:IguiimageList = IguiimageList(New _IguiimageList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetImageLeftOfIcon(_bLeftOf:Int)
		.IGUITreeView_setImageLeftOfIcon(Self._ptr, _bLeftOf)
	End Method
	Method SetIconFont(_font:Iguifont)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		.IGUITreeView_setIconFont(Self._ptr, p0)
	End Method
End Type

Type IimageLoader Extends IreferenceCounted Abstract
	Method LoadImage:Iimage(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IImageLoader_loadImage(Self._ptr, p0)
		Local rval:Iimage = Iimage(New _Iimage._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsAloadableFileExtension:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IImageLoader_isALoadableFileExtension(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsAloadableFileFormat:Int(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Int = .IImageLoader_isALoadableFileFormat(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IimageWriter Extends IreferenceCounted Abstract
	Method IsAwriteableFileExtension:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IImageWriter_isAWriteableFileExtension(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method WriteImage:Int(_file:IwriteFile, _image:Iimage, _param:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_image)
		Local _ret:Int
		If _param = -2147483648
			_ret = .IImageWriter_writeImage_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IImageWriter_writeImage_OVERLOAD_0(Self._ptr, p0, p1, _param)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IlightSceneNode Extends IsceneNode Abstract
	Method SetLightType(_type:Int)
		.ILightSceneNode_setLightType(Self._ptr, _type)
	End Method
	Method SetLightData(_light:Byte Ptr)
		.ILightSceneNode_setLightData(Self._ptr, _light)
	End Method
	Method SetRadius(_radius:Float)
		.ILightSceneNode_setRadius(Self._ptr, _radius)
	End Method
	Method GetRadius:Float()
		Local _ret:Float = .ILightSceneNode_getRadius(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method EnableCastShadow(_shadow:Int = -2147483648)
		If _shadow = -2147483648
			.ILightSceneNode_enableCastShadow_OVERLOAD_1(Self._ptr)
		Else
			.ILightSceneNode_enableCastShadow_OVERLOAD_0(Self._ptr, _shadow)
		EndIf
	End Method
	Method GetCastShadow:Int()
		Local _ret:Int = .ILightSceneNode_getCastShadow(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLightType:Int()
		Local _ret:Int = .ILightSceneNode_getLightType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLightData:Byte Ptr()
		Local _ret:Byte Ptr = .ILightSceneNode_getLightData_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type ImaterialRenderer Extends IreferenceCounted Abstract
	Method OnUnsetMaterial()
		.IMaterialRenderer_OnUnsetMaterial(Self._ptr)
	End Method
	Method OnRender:Int(_service:ImaterialRendererServices, _vtxtype:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_service)
		Local _ret:Int = .IMaterialRenderer_OnRender(Self._ptr, p0, _vtxtype)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:ImaterialRenderer()
		Local _ret:Byte Ptr = .new_IMaterialRenderer()
		Local rval:ImaterialRenderer = ImaterialRenderer(New _ImaterialRenderer._withPtr(_ret)._withDel(delete_ImaterialRenderer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method IsTransparent:Int()
		Local _ret:Int = .IMaterialRenderer_isTransparent(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRenderCapability:Int()
		Local _ret:Int = .IMaterialRenderer_getRenderCapability(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method OnSetMaterial(_material:Smaterial, _lastMaterial:Smaterial, _resetAllRenderstates:Int, _services:ImaterialRendererServices)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lastMaterial)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_services)
		.IMaterialRenderer_OnSetMaterial(Self._ptr, p0, p1, _resetAllRenderstates, p3)
	End Method
End Type

Type ImaterialRendererServices Extends _irrlicht_Object Abstract
	Method SetPixelShaderConstant:Int(_name:Byte Ptr, _floats:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setPixelShaderConstant_OVERLOAD_0(Self._ptr, _name, _floats, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPixelShaderConstantWithNameBoolsCount:Int(_name:Byte Ptr, _bools:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setPixelShaderConstant_OVERLOAD_1(Self._ptr, _name, _bools, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPixelShaderConstantWithNameIntsCount:Int(_name:Byte Ptr, _ints:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setPixelShaderConstant_OVERLOAD_2(Self._ptr, _name, _ints, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPixelShaderConstantWithDataStartRegister(_data:Byte Ptr, _startRegister:Int, _constantAmount:Int = -2147483648)
		If _constantAmount = -2147483648
			.IMaterialRendererServices_setPixelShaderConstant_OVERLOAD_4(Self._ptr, _data, _startRegister)
		Else
			.IMaterialRendererServices_setPixelShaderConstant_OVERLOAD_3(Self._ptr, _data, _startRegister, _constantAmount)
		EndIf
	End Method
	Method SetBasicRenderStates(_material:Smaterial, _lastMaterial:Smaterial, _resetAllRenderstates:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lastMaterial)
		.IMaterialRendererServices_setBasicRenderStates(Self._ptr, p0, p1, _resetAllRenderstates)
	End Method
	Method GetVideoDriver:IvideoDriver()
		Local _ret:Byte Ptr = .IMaterialRendererServices_getVideoDriver(Self._ptr)
		Local rval:IvideoDriver = IvideoDriver(New _IvideoDriver._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetVertexShaderConstant:Int(_name:Byte Ptr, _floats:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setVertexShaderConstant_OVERLOAD_0(Self._ptr, _name, _floats, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetVertexShaderConstantWithNameBoolsCount:Int(_name:Byte Ptr, _bools:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setVertexShaderConstant_OVERLOAD_1(Self._ptr, _name, _bools, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetVertexShaderConstantWithNameIntsCount:Int(_name:Byte Ptr, _ints:Byte Ptr, _count:Int)
		Local _ret:Int = .IMaterialRendererServices_setVertexShaderConstant_OVERLOAD_2(Self._ptr, _name, _ints, _count)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetVertexShaderConstantWithDataStartRegister(_data:Byte Ptr, _startRegister:Int, _constantAmount:Int = -2147483648)
		If _constantAmount = -2147483648
			.IMaterialRendererServices_setVertexShaderConstant_OVERLOAD_4(Self._ptr, _data, _startRegister)
		Else
			.IMaterialRendererServices_setVertexShaderConstant_OVERLOAD_3(Self._ptr, _data, _startRegister, _constantAmount)
		EndIf
	End Method
End Type

Type ImeshCache Extends IreferenceCounted Abstract
	Method GetMeshIndex:Int(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Int = .IMeshCache_getMeshIndex(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsMeshLoaded:Int(_name:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Int = .IMeshCache_isMeshLoaded(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMeshName:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IMeshCache_getMeshName_OVERLOAD_0(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetMeshNameWithMesh:Byte Ptr(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshCache_getMeshName_OVERLOAD_1(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetMeshCount:Int()
		Local _ret:Int = .IMeshCache_getMeshCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddMesh(_name:Path, _mesh:IanimatedMesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IMeshCache_addMesh(Self._ptr, p0, p1)
	End Method
	Method GetMeshByName:IanimatedMesh(_name:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Byte Ptr = .IMeshCache_getMeshByName(Self._ptr, p0)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshByFilename:IanimatedMesh(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .IMeshCache_getMeshByFilename(Self._ptr, p0)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshFilename:Path(_index:Int)
		Local _ret:Byte Ptr = .IMeshCache_getMeshFilename_OVERLOAD_0(Self._ptr, _index)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshFilenameWithMesh:Path(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshCache_getMeshFilename_OVERLOAD_1(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RenameMesh:Int(_index:Int, _name:Path)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Int = .IMeshCache_renameMesh_OVERLOAD_0(Self._ptr, _index, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RenameMeshWithMeshName:Int(_mesh:Imesh, _name:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Int = .IMeshCache_renameMesh_OVERLOAD_1(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClearUnusedMeshes()
		.IMeshCache_clearUnusedMeshes(Self._ptr)
	End Method
	Method GetMeshByIndex:IanimatedMesh(_index:Int)
		Local _ret:Byte Ptr = .IMeshCache_getMeshByIndex(Self._ptr, _index)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMeshFilename:Int(_index:Int, _filename:Path)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IMeshCache_setMeshFilename_OVERLOAD_0(Self._ptr, _index, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMeshFilenameWithMeshFilename:Int(_mesh:Imesh, _filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IMeshCache_setMeshFilename_OVERLOAD_1(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Clear()
		.IMeshCache_clear(Self._ptr)
	End Method
	Method RemoveMesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IMeshCache_removeMesh(Self._ptr, p0)
	End Method
End Type

Type ImeshLoader Extends IreferenceCounted Abstract
	Method IsAloadableFileExtension:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .IMeshLoader_isALoadableFileExtension(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateMesh:IanimatedMesh(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .IMeshLoader_createMesh(Self._ptr, p0)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IvertexManipulator Extends _irrlicht_Object Abstract
	Function Make:IvertexManipulator()
		Local _ret:Byte Ptr = .new_IVertexManipulator()
		Local rval:IvertexManipulator = IvertexManipulator(New _IvertexManipulator._withPtr(_ret)._withDel(delete_IvertexManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type SvertexColorSetManipulator Extends IvertexManipulator Abstract
	Function MakeWithColor:SvertexColorSetManipulator(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Byte Ptr = .new_SVertexColorSetManipulator(p0)
		Local rval:SvertexColorSetManipulator = SvertexColorSetManipulator(New _SvertexColorSetManipulator._withPtr(_ret)._withDel(delete_SvertexColorSetManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorSetManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorSetAlphaManipulator Extends IvertexManipulator Abstract
	Function MakeWithAlpha:SvertexColorSetAlphaManipulator(_alpha:Int)
		Local _ret:Byte Ptr = .new_SVertexColorSetAlphaManipulator(_alpha)
		Local rval:SvertexColorSetAlphaManipulator = SvertexColorSetAlphaManipulator(New _SvertexColorSetAlphaManipulator._withPtr(_ret)._withDel(delete_SvertexColorSetAlphaManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorSetAlphaManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorInvertManipulator Extends IvertexManipulator Abstract
	Function Make:SvertexColorInvertManipulator()
		Local _ret:Byte Ptr = .new_SVertexColorInvertManipulator()
		Local rval:SvertexColorInvertManipulator = SvertexColorInvertManipulator(New _SvertexColorInvertManipulator._withPtr(_ret)._withDel(delete_SvertexColorInvertManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorInvertManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorThresholdManipulator Extends IvertexManipulator Abstract
	Function MakeWithThresholdLowHigh:SvertexColorThresholdManipulator(_threshold:Byte, _low:Scolor, _high:Scolor)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_low)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_high)
		Local _ret:Byte Ptr = .new_SVertexColorThresholdManipulator(_threshold, p1, p2)
		Local rval:SvertexColorThresholdManipulator = SvertexColorThresholdManipulator(New _SvertexColorThresholdManipulator._withPtr(_ret)._withDel(delete_SvertexColorThresholdManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorThresholdManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorBrightnessManipulator Extends IvertexManipulator Abstract
	Function MakeWithAmount:SvertexColorBrightnessManipulator(_amount:Int)
		Local _ret:Byte Ptr = .new_SVertexColorBrightnessManipulator(_amount)
		Local rval:SvertexColorBrightnessManipulator = SvertexColorBrightnessManipulator(New _SvertexColorBrightnessManipulator._withPtr(_ret)._withDel(delete_SvertexColorBrightnessManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorBrightnessManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorContrastManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactor:SvertexColorContrastManipulator(_factor:Float)
		Local _ret:Byte Ptr = .new_SVertexColorContrastManipulator(_factor)
		Local rval:SvertexColorContrastManipulator = SvertexColorContrastManipulator(New _SvertexColorContrastManipulator._withPtr(_ret)._withDel(delete_SvertexColorContrastManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorContrastManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorContrastBrightnessManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactorAmount:SvertexColorContrastBrightnessManipulator(_factor:Float, _amount:Int)
		Local _ret:Byte Ptr = .new_SVertexColorContrastBrightnessManipulator(_factor, _amount)
		Local rval:SvertexColorContrastBrightnessManipulator = SvertexColorContrastBrightnessManipulator(New _SvertexColorContrastBrightnessManipulator._withPtr(_ret)._withDel(delete_SvertexColorContrastBrightnessManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorContrastBrightnessManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorGammaManipulator Extends IvertexManipulator Abstract
	Function MakeWithGamma:SvertexColorGammaManipulator(_gamma:Float)
		Local _ret:Byte Ptr = .new_SVertexColorGammaManipulator(_gamma)
		Local rval:SvertexColorGammaManipulator = SvertexColorGammaManipulator(New _SvertexColorGammaManipulator._withPtr(_ret)._withDel(delete_SvertexColorGammaManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorGammaManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorScaleManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactor:SvertexColorScaleManipulator(_factor:Float)
		Local _ret:Byte Ptr = .new_SVertexColorScaleManipulator(_factor)
		Local rval:SvertexColorScaleManipulator = SvertexColorScaleManipulator(New _SvertexColorScaleManipulator._withPtr(_ret)._withDel(delete_SvertexColorScaleManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorScaleManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorDesaturateToLightnessManipulator Extends IvertexManipulator Abstract
	Function Make:SvertexColorDesaturateToLightnessManipulator()
		Local _ret:Byte Ptr = .new_SVertexColorDesaturateToLightnessManipulator()
		Local rval:SvertexColorDesaturateToLightnessManipulator = SvertexColorDesaturateToLightnessManipulator(New _SvertexColorDesaturateToLightnessManipulator._withPtr(_ret)._withDel(delete_SvertexColorDesaturateToLightnessManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorDesaturateToLightnessManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorDesaturateToAverageManipulator Extends IvertexManipulator Abstract
	Function Make:SvertexColorDesaturateToAverageManipulator()
		Local _ret:Byte Ptr = .new_SVertexColorDesaturateToAverageManipulator()
		Local rval:SvertexColorDesaturateToAverageManipulator = SvertexColorDesaturateToAverageManipulator(New _SvertexColorDesaturateToAverageManipulator._withPtr(_ret)._withDel(delete_SvertexColorDesaturateToAverageManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorDesaturateToAverageManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorDesaturateToLuminanceManipulator Extends IvertexManipulator Abstract
	Function Make:SvertexColorDesaturateToLuminanceManipulator()
		Local _ret:Byte Ptr = .new_SVertexColorDesaturateToLuminanceManipulator()
		Local rval:SvertexColorDesaturateToLuminanceManipulator = SvertexColorDesaturateToLuminanceManipulator(New _SvertexColorDesaturateToLuminanceManipulator._withPtr(_ret)._withDel(delete_SvertexColorDesaturateToLuminanceManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorDesaturateToLuminanceManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorInterpolateLinearManipulator Extends IvertexManipulator Abstract
	Function MakeWithColorFactor:SvertexColorInterpolateLinearManipulator(_color:Scolor, _factor:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Byte Ptr = .new_SVertexColorInterpolateLinearManipulator(p0, _factor)
		Local rval:SvertexColorInterpolateLinearManipulator = SvertexColorInterpolateLinearManipulator(New _SvertexColorInterpolateLinearManipulator._withPtr(_ret)._withDel(delete_SvertexColorInterpolateLinearManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorInterpolateLinearManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexColorInterpolateQuadraticManipulator Extends IvertexManipulator Abstract
	Function MakeWithColor1Color2Factor:SvertexColorInterpolateQuadraticManipulator(_color1:Scolor, _color2:Scolor, _factor:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color2)
		Local _ret:Byte Ptr = .new_SVertexColorInterpolateQuadraticManipulator(p0, p1, _factor)
		Local rval:SvertexColorInterpolateQuadraticManipulator = SvertexColorInterpolateQuadraticManipulator(New _SvertexColorInterpolateQuadraticManipulator._withPtr(_ret)._withDel(delete_SvertexColorInterpolateQuadraticManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexColorInterpolateQuadraticManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type SvertexPositionScaleManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactor:SvertexPositionScaleManipulator(_factor:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		Local _ret:Byte Ptr = .new_SVertexPositionScaleManipulator(p0)
		Local rval:SvertexPositionScaleManipulator = SvertexPositionScaleManipulator(New _SvertexPositionScaleManipulator._withPtr(_ret)._withDel(delete_SvertexPositionScaleManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type SvertexPositionScaleAlongNormalsManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactor:SvertexPositionScaleAlongNormalsManipulator(_factor:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		Local _ret:Byte Ptr = .new_SVertexPositionScaleAlongNormalsManipulator(p0)
		Local rval:SvertexPositionScaleAlongNormalsManipulator = SvertexPositionScaleAlongNormalsManipulator(New _SvertexPositionScaleAlongNormalsManipulator._withPtr(_ret)._withDel(delete_SvertexPositionScaleAlongNormalsManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type SvertexPositionTransformManipulator Extends IvertexManipulator Abstract
	Function MakeWithM:SvertexPositionTransformManipulator(_m:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_m)
		Local _ret:Byte Ptr = .new_SVertexPositionTransformManipulator(p0)
		Local rval:SvertexPositionTransformManipulator = SvertexPositionTransformManipulator(New _SvertexPositionTransformManipulator._withPtr(_ret)._withDel(delete_SvertexPositionTransformManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
End Type

Type SvertexTcoordsScaleManipulator Extends IvertexManipulator Abstract
	Function MakeWithFactor:SvertexTcoordsScaleManipulator(_factor:Vector2df, _uvSet:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		Local _ret:Byte Ptr
		If _uvSet = -2147483648
			_ret = .new_SVertexTCoordsScaleManipulator_OVERLOAD_1(p0)
		Else
			_ret = .new_SVertexTCoordsScaleManipulator_OVERLOAD_0(p0, _uvSet)
		EndIf
		Local rval:SvertexTcoordsScaleManipulator = SvertexTcoordsScaleManipulator(New _SvertexTcoordsScaleManipulator._withPtr(_ret)._withDel(delete_SvertexTcoordsScaleManipulator))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Call(_vertex:Byte Ptr)
		.SVertexTCoordsScaleManipulator___funcall__(Self._ptr, _vertex)
	End Method
End Type

Type ImeshManipulator Extends IreferenceCounted Abstract
	Method MakePlanarTextureMapping(_mesh:Imesh, _resolution:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		If _resolution = -1e100000
			.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_1(Self._ptr, p0)
		Else
			.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_0(Self._ptr, p0, _resolution)
		EndIf
	End Method
	Method MakePlanarTextureMappingWithMeshbuffer(_meshbuffer:ImeshBuffer, _resolution:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_meshbuffer)
		If _resolution = -1e100000
			.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_3(Self._ptr, p0)
		Else
			.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_2(Self._ptr, p0, _resolution)
		EndIf
	End Method
	Method MakePlanarTextureMappingWithMeshResolutionSResolutionTAxisOffset(_mesh:Imesh, _resolutionS:Float, _resolutionT:Float, _axis:Byte, _offset:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_offset)
		.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_4(Self._ptr, p0, _resolutionS, _resolutionT, _axis, p4)
	End Method
	Method MakePlanarTextureMappingWithBufferResolutionSResolutionTAxisOffset(_buffer:ImeshBuffer, _resolutionS:Float, _resolutionT:Float, _axis:Byte, _offset:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_offset)
		.IMeshManipulator_makePlanarTextureMapping_OVERLOAD_5(Self._ptr, p0, _resolutionS, _resolutionT, _axis, p4)
	End Method
	Method CreateMeshWith1Tcoords:Imesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshManipulator_createMeshWith1TCoords(Self._ptr, p0)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method FlipSurfaces(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IMeshManipulator_flipSurfaces(Self._ptr, p0)
	End Method
	Method CreateMeshWelded:Imesh(_mesh:Imesh, _tolerance:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr
		If _tolerance = -1e100000
			_ret = .IMeshManipulator_createMeshWelded_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IMeshManipulator_createMeshWelded_OVERLOAD_0(Self._ptr, p0, _tolerance)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RecalculateTangents(_mesh:Imesh, _recalculateNormals:Int = -2147483648, _smooth:Int = -2147483648, _angleWeighted:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		If _recalculateNormals = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_3(Self._ptr, p0)
		ElseIf _smooth = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_2(Self._ptr, p0, _recalculateNormals)
		ElseIf _angleWeighted = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_1(Self._ptr, p0, _recalculateNormals, _smooth)
		Else
			.IMeshManipulator_recalculateTangents_OVERLOAD_0(Self._ptr, p0, _recalculateNormals, _smooth, _angleWeighted)
		EndIf
	End Method
	Method RecalculateTangentsWithBuffer(_buffer:ImeshBuffer, _recalculateNormals:Int = -2147483648, _smooth:Int = -2147483648, _angleWeighted:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		If _recalculateNormals = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_7(Self._ptr, p0)
		ElseIf _smooth = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_6(Self._ptr, p0, _recalculateNormals)
		ElseIf _angleWeighted = -2147483648
			.IMeshManipulator_recalculateTangents_OVERLOAD_5(Self._ptr, p0, _recalculateNormals, _smooth)
		Else
			.IMeshManipulator_recalculateTangents_OVERLOAD_4(Self._ptr, p0, _recalculateNormals, _smooth, _angleWeighted)
		EndIf
	End Method
	Method CreateAnimatedMesh:IanimatedMesh(_mesh:Imesh, _type:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr
		If _type = -2147483648
			_ret = .IMeshManipulator_createAnimatedMesh_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IMeshManipulator_createAnimatedMesh_OVERLOAD_0(Self._ptr, p0, _type)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateForsythOptimizedMesh:Imesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshManipulator_createForsythOptimizedMesh(Self._ptr, p0)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateMeshWithTangents:Imesh(_mesh:Imesh, _recalculateNormals:Int = -2147483648, _smooth:Int = -2147483648, _angleWeighted:Int = -2147483648, _recalculateTangents:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr
		If _recalculateNormals = -2147483648
			_ret = .IMeshManipulator_createMeshWithTangents_OVERLOAD_4(Self._ptr, p0)
		ElseIf _smooth = -2147483648
			_ret = .IMeshManipulator_createMeshWithTangents_OVERLOAD_3(Self._ptr, p0, _recalculateNormals)
		ElseIf _angleWeighted = -2147483648
			_ret = .IMeshManipulator_createMeshWithTangents_OVERLOAD_2(Self._ptr, p0, _recalculateNormals, _smooth)
		ElseIf _recalculateTangents = -2147483648
			_ret = .IMeshManipulator_createMeshWithTangents_OVERLOAD_1(Self._ptr, p0, _recalculateNormals, _smooth, _angleWeighted)
		Else
			_ret = .IMeshManipulator_createMeshWithTangents_OVERLOAD_0(Self._ptr, p0, _recalculateNormals, _smooth, _angleWeighted, _recalculateTangents)
		EndIf
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ScaleTcoords(_mesh:Imesh, _factor:Vector2df, _level:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		If _level = -2147483648
			.IMeshManipulator_scaleTCoords_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			.IMeshManipulator_scaleTCoords_OVERLOAD_0(Self._ptr, p0, p1, _level)
		EndIf
	End Method
	Method ScaleTcoordsWithBufferFactor(_buffer:ImeshBuffer, _factor:Vector2df, _level:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		If _level = -2147483648
			.IMeshManipulator_scaleTCoords_OVERLOAD_3(Self._ptr, p0, p1)
		Else
			.IMeshManipulator_scaleTCoords_OVERLOAD_2(Self._ptr, p0, p1, _level)
		EndIf
	End Method
	Method Scale(_mesh:Imesh, _factor:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		.IMeshManipulator_scale_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method ScaleWithBufferFactor(_buffer:ImeshBuffer, _factor:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		.IMeshManipulator_scale_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetVertexColors(_mesh:Imesh, _color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IMeshManipulator_setVertexColors_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method SetVertexColorsWithBufferColor(_buffer:ImeshBuffer, _color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IMeshManipulator_setVertexColors_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method CreateMeshWith2Tcoords:Imesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshManipulator_createMeshWith2TCoords(Self._ptr, p0)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TransformMesh(_mesh:Imesh, _m:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_m)
		.IMeshManipulator_transformMesh(Self._ptr, p0, p1)
	End Method
	Method ScaleMesh(_mesh:Imesh, _factor:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_factor)
		.IMeshManipulator_scaleMesh(Self._ptr, p0, p1)
	End Method
	Method RecalculateNormals(_mesh:Imesh, _smooth:Int = -2147483648, _angleWeighted:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		If _smooth = -2147483648
			.IMeshManipulator_recalculateNormals_OVERLOAD_2(Self._ptr, p0)
		ElseIf _angleWeighted = -2147483648
			.IMeshManipulator_recalculateNormals_OVERLOAD_1(Self._ptr, p0, _smooth)
		Else
			.IMeshManipulator_recalculateNormals_OVERLOAD_0(Self._ptr, p0, _smooth, _angleWeighted)
		EndIf
	End Method
	Method RecalculateNormalsWithBuffer(_buffer:ImeshBuffer, _smooth:Int = -2147483648, _angleWeighted:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		If _smooth = -2147483648
			.IMeshManipulator_recalculateNormals_OVERLOAD_5(Self._ptr, p0)
		ElseIf _angleWeighted = -2147483648
			.IMeshManipulator_recalculateNormals_OVERLOAD_4(Self._ptr, p0, _smooth)
		Else
			.IMeshManipulator_recalculateNormals_OVERLOAD_3(Self._ptr, p0, _smooth, _angleWeighted)
		EndIf
	End Method
	Method SetVertexColorAlpha(_mesh:Imesh, _alpha:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IMeshManipulator_setVertexColorAlpha_OVERLOAD_0(Self._ptr, p0, _alpha)
	End Method
	Method SetVertexColorAlphaWithBufferAlpha(_buffer:ImeshBuffer, _alpha:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		.IMeshManipulator_setVertexColorAlpha_OVERLOAD_1(Self._ptr, p0, _alpha)
	End Method
	Method CreateMeshUniquePrimitives:Imesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshManipulator_createMeshUniquePrimitives(Self._ptr, p0)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Transform(_mesh:Imesh, _m:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_m)
		.IMeshManipulator_transform_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method TransformWithBufferM(_buffer:ImeshBuffer, _m:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_buffer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_m)
		.IMeshManipulator_transform_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method CreateMeshCopy:Byte Ptr(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IMeshManipulator_createMeshCopy(Self._ptr, p0)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetPolyCount:Int(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Int = .IMeshManipulator_getPolyCount_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPolyCountWithMesh:Int(_mesh:IanimatedMesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Int = .IMeshManipulator_getPolyCount_OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type ImeshSceneNode Extends IsceneNode Abstract
	Method GetMesh:Imesh()
		Local _ret:Byte Ptr = .IMeshSceneNode_getMesh(Self._ptr)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddShadowVolumeSceneNode:IshadowVolumeSceneNode(_shadowMesh:Imesh = Null, _id:Int = -2147483648, _zfailmethod:Int = -2147483648, _infinity:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_shadowMesh)
		Local _ret:Byte Ptr
		If _shadowMesh = Null
			_ret = .IMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_4(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .IMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_3(Self._ptr, p0)
		ElseIf _zfailmethod = -2147483648
			_ret = .IMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_2(Self._ptr, p0, _id)
		ElseIf _infinity = -1e100000
			_ret = .IMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_1(Self._ptr, p0, _id, _zfailmethod)
		Else
			_ret = .IMeshSceneNode_addShadowVolumeSceneNode_OVERLOAD_0(Self._ptr, p0, _id, _zfailmethod, _infinity)
		EndIf
		Local rval:IshadowVolumeSceneNode = IshadowVolumeSceneNode(New _IshadowVolumeSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsReadOnlyMaterials:Int()
		Local _ret:Int = .IMeshSceneNode_isReadOnlyMaterials(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IMeshSceneNode_setMesh(Self._ptr, p0)
	End Method
	Method SetReadOnlyMaterials(_readonly:Int)
		.IMeshSceneNode_setReadOnlyMaterials(Self._ptr, _readonly)
	End Method
End Type

Type ImeshWriter Extends IreferenceCounted Abstract
	Method GetType:Int()
		Local _ret:Int = .IMeshWriter_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method WriteMesh:Int(_file:IwriteFile, _mesh:Imesh, _flags:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Int
		If _flags = -2147483648
			_ret = .IMeshWriter_writeMesh_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .IMeshWriter_writeMesh_OVERLOAD_0(Self._ptr, p0, p1, _flags)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IcolladaMeshWriterProperties Extends IreferenceCounted Abstract
	Method GetColorMapping:Int(_material:Smaterial, _cs:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Int = .IColladaMeshWriterProperties_getColorMapping(Self._ptr, p0, _cs)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTextureIdx:Int(_material:Smaterial, _cs:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Int = .IColladaMeshWriterProperties_getTextureIdx(Self._ptr, p0, _cs)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCustomColor:Scolor(_material:Smaterial, _cs:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Byte Ptr = .IColladaMeshWriterProperties_getCustomColor(Self._ptr, p0, _cs)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMesh:Imesh(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .IColladaMeshWriterProperties_getMesh(Self._ptr, p0)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsExportable:Int(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int = .IColladaMeshWriterProperties_isExportable(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetReflectivity:Float(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Float = .IColladaMeshWriterProperties_getReflectivity(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetTransparentFx:Int(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Int = .IColladaMeshWriterProperties_getTransparentFx(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method UseNodeMaterial:Int(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int = .IColladaMeshWriterProperties_useNodeMaterial(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndexOfRefraction:Float(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Float = .IColladaMeshWriterProperties_getIndexOfRefraction(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetTransparency:Float(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Float = .IColladaMeshWriterProperties_getTransparency(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetTechniqueFx:Int(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local _ret:Int = .IColladaMeshWriterProperties_getTechniqueFx(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IcolladaMeshWriterNames Extends IreferenceCounted Abstract
	Method NameForMesh:String(_mesh:Imesh, _instance:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Byte Ptr = .IColladaMeshWriterNames_nameForMesh(Self._ptr, p0, _instance)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method NameForNode:String(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .IColladaMeshWriterNames_nameForNode(Self._ptr, p0)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method NameForMaterial:String(_material:Smaterial, _materialId:Int, _mesh:Imesh, _node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .IColladaMeshWriterNames_nameForMaterial(Self._ptr, p0, _materialId, p2, p3)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
End Type

Type IcolladaMeshWriter Extends ImeshWriter Abstract
	Method GetWriteTextures:Int()
		Local _ret:Int = .IColladaMeshWriter_getWriteTextures(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetWriteDefaultScene(_write:Int)
		.IColladaMeshWriter_setWriteDefaultScene(Self._ptr, _write)
	End Method
	Method WriteScene:Int(_file:IwriteFile, _root:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_root)
		Local _ret:Int = .IColladaMeshWriter_writeScene(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetWriteTextures(_write:Int)
		.IColladaMeshWriter_setWriteTextures(Self._ptr, _write)
	End Method
	Method GetNameGenerator:IcolladaMeshWriterNames()
		Local _ret:Byte Ptr = .IColladaMeshWriter_getNameGenerator(Self._ptr)
		Local rval:IcolladaMeshWriterNames = IcolladaMeshWriterNames(New _IcolladaMeshWriterNames._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetProperties:IcolladaMeshWriterProperties()
		Local _ret:Byte Ptr = .IColladaMeshWriter_getProperties(Self._ptr)
		Local rval:IcolladaMeshWriterProperties = IcolladaMeshWriterProperties(New _IcolladaMeshWriterProperties._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDefaultNameGenerator:IcolladaMeshWriterNames()
		Local _ret:Byte Ptr = .IColladaMeshWriter_getDefaultNameGenerator(Self._ptr)
		Local rval:IcolladaMeshWriterNames = IcolladaMeshWriterNames(New _IcolladaMeshWriterNames._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetGeometryWriting(_writeStyle:Int)
		.IColladaMeshWriter_setGeometryWriting(Self._ptr, _writeStyle)
	End Method
	Method SetNameGenerator(_nameGenerator:IcolladaMeshWriterNames)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nameGenerator)
		.IColladaMeshWriter_setNameGenerator(Self._ptr, p0)
	End Method
	Method GetWriteDefaultScene:Int()
		Local _ret:Int = .IColladaMeshWriter_getWriteDefaultScene(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetGeometryWriting:Int()
		Local _ret:Int = .IColladaMeshWriter_getGeometryWriting(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ToNcname:String(_oldString:String, _prefix:String = Null)
		Local cs0:Byte Ptr = _oldString.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local cs1:Byte Ptr = _prefix.ToCString(), is1:Byte Ptr = new_fromCString_OVERLOAD_1(cs1)
		Local _ret:Byte Ptr
		If _prefix = Null
			_ret = .IColladaMeshWriter_toNCName_OVERLOAD_1(Self._ptr, is0)
		Else
			_ret = .IColladaMeshWriter_toNCName_OVERLOAD_0(Self._ptr, is0, is1)
		EndIf
		MemFree cs0 ; delete_path is0
		MemFree cs1 ; delete_path is1
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetDefaultProperties:IcolladaMeshWriterProperties()
		Local _ret:Byte Ptr = .IColladaMeshWriter_getDefaultProperties(Self._ptr)
		Local rval:IcolladaMeshWriterProperties = IcolladaMeshWriterProperties(New _IcolladaMeshWriterProperties._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetExportSmaterialsOnlyOnce:Int()
		Local _ret:Int = .IColladaMeshWriter_getExportSMaterialsOnlyOnce(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAmbientLight:Scolorf()
		Local _ret:Byte Ptr = .IColladaMeshWriter_getAmbientLight(Self._ptr)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret)._withDel(delete_Scolorf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetExportSmaterialsOnlyOnce(_exportOnce:Int)
		.IColladaMeshWriter_setExportSMaterialsOnlyOnce(Self._ptr, _exportOnce)
	End Method
	Method SetAmbientLight(_ambientColor:Scolorf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_ambientColor)
		.IColladaMeshWriter_setAmbientLight(Self._ptr, p0)
	End Method
	Method SetProperties(_p:IcolladaMeshWriterProperties)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		.IColladaMeshWriter_setProperties(Self._ptr, p0)
	End Method
End Type

Type ImetaTriangleSelector Extends ItriangleSelector Abstract
	Method AddTriangleSelector(_toAdd:ItriangleSelector)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_toAdd)
		.IMetaTriangleSelector_addTriangleSelector(Self._ptr, p0)
	End Method
	Method RemoveAllTriangleSelectors()
		.IMetaTriangleSelector_removeAllTriangleSelectors(Self._ptr)
	End Method
	Method RemoveTriangleSelector:Int(_toRemove:ItriangleSelector)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_toRemove)
		Local _ret:Int = .IMetaTriangleSelector_removeTriangleSelector(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Iosoperator Extends IreferenceCounted Abstract
	Method GetProcessorSpeedMhz:Int(_MHz:Byte Ptr)
		Local _ret:Int = .IOSOperator_getProcessorSpeedMHz(Self._ptr, _MHz)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CopyToClipboard(_text:Byte Ptr)
		.IOSOperator_copyToClipboard(Self._ptr, _text)
	End Method
	Method GetSystemMemory:Int(_Total:Byte Ptr, _Avail:Byte Ptr)
		Local _ret:Int = .IOSOperator_getSystemMemory(Self._ptr, _Total, _Avail)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetOperationSystemVersion:String()
		Local _ret:Byte Ptr = .IOSOperator_getOperationSystemVersion(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetOperatingSystemVersion:String()
		Local _ret:Byte Ptr = .IOSOperator_getOperatingSystemVersion(Self._ptr)
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Method
	Method GetTextFromClipboard:Byte Ptr()
		Local _ret:Byte Ptr = .IOSOperator_getTextFromClipboard(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type IparticleEmitter Extends IattributeExchangingObject Abstract
	Method GetMinLifeTime:Int()
		Local _ret:Int = .IParticleEmitter_getMinLifeTime(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaxStartSize:Dimension2df()
		Local _ret:Byte Ptr = .IParticleEmitter_getMaxStartSize(Self._ptr)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDirection(_newDirection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newDirection)
		.IParticleEmitter_setDirection(Self._ptr, p0)
	End Method
	Method SetMinStartColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IParticleEmitter_setMinStartColor(Self._ptr, p0)
	End Method
	Method SetMinParticlesPerSecond(_minPPS:Int)
		.IParticleEmitter_setMinParticlesPerSecond(Self._ptr, _minPPS)
	End Method
	Method GetMaxLifeTime:Int()
		Local _ret:Int = .IParticleEmitter_getMaxLifeTime(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Emitt:Int(_now:Int, _timeSinceLastCall:Int, _outArray:Byte Ptr)
		Local _ret:Int = .IParticleEmitter_emitt(Self._ptr, _now, _timeSinceLastCall, _outArray)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMaxStartSize(_size:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IParticleEmitter_setMaxStartSize(Self._ptr, p0)
	End Method
	Method GetMaxParticlesPerSecond:Int()
		Local _ret:Int = .IParticleEmitter_getMaxParticlesPerSecond(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetMaxLifeTime(_lifeTimeMax:Int)
		.IParticleEmitter_setMaxLifeTime(Self._ptr, _lifeTimeMax)
	End Method
	Method SetMaxAngleDegrees(_maxAngleDegrees:Int)
		.IParticleEmitter_setMaxAngleDegrees(Self._ptr, _maxAngleDegrees)
	End Method
	Method SetMaxParticlesPerSecond(_maxPPS:Int)
		.IParticleEmitter_setMaxParticlesPerSecond(Self._ptr, _maxPPS)
	End Method
	Method GetMaxAngleDegrees:Int()
		Local _ret:Int = .IParticleEmitter_getMaxAngleDegrees(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetType:Int()
		Local _ret:Int = .IParticleEmitter_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMinStartSize:Dimension2df()
		Local _ret:Byte Ptr = .IParticleEmitter_getMinStartSize(Self._ptr)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMinStartSize(_size:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		.IParticleEmitter_setMinStartSize(Self._ptr, p0)
	End Method
	Method GetMinStartColor:Scolor()
		Local _ret:Byte Ptr = .IParticleEmitter_getMinStartColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetMaxStartColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.IParticleEmitter_setMaxStartColor(Self._ptr, p0)
	End Method
	Method SetMinLifeTime(_lifeTimeMin:Int)
		.IParticleEmitter_setMinLifeTime(Self._ptr, _lifeTimeMin)
	End Method
	Method GetDirection:Vector3df()
		Local _ret:Byte Ptr = .IParticleEmitter_getDirection(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMaxStartColor:Scolor()
		Local _ret:Byte Ptr = .IParticleEmitter_getMaxStartColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMinParticlesPerSecond:Int()
		Local _ret:Int = .IParticleEmitter_getMinParticlesPerSecond(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IparticleAnimatedMeshSceneNodeEmitter Extends IparticleEmitter Abstract
	Method SetEveryMeshVertex(_everyMeshVertex:Int = -2147483648)
		If _everyMeshVertex = -2147483648
			.IParticleAnimatedMeshSceneNodeEmitter_setEveryMeshVertex_OVERLOAD_1(Self._ptr)
		Else
			.IParticleAnimatedMeshSceneNodeEmitter_setEveryMeshVertex_OVERLOAD_0(Self._ptr, _everyMeshVertex)
		EndIf
	End Method
	Method GetEveryMeshVertex:Int()
		Local _ret:Int = .IParticleAnimatedMeshSceneNodeEmitter_getEveryMeshVertex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetNormalDirectionModifier:Float()
		Local _ret:Float = .IParticleAnimatedMeshSceneNodeEmitter_getNormalDirectionModifier(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method IsUsingNormalDirection:Int()
		Local _ret:Int = .IParticleAnimatedMeshSceneNodeEmitter_isUsingNormalDirection(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetNormalDirectionModifier(_normalDirectionModifier:Float)
		.IParticleAnimatedMeshSceneNodeEmitter_setNormalDirectionModifier(Self._ptr, _normalDirectionModifier)
	End Method
	Method GetAnimatedMeshSceneNode:IanimatedMeshSceneNode()
		Local _ret:Byte Ptr = .IParticleAnimatedMeshSceneNodeEmitter_getAnimatedMeshSceneNode(Self._ptr)
		Local rval:IanimatedMeshSceneNode = IanimatedMeshSceneNode(New _IanimatedMeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetAnimatedMeshSceneNode(_node:IanimatedMeshSceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.IParticleAnimatedMeshSceneNodeEmitter_setAnimatedMeshSceneNode(Self._ptr, p0)
	End Method
	Method SetUseNormalDirection(_useNormalDirection:Int = -2147483648)
		If _useNormalDirection = -2147483648
			.IParticleAnimatedMeshSceneNodeEmitter_setUseNormalDirection_OVERLOAD_1(Self._ptr)
		Else
			.IParticleAnimatedMeshSceneNodeEmitter_setUseNormalDirection_OVERLOAD_0(Self._ptr, _useNormalDirection)
		EndIf
	End Method
End Type

Type IparticleBoxEmitter Extends IparticleEmitter Abstract
	Method SetBox(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		.IParticleBoxEmitter_setBox(Self._ptr, p0)
	End Method
	Method GetBox:Aabbox3df()
		Local _ret:Byte Ptr = .IParticleBoxEmitter_getBox(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IparticleCylinderEmitter Extends IparticleEmitter Abstract
	Method SetCenter(_center:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		.IParticleCylinderEmitter_setCenter(Self._ptr, p0)
	End Method
	Method GetRadius:Float()
		Local _ret:Float = .IParticleCylinderEmitter_getRadius(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetRadius(_radius:Float)
		.IParticleCylinderEmitter_setRadius(Self._ptr, _radius)
	End Method
	Method GetCenter:Vector3df()
		Local _ret:Byte Ptr = .IParticleCylinderEmitter_getCenter(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLength:Float()
		Local _ret:Float = .IParticleCylinderEmitter_getLength(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetOutlineOnly(_outlineOnly:Int = -2147483648)
		If _outlineOnly = -2147483648
			.IParticleCylinderEmitter_setOutlineOnly_OVERLOAD_1(Self._ptr)
		Else
			.IParticleCylinderEmitter_setOutlineOnly_OVERLOAD_0(Self._ptr, _outlineOnly)
		EndIf
	End Method
	Method GetNormal:Vector3df()
		Local _ret:Byte Ptr = .IParticleCylinderEmitter_getNormal(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetOutlineOnly:Int()
		Local _ret:Int = .IParticleCylinderEmitter_getOutlineOnly(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLength(_length:Float)
		.IParticleCylinderEmitter_setLength(Self._ptr, _length)
	End Method
	Method SetNormal(_normal:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_normal)
		.IParticleCylinderEmitter_setNormal(Self._ptr, p0)
	End Method
End Type

Type IparticleMeshEmitter Extends IparticleEmitter Abstract
	Method GetMesh:Imesh()
		Local _ret:Byte Ptr = .IParticleMeshEmitter_getMesh(Self._ptr)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetEveryMeshVertex(_everyMeshVertex:Int = -2147483648)
		If _everyMeshVertex = -2147483648
			.IParticleMeshEmitter_setEveryMeshVertex_OVERLOAD_1(Self._ptr)
		Else
			.IParticleMeshEmitter_setEveryMeshVertex_OVERLOAD_0(Self._ptr, _everyMeshVertex)
		EndIf
	End Method
	Method GetEveryMeshVertex:Int()
		Local _ret:Int = .IParticleMeshEmitter_getEveryMeshVertex(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsUsingNormalDirection:Int()
		Local _ret:Int = .IParticleMeshEmitter_isUsingNormalDirection(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetNormalDirectionModifier(_normalDirectionModifier:Float)
		.IParticleMeshEmitter_setNormalDirectionModifier(Self._ptr, _normalDirectionModifier)
	End Method
	Method GetNormalDirectionModifier:Float()
		Local _ret:Float = .IParticleMeshEmitter_getNormalDirectionModifier(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetMesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IParticleMeshEmitter_setMesh(Self._ptr, p0)
	End Method
	Method SetUseNormalDirection(_useNormalDirection:Int = -2147483648)
		If _useNormalDirection = -2147483648
			.IParticleMeshEmitter_setUseNormalDirection_OVERLOAD_1(Self._ptr)
		Else
			.IParticleMeshEmitter_setUseNormalDirection_OVERLOAD_0(Self._ptr, _useNormalDirection)
		EndIf
	End Method
End Type

Type IparticleRingEmitter Extends IparticleEmitter Abstract
	Method SetCenter(_center:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		.IParticleRingEmitter_setCenter(Self._ptr, p0)
	End Method
	Method GetRadius:Float()
		Local _ret:Float = .IParticleRingEmitter_getRadius(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetRadius(_radius:Float)
		.IParticleRingEmitter_setRadius(Self._ptr, _radius)
	End Method
	Method GetCenter:Vector3df()
		Local _ret:Byte Ptr = .IParticleRingEmitter_getCenter(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetRingThickness(_ringThickness:Float)
		.IParticleRingEmitter_setRingThickness(Self._ptr, _ringThickness)
	End Method
	Method GetRingThickness:Float()
		Local _ret:Float = .IParticleRingEmitter_getRingThickness(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
End Type

Type IparticleSphereEmitter Extends IparticleEmitter Abstract
	Method SetCenter(_center:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		.IParticleSphereEmitter_setCenter(Self._ptr, p0)
	End Method
	Method GetCenter:Vector3df()
		Local _ret:Byte Ptr = .IParticleSphereEmitter_getCenter(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRadius:Float()
		Local _ret:Float = .IParticleSphereEmitter_getRadius(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetRadius(_radius:Float)
		.IParticleSphereEmitter_setRadius(Self._ptr, _radius)
	End Method
End Type

Type IparticleAffector Extends IattributeExchangingObject Abstract
	Method Affect(_now:Int, _particlearray:Byte Ptr, _count:Int)
		.IParticleAffector_affect(Self._ptr, _now, _particlearray, _count)
	End Method
	Method SetEnabled(_enabled:Int)
		.IParticleAffector_setEnabled(Self._ptr, _enabled)
	End Method
	Method GetType:Int()
		Local _ret:Int = .IParticleAffector_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetEnabled:Int()
		Local _ret:Int = .IParticleAffector_getEnabled(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IparticleAttractionAffector Extends IparticleAffector Abstract
	Method SetAffectX(_affect:Int)
		.IParticleAttractionAffector_setAffectX(Self._ptr, _affect)
	End Method
	Method SetAffectZ(_affect:Int)
		.IParticleAttractionAffector_setAffectZ(Self._ptr, _affect)
	End Method
	Method GetAffectX:Int()
		Local _ret:Int = .IParticleAttractionAffector_getAffectX(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAffectY(_affect:Int)
		.IParticleAttractionAffector_setAffectY(Self._ptr, _affect)
	End Method
	Method GetAffectZ:Int()
		Local _ret:Int = .IParticleAttractionAffector_getAffectZ(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPoint:Vector3df()
		Local _ret:Byte Ptr = .IParticleAttractionAffector_getPoint(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAttract:Int()
		Local _ret:Int = .IParticleAttractionAffector_getAttract(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAffectY:Int()
		Local _ret:Int = .IParticleAttractionAffector_getAffectY(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAttract(_attract:Int)
		.IParticleAttractionAffector_setAttract(Self._ptr, _attract)
	End Method
	Method SetPoint(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		.IParticleAttractionAffector_setPoint(Self._ptr, p0)
	End Method
End Type

Type IparticleFadeOutAffector Extends IparticleAffector Abstract
	Method GetTargetColor:Scolor()
		Local _ret:Byte Ptr = .IParticleFadeOutAffector_getTargetColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFadeOutTime:Int()
		Local _ret:Int = .IParticleFadeOutAffector_getFadeOutTime(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTargetColor(_targetColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_targetColor)
		.IParticleFadeOutAffector_setTargetColor(Self._ptr, p0)
	End Method
	Method SetFadeOutTime(_fadeOutTime:Int)
		.IParticleFadeOutAffector_setFadeOutTime(Self._ptr, _fadeOutTime)
	End Method
End Type

Type IparticleGravityAffector Extends IparticleAffector Abstract
	Method SetTimeForceLost(_timeForceLost:Float)
		.IParticleGravityAffector_setTimeForceLost(Self._ptr, _timeForceLost)
	End Method
	Method SetGravity(_gravity:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_gravity)
		.IParticleGravityAffector_setGravity(Self._ptr, p0)
	End Method
	Method GetGravity:Vector3df()
		Local _ret:Byte Ptr = .IParticleGravityAffector_getGravity(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTimeForceLost:Float()
		Local _ret:Float = .IParticleGravityAffector_getTimeForceLost(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
End Type

Type IparticleRotationAffector Extends IparticleAffector Abstract
	Method GetSpeed:Vector3df()
		Local _ret:Byte Ptr = .IParticleRotationAffector_getSpeed(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPivotPoint:Vector3df()
		Local _ret:Byte Ptr = .IParticleRotationAffector_getPivotPoint(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetSpeed(_speed:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_speed)
		.IParticleRotationAffector_setSpeed(Self._ptr, p0)
	End Method
	Method SetPivotPoint(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		.IParticleRotationAffector_setPivotPoint(Self._ptr, p0)
	End Method
End Type

Type IparticleSystemSceneNode Extends IsceneNode Abstract
	Method CreateGravityAffector:IparticleGravityAffector(_gravity:Vector3df = Null, _timeForceLost:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_gravity)
		Local _ret:Byte Ptr
		If _gravity = Null
			_ret = .IParticleSystemSceneNode_createGravityAffector_OVERLOAD_2(Self._ptr)
		ElseIf _timeForceLost = -2147483648
			_ret = .IParticleSystemSceneNode_createGravityAffector_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IParticleSystemSceneNode_createGravityAffector_OVERLOAD_0(Self._ptr, p0, _timeForceLost)
		EndIf
		Local rval:IparticleGravityAffector = IparticleGravityAffector(New _IparticleGravityAffector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateAttractionAffector:IparticleAttractionAffector(_point:Vector3df, _speed:Float = -1e100000, _attract:Int = -2147483648, _affectX:Int = -2147483648, _affectY:Int = -2147483648, _affectZ:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr
		If _speed = -1e100000
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_5(Self._ptr, p0)
		ElseIf _attract = -2147483648
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_4(Self._ptr, p0, _speed)
		ElseIf _affectX = -2147483648
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_3(Self._ptr, p0, _speed, _attract)
		ElseIf _affectY = -2147483648
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_2(Self._ptr, p0, _speed, _attract, _affectX)
		ElseIf _affectZ = -2147483648
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_1(Self._ptr, p0, _speed, _attract, _affectX, _affectY)
		Else
			_ret = .IParticleSystemSceneNode_createAttractionAffector_OVERLOAD_0(Self._ptr, p0, _speed, _attract, _affectX, _affectY, _affectZ)
		EndIf
		Local rval:IparticleAttractionAffector = IparticleAttractionAffector(New _IparticleAttractionAffector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateBoxEmitter:IparticleBoxEmitter(_box:Aabbox3df = Null, _direction:Vector3df = Null, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p10:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _box = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_11(Self._ptr)
		ElseIf _direction = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_10(Self._ptr, p0)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_9(Self._ptr, p0, p1)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_8(Self._ptr, p0, p1, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_7(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_6(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_5(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_4(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_3(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_2(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_1(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p9)
		Else
			_ret = .IParticleSystemSceneNode_createBoxEmitter_OVERLOAD_0(Self._ptr, p0, p1, _minParticlesPerSecond, _maxParticlesPerSecond, p4, p5, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p9, p10)
		EndIf
		Local rval:IparticleBoxEmitter = IparticleBoxEmitter(New _IparticleBoxEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetEmitter(_emitter:IparticleEmitter)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_emitter)
		.IParticleSystemSceneNode_setEmitter(Self._ptr, p0)
	End Method
	Method GetEmitter:IparticleEmitter()
		Local _ret:Byte Ptr = .IParticleSystemSceneNode_getEmitter(Self._ptr)
		Local rval:IparticleEmitter = IparticleEmitter(New _IparticleEmitter._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DoParticleSystem(_time:Int)
		.IParticleSystemSceneNode_doParticleSystem(Self._ptr, _time)
	End Method
	Method RemoveAllAffectors()
		.IParticleSystemSceneNode_removeAllAffectors(Self._ptr)
	End Method
	Method SetParticleSize(_size:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_size)
		If _size = Null
			.IParticleSystemSceneNode_setParticleSize_OVERLOAD_1(Self._ptr)
		Else
			.IParticleSystemSceneNode_setParticleSize_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method CreateCylinderEmitter:IparticleCylinderEmitter(_center:Vector3df, _radius:Float, _normal:Vector3df, _length:Float, _outlineOnly:Int = -2147483648, _direction:Vector3df = Null, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_normal)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p13:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p14:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _outlineOnly = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_11(Self._ptr, p0, _radius, p2, _length)
		ElseIf _direction = Null
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_10(Self._ptr, p0, _radius, p2, _length, _outlineOnly)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_9(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_8(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_7(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_6(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_5(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_4(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_3(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_2(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_1(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13)
		Else
			_ret = .IParticleSystemSceneNode_createCylinderEmitter_OVERLOAD_0(Self._ptr, p0, _radius, p2, _length, _outlineOnly, p5, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13, p14)
		EndIf
		Local rval:IparticleCylinderEmitter = IparticleCylinderEmitter(New _IparticleCylinderEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAffectors:Byte Ptr()
		Local _ret:Byte Ptr = .IParticleSystemSceneNode_getAffectors(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method CreateAnimatedMeshSceneNodeEmitter:IparticleAnimatedMeshSceneNodeEmitter(_node:IanimatedMeshSceneNode, _useNormalDirection:Int = -2147483648, _direction:Vector3df = Null, _normalDirectionModifier:Float = -1e100000, _mbNumber:Int = -2147483648, _everyMeshVertex:Int = -2147483648, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p13:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p14:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _useNormalDirection = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_14(Self._ptr, p0)
		ElseIf _direction = Null
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_13(Self._ptr, p0, _useNormalDirection)
		ElseIf _normalDirectionModifier = -1e100000
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_12(Self._ptr, p0, _useNormalDirection, p2)
		ElseIf _mbNumber = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_11(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier)
		ElseIf _everyMeshVertex = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_10(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_9(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_8(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_7(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_6(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_5(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_4(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_3(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_2(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_1(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13)
		Else
			_ret = .IParticleSystemSceneNode_createAnimatedMeshSceneNodeEmitter_OVERLOAD_0(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13, p14)
		EndIf
		Local rval:IparticleAnimatedMeshSceneNodeEmitter = IparticleAnimatedMeshSceneNodeEmitter(New _IparticleAnimatedMeshSceneNodeEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateRingEmitter:IparticleRingEmitter(_center:Vector3df, _radius:Float, _ringThickness:Float, _direction:Vector3df = Null, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p11:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p12:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _direction = Null
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_10(Self._ptr, p0, _radius, _ringThickness)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_9(Self._ptr, p0, _radius, _ringThickness, p3)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_8(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_7(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_6(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_5(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_4(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_3(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_2(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_1(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p11)
		Else
			_ret = .IParticleSystemSceneNode_createRingEmitter_OVERLOAD_0(Self._ptr, p0, _radius, _ringThickness, p3, _minParticlesPerSecond, _maxParticlesPerSecond, p6, p7, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p11, p12)
		EndIf
		Local rval:IparticleRingEmitter = IparticleRingEmitter(New _IparticleRingEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateFadeOutParticleAffector:IparticleFadeOutAffector(_targetColor:Scolor = Null, _timeNeededToFadeOut:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_targetColor)
		Local _ret:Byte Ptr
		If _targetColor = Null
			_ret = .IParticleSystemSceneNode_createFadeOutParticleAffector_OVERLOAD_2(Self._ptr)
		ElseIf _timeNeededToFadeOut = -2147483648
			_ret = .IParticleSystemSceneNode_createFadeOutParticleAffector_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IParticleSystemSceneNode_createFadeOutParticleAffector_OVERLOAD_0(Self._ptr, p0, _timeNeededToFadeOut)
		EndIf
		Local rval:IparticleFadeOutAffector = IparticleFadeOutAffector(New _IparticleFadeOutAffector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreatePointEmitter:Byte Ptr(_direction:Vector3df = Null, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _direction = Null
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_10(Self._ptr)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_9(Self._ptr, p0)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_8(Self._ptr, p0, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_7(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_6(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_5(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_4(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_3(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_2(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_1(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p8)
		Else
			_ret = .IParticleSystemSceneNode_createPointEmitter_OVERLOAD_0(Self._ptr, p0, _minParticlesPerSecond, _maxParticlesPerSecond, p3, p4, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p8, p9)
		EndIf
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method CreateSphereEmitter:IparticleSphereEmitter(_center:Vector3df, _radius:Float, _direction:Vector3df = Null, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p10:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p11:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _direction = Null
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_10(Self._ptr, p0, _radius)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_9(Self._ptr, p0, _radius, p2)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_8(Self._ptr, p0, _radius, p2, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_7(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_6(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_5(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_4(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_3(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_2(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_1(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p10)
		Else
			_ret = .IParticleSystemSceneNode_createSphereEmitter_OVERLOAD_0(Self._ptr, p0, _radius, p2, _minParticlesPerSecond, _maxParticlesPerSecond, p5, p6, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p10, p11)
		EndIf
		Local rval:IparticleSphereEmitter = IparticleSphereEmitter(New _IparticleSphereEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateScaleParticleAffector:IparticleAffector(_scaleTo:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_scaleTo)
		Local _ret:Byte Ptr
		If _scaleTo = Null
			_ret = .IParticleSystemSceneNode_createScaleParticleAffector_OVERLOAD_1(Self._ptr)
		Else
			_ret = .IParticleSystemSceneNode_createScaleParticleAffector_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:IparticleAffector = IparticleAffector(New _IparticleAffector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateMeshEmitter:IparticleMeshEmitter(_mesh:Imesh, _useNormalDirection:Int = -2147483648, _direction:Vector3df = Null, _normalDirectionModifier:Float = -1e100000, _mbNumber:Int = -2147483648, _everyMeshVertex:Int = -2147483648, _minParticlesPerSecond:Int = -2147483648, _maxParticlesPerSecond:Int = -2147483648, _minStartColor:Scolor = Null, _maxStartColor:Scolor = Null, _lifeTimeMin:Int = -2147483648, _lifeTimeMax:Int = -2147483648, _maxAngleDegrees:Int = -2147483648, _minStartSize:Dimension2df = Null, _maxStartSize:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_minStartColor)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_maxStartColor)
		Local p13:Byte Ptr = _irrlicht_Object._getPtr(_minStartSize)
		Local p14:Byte Ptr = _irrlicht_Object._getPtr(_maxStartSize)
		Local _ret:Byte Ptr
		If _useNormalDirection = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_14(Self._ptr, p0)
		ElseIf _direction = Null
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_13(Self._ptr, p0, _useNormalDirection)
		ElseIf _normalDirectionModifier = -1e100000
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_12(Self._ptr, p0, _useNormalDirection, p2)
		ElseIf _mbNumber = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_11(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier)
		ElseIf _everyMeshVertex = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_10(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber)
		ElseIf _minParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_9(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex)
		ElseIf _maxParticlesPerSecond = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_8(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond)
		ElseIf _minStartColor = Null
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_7(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond)
		ElseIf _maxStartColor = Null
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_6(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8)
		ElseIf _lifeTimeMin = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_5(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9)
		ElseIf _lifeTimeMax = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_4(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin)
		ElseIf _maxAngleDegrees = -2147483648
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_3(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax)
		ElseIf _minStartSize = Null
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_2(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees)
		ElseIf _maxStartSize = Null
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_1(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13)
		Else
			_ret = .IParticleSystemSceneNode_createMeshEmitter_OVERLOAD_0(Self._ptr, p0, _useNormalDirection, p2, _normalDirectionModifier, _mbNumber, _everyMeshVertex, _minParticlesPerSecond, _maxParticlesPerSecond, p8, p9, _lifeTimeMin, _lifeTimeMax, _maxAngleDegrees, p13, p14)
		EndIf
		Local rval:IparticleMeshEmitter = IparticleMeshEmitter(New _IparticleMeshEmitter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateRotationAffector:IparticleRotationAffector(_speed:Vector3df = Null, _pivotPoint:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_speed)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_pivotPoint)
		Local _ret:Byte Ptr
		If _speed = Null
			_ret = .IParticleSystemSceneNode_createRotationAffector_OVERLOAD_2(Self._ptr)
		ElseIf _pivotPoint = Null
			_ret = .IParticleSystemSceneNode_createRotationAffector_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .IParticleSystemSceneNode_createRotationAffector_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:IparticleRotationAffector = IparticleRotationAffector(New _IparticleRotationAffector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetParticlesAreGlobal(_global:Int = -2147483648)
		If _global = -2147483648
			.IParticleSystemSceneNode_setParticlesAreGlobal_OVERLOAD_1(Self._ptr)
		Else
			.IParticleSystemSceneNode_setParticlesAreGlobal_OVERLOAD_0(Self._ptr, _global)
		EndIf
	End Method
	Method ClearParticles()
		.IParticleSystemSceneNode_clearParticles(Self._ptr)
	End Method
	Method AddAffector(_affector:IparticleAffector)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_affector)
		.IParticleSystemSceneNode_addAffector(Self._ptr, p0)
	End Method
End Type

Type Iq3LevelMesh Extends IanimatedMesh Abstract
	Method GetEntityList:Byte Ptr()
		Local _ret:Byte Ptr = .IQ3LevelMesh_getEntityList(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetBrushEntityMesh:Imesh(_num:Int)
		Local _ret:Byte Ptr = .IQ3LevelMesh_getBrushEntityMesh_OVERLOAD_0(Self._ptr, _num)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetBrushEntityMeshWithEnt:Imesh(_ent:Byte Ptr)
		Local _ret:Byte Ptr = .IQ3LevelMesh_getBrushEntityMesh_OVERLOAD_1(Self._ptr, _ent)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetShader:Byte Ptr(_filename:Byte Ptr, _fileNameIsValid:Int = -2147483648)
		Local _ret:Byte Ptr
		If _fileNameIsValid = -2147483648
			_ret = .IQ3LevelMesh_getShader_OVERLOAD_1(Self._ptr, _filename)
		Else
			_ret = .IQ3LevelMesh_getShader_OVERLOAD_0(Self._ptr, _filename, _fileNameIsValid)
		EndIf
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetShaderWithIndex:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .IQ3LevelMesh_getShader_OVERLOAD_2(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type Irandomizer Extends IreferenceCounted Abstract
	Method Rand:Int()
		Local _ret:Int = .IRandomizer_rand(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Reset(_value:Int = -2147483648)
		If _value = -2147483648
			.IRandomizer_reset_OVERLOAD_1(Self._ptr)
		Else
			.IRandomizer_reset_OVERLOAD_0(Self._ptr, _value)
		EndIf
	End Method
	Method Frand:Float()
		Local _ret:Float = .IRandomizer_frand(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method RandMax:Int()
		Local _ret:Int = .IRandomizer_randMax(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IvideoModeList Extends IreferenceCounted Abstract
	Method GetDesktopResolution:Dimension2du()
		Local _ret:Byte Ptr = .IVideoModeList_getDesktopResolution(Self._ptr)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoModeDepth:Int(_modeNumber:Int)
		Local _ret:Int = .IVideoModeList_getVideoModeDepth(Self._ptr, _modeNumber)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVideoModeCount:Int()
		Local _ret:Int = .IVideoModeList_getVideoModeCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetDesktopDepth:Int()
		Local _ret:Int = .IVideoModeList_getDesktopDepth(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVideoModeResolution:Dimension2du(_modeNumber:Int)
		Local _ret:Byte Ptr = .IVideoModeList_getVideoModeResolution_OVERLOAD_0(Self._ptr, _modeNumber)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoModeResolutionWithMinSizeMaxSize:Dimension2du(_minSize:Dimension2du, _maxSize:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_minSize)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_maxSize)
		Local _ret:Byte Ptr = .IVideoModeList_getVideoModeResolution_OVERLOAD_1(Self._ptr, p0, p1)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Itimer Extends IreferenceCounted Abstract
	Method GetRealTimeAndDate:Byte Ptr()
		Local _ret:Byte Ptr = .ITimer_getRealTimeAndDate(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetSpeed:Float()
		Local _ret:Float = .ITimer_getSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetRealTime:Int()
		Local _ret:Int = .ITimer_getRealTime(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTime:Int()
		Local _ret:Int = .ITimer_getTime(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Tick()
		.ITimer_tick(Self._ptr)
	End Method
	Method Stop()
		.ITimer_stop(Self._ptr)
	End Method
	Method IsStopped:Int()
		Local _ret:Int = .ITimer_isStopped(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSpeed(_speed:Float = -1e100000)
		If _speed = -1e100000
			.ITimer_setSpeed_OVERLOAD_1(Self._ptr)
		Else
			.ITimer_setSpeed_OVERLOAD_0(Self._ptr, _speed)
		EndIf
	End Method
	Method SetTime(_time:Int)
		.ITimer_setTime(Self._ptr, _time)
	End Method
	Method Start()
		.ITimer_start(Self._ptr)
	End Method
End Type

Type IrrlichtDevice Extends IreferenceCounted Abstract
	Method GetTimer:Itimer()
		Local _ret:Byte Ptr = .IrrlichtDevice_getTimer(Self._ptr)
		Local rval:Itimer = Itimer(New _Itimer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFileSystem:IfileSystem()
		Local _ret:Byte Ptr = .IrrlichtDevice_getFileSystem(Self._ptr)
		Local rval:IfileSystem = IfileSystem(New _IfileSystem._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MaximizeWindow()
		.IrrlichtDevice_maximizeWindow(Self._ptr)
	End Method
	Method ActivateJoysticks:Int(_joystickInfo:Byte Ptr)
		Local _ret:Int = .IrrlichtDevice_activateJoysticks(Self._ptr, _joystickInfo)
		Local rval:Int = _ret ; Return rval
	End Method
	Method PostEventFromUser:Int(_event:Byte Ptr)
		Local _ret:Int = .IrrlichtDevice_postEventFromUser(Self._ptr, _event)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetEventReceiver:IeventReceiver()
		Local _ret:Byte Ptr = .IrrlichtDevice_getEventReceiver(Self._ptr)
		Local rval:IeventReceiver = IeventReceiver(New _IeventReceiver._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsWindowMinimized:Int()
		Local _ret:Int = .IrrlichtDevice_isWindowMinimized(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVersion:Byte Ptr()
		Local _ret:Byte Ptr = .IrrlichtDevice_getVersion(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetColorFormat:Int()
		Local _ret:Int = .IrrlichtDevice_getColorFormat(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sleep(_timeMs:Int, _pauseTimer:Int = -2147483648)
		If _pauseTimer = -2147483648
			.IrrlichtDevice_sleep_OVERLOAD_1(Self._ptr, _timeMs)
		Else
			.IrrlichtDevice_sleep_OVERLOAD_0(Self._ptr, _timeMs, _pauseTimer)
		EndIf
	End Method
	Method MinimizeWindow()
		.IrrlichtDevice_minimizeWindow(Self._ptr)
	End Method
	Method GetSceneManager:IsceneManager()
		Local _ret:Byte Ptr = .IrrlichtDevice_getSceneManager(Self._ptr)
		Local rval:IsceneManager = IsceneManager(New _IsceneManager._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetGammaRamp:Int(_red:Byte Ptr, _green:Byte Ptr, _blue:Byte Ptr, _brightness:Byte Ptr, _contrast:Byte Ptr)
		Local _ret:Int = .IrrlichtDevice_getGammaRamp(Self._ptr, _red, _green, _blue, _brightness, _contrast)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClearSystemMessages()
		.IrrlichtDevice_clearSystemMessages(Self._ptr)
	End Method
	Method IsWindowFocused:Int()
		Local _ret:Int = .IrrlichtDevice_isWindowFocused(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLogger:Ilogger()
		Local _ret:Byte Ptr = .IrrlichtDevice_getLogger(Self._ptr)
		Local rval:Ilogger = Ilogger(New _Ilogger._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsWindowActive:Int()
		Local _ret:Int = .IrrlichtDevice_isWindowActive(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRandomizer:Irandomizer()
		Local _ret:Byte Ptr = .IrrlichtDevice_getRandomizer(Self._ptr)
		Local rval:Irandomizer = Irandomizer(New _Irandomizer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoModeList:IvideoModeList()
		Local _ret:Byte Ptr = .IrrlichtDevice_getVideoModeList(Self._ptr)
		Local rval:IvideoModeList = IvideoModeList(New _IvideoModeList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsFullscreen:Int()
		Local _ret:Int = .IrrlichtDevice_isFullscreen(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetResizable(_resize:Int = -2147483648)
		If _resize = -2147483648
			.IrrlichtDevice_setResizable_OVERLOAD_1(Self._ptr)
		Else
			.IrrlichtDevice_setResizable_OVERLOAD_0(Self._ptr, _resize)
		EndIf
	End Method
	Method SetWindowCaption(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IrrlichtDevice_setWindowCaption(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method SetEventReceiver(_receiver:IeventReceiver)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_receiver)
		.IrrlichtDevice_setEventReceiver(Self._ptr, p0)
	End Method
	Method SetInputReceivingSceneManager(_sceneManager:IsceneManager)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_sceneManager)
		.IrrlichtDevice_setInputReceivingSceneManager(Self._ptr, p0)
	End Method
	Method Yield()
		.IrrlichtDevice_yield(Self._ptr)
	End Method
	Method GetGuienvironment:Iguienvironment()
		Local _ret:Byte Ptr = .IrrlichtDevice_getGUIEnvironment(Self._ptr)
		Local rval:Iguienvironment = Iguienvironment(New _Iguienvironment._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RestoreWindow()
		.IrrlichtDevice_restoreWindow(Self._ptr)
	End Method
	Method SetGammaRamp:Int(_red:Float, _green:Float, _blue:Float, _relativebrightness:Float, _relativecontrast:Float)
		Local _ret:Int = .IrrlichtDevice_setGammaRamp(Self._ptr, _red, _green, _blue, _relativebrightness, _relativecontrast)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCursorControl:IcursorControl()
		Local _ret:Byte Ptr = .IrrlichtDevice_getCursorControl(Self._ptr)
		Local rval:IcursorControl = IcursorControl(New _IcursorControl._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Run:Int()
		Local _ret:Int = .IrrlichtDevice_run(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CloseDevice()
		.IrrlichtDevice_closeDevice(Self._ptr)
	End Method
	Method CreateDefaultRandomizer:Irandomizer()
		Local _ret:Byte Ptr = .IrrlichtDevice_createDefaultRandomizer(Self._ptr)
		Local rval:Irandomizer = Irandomizer(New _Irandomizer._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoDriver:IvideoDriver()
		Local _ret:Byte Ptr = .IrrlichtDevice_getVideoDriver(Self._ptr)
		Local rval:IvideoDriver = IvideoDriver(New _IvideoDriver._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetType:Int()
		Local _ret:Int = .IrrlichtDevice_getType(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetOsoperator:Iosoperator()
		Local _ret:Byte Ptr = .IrrlichtDevice_getOSOperator(Self._ptr)
		Local rval:Iosoperator = Iosoperator(New _Iosoperator._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetRandomizer(_r:Irandomizer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_r)
		.IrrlichtDevice_setRandomizer(Self._ptr, p0)
	End Method
End Type

Type IsceneCollisionManager Extends IreferenceCounted Abstract
	Method GetSceneNodeFromRayBb:IsceneNode(_ray:Line3df, _idBitMask:Int = -2147483648, _bNoDebugObjects:Int = -2147483648, _root:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_ray)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_root)
		Local _ret:Byte Ptr
		If _idBitMask = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromRayBB_OVERLOAD_3(Self._ptr, p0)
		ElseIf _bNoDebugObjects = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromRayBB_OVERLOAD_2(Self._ptr, p0, _idBitMask)
		ElseIf _root = Null
			_ret = .ISceneCollisionManager_getSceneNodeFromRayBB_OVERLOAD_1(Self._ptr, p0, _idBitMask, _bNoDebugObjects)
		Else
			_ret = .ISceneCollisionManager_getSceneNodeFromRayBB_OVERLOAD_0(Self._ptr, p0, _idBitMask, _bNoDebugObjects, p3)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeFromCameraBb:IsceneNode(_camera:IcameraSceneNode, _idBitMask:Int = -2147483648, _bNoDebugObjects:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_camera)
		Local _ret:Byte Ptr
		If _idBitMask = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromCameraBB_OVERLOAD_2(Self._ptr, p0)
		ElseIf _bNoDebugObjects = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromCameraBB_OVERLOAD_1(Self._ptr, p0, _idBitMask)
		Else
			_ret = .ISceneCollisionManager_getSceneNodeFromCameraBB_OVERLOAD_0(Self._ptr, p0, _idBitMask, _bNoDebugObjects)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCollisionResultPosition:Vector3df(_selector:ItriangleSelector, _ellipsoidPosition:Vector3df, _ellipsoidRadius:Vector3df, _ellipsoidDirectionAndSpeed:Vector3df, _triout:Triangle3df, _hitPosition:Vector3df, _outFalling:Byte Ptr, _outNode:IsceneNode, _slidingSpeed:Float = -1e100000, _gravityDirectionAndSpeed:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_selector)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_ellipsoidPosition)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_ellipsoidRadius)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_ellipsoidDirectionAndSpeed)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_triout)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_hitPosition)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_outNode)
		Local p9:Byte Ptr = _irrlicht_Object._getPtr(_gravityDirectionAndSpeed)
		Local _ret:Byte Ptr
		If _slidingSpeed = -1e100000
			_ret = .ISceneCollisionManager_getCollisionResultPosition_OVERLOAD_2(Self._ptr, p0, p1, p2, p3, p4, p5, _outFalling, p7)
		ElseIf _gravityDirectionAndSpeed = Null
			_ret = .ISceneCollisionManager_getCollisionResultPosition_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, p4, p5, _outFalling, p7, _slidingSpeed)
		Else
			_ret = .ISceneCollisionManager_getCollisionResultPosition_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, p4, p5, _outFalling, p7, _slidingSpeed, p9)
		EndIf
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeAndCollisionPointFromRay:IsceneNode(_ray:Line3df, _outCollisionPoint:Vector3df, _outTriangle:Triangle3df, _idBitMask:Int = -2147483648, _collisionRootNode:IsceneNode = Null, _noDebugObjects:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_ray)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outCollisionPoint)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outTriangle)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_collisionRootNode)
		Local _ret:Byte Ptr
		If _idBitMask = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeAndCollisionPointFromRay_OVERLOAD_3(Self._ptr, p0, p1, p2)
		ElseIf _collisionRootNode = Null
			_ret = .ISceneCollisionManager_getSceneNodeAndCollisionPointFromRay_OVERLOAD_2(Self._ptr, p0, p1, p2, _idBitMask)
		ElseIf _noDebugObjects = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeAndCollisionPointFromRay_OVERLOAD_1(Self._ptr, p0, p1, p2, _idBitMask, p4)
		Else
			_ret = .ISceneCollisionManager_getSceneNodeAndCollisionPointFromRay_OVERLOAD_0(Self._ptr, p0, p1, p2, _idBitMask, p4, _noDebugObjects)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetScreenCoordinatesFrom3Dposition:Vector2di(_pos:Vector3df, _camera:IcameraSceneNode = Null, _useViewPort:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_camera)
		Local _ret:Byte Ptr
		If _camera = Null
			_ret = .ISceneCollisionManager_getScreenCoordinatesFrom3DPosition_OVERLOAD_2(Self._ptr, p0)
		ElseIf _useViewPort = -2147483648
			_ret = .ISceneCollisionManager_getScreenCoordinatesFrom3DPosition_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneCollisionManager_getScreenCoordinatesFrom3DPosition_OVERLOAD_0(Self._ptr, p0, p1, _useViewPort)
		EndIf
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRayFromScreenCoordinates:Line3df(_pos:Vector2di, _camera:IcameraSceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_camera)
		Local _ret:Byte Ptr
		If _camera = Null
			_ret = .ISceneCollisionManager_getRayFromScreenCoordinates_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneCollisionManager_getRayFromScreenCoordinates_OVERLOAD_0(Self._ptr, p0, p1)
		EndIf
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeFromScreenCoordinatesBb:IsceneNode(_pos:Vector2di, _idBitMask:Int = -2147483648, _bNoDebugObjects:Int = -2147483648, _root:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_root)
		Local _ret:Byte Ptr
		If _idBitMask = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB_OVERLOAD_3(Self._ptr, p0)
		ElseIf _bNoDebugObjects = -2147483648
			_ret = .ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB_OVERLOAD_2(Self._ptr, p0, _idBitMask)
		ElseIf _root = Null
			_ret = .ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB_OVERLOAD_1(Self._ptr, p0, _idBitMask, _bNoDebugObjects)
		Else
			_ret = .ISceneCollisionManager_getSceneNodeFromScreenCoordinatesBB_OVERLOAD_0(Self._ptr, p0, _idBitMask, _bNoDebugObjects, p3)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCollisionPoint:Int(_ray:Line3df, _selector:ItriangleSelector, _outCollisionPoint:Vector3df, _outTriangle:Triangle3df, _outNode:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_ray)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_selector)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outCollisionPoint)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_outTriangle)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_outNode)
		Local _ret:Int = .ISceneCollisionManager_getCollisionPoint(Self._ptr, p0, p1, p2, p3, p4)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IsceneLoader Extends IreferenceCounted Abstract
	Method IsAloadableFileExtension:Int(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Int = .ISceneLoader_isALoadableFileExtension(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LoadScene:Int(_file:IreadFile, _userDataSerializer:IsceneUserDataSerializer = Null, _rootNode:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_rootNode)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneLoader_loadScene_OVERLOAD_2(Self._ptr, p0)
		ElseIf _rootNode = Null
			_ret = .ISceneLoader_loadScene_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneLoader_loadScene_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsAloadableFileFormat:Int(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Int = .ISceneLoader_isALoadableFileFormat(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IskinnedMesh Extends IanimatedMesh Abstract
	Method ConvertMeshToTangents()
		.ISkinnedMesh_convertMeshToTangents(Self._ptr)
	End Method
	Method AddWeight:Byte Ptr(_joint:Byte Ptr)
		Local _ret:Byte Ptr = .ISkinnedMesh_addWeight(Self._ptr, _joint)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method UpdateNormalsWhenAnimating(_on:Int)
		.ISkinnedMesh_updateNormalsWhenAnimating(Self._ptr, _on)
	End Method
	Method GetMeshBuffers:Byte Ptr()
		Local _ret:Byte Ptr = .ISkinnedMesh_getMeshBuffers(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method AddPositionKey:Byte Ptr(_joint:Byte Ptr)
		Local _ret:Byte Ptr = .ISkinnedMesh_addPositionKey(Self._ptr, _joint)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method AnimateMesh(_frame:Float, _blend:Float)
		.ISkinnedMesh_animateMesh(Self._ptr, _frame, _blend)
	End Method
	Method AddMeshBuffer:Byte Ptr()
		Local _ret:Byte Ptr = .ISkinnedMesh_addMeshBuffer(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetJointCount:Int()
		Local _ret:Int = .ISkinnedMesh_getJointCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetAllJoints:Byte Ptr()
		Local _ret:Byte Ptr = .ISkinnedMesh_getAllJoints_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method UseAnimationFrom:Int(_mesh:IskinnedMesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local _ret:Int = .ISkinnedMesh_useAnimationFrom(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddScaleKey:Byte Ptr(_joint:Byte Ptr)
		Local _ret:Byte Ptr = .ISkinnedMesh_addScaleKey(Self._ptr, _joint)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetHardwareSkinning:Int(_on:Int)
		Local _ret:Int = .ISkinnedMesh_setHardwareSkinning(Self._ptr, _on)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddRotationKey:Byte Ptr(_joint:Byte Ptr)
		Local _ret:Byte Ptr = .ISkinnedMesh_addRotationKey(Self._ptr, _joint)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Finalize()
		.ISkinnedMesh_finalize(Self._ptr)
	End Method
	Method SkinMesh()
		.ISkinnedMesh_skinMesh(Self._ptr)
	End Method
	Method AddJoint:Byte Ptr(_parent:Byte Ptr = Null)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISkinnedMesh_addJoint_OVERLOAD_1(Self._ptr)
		Else
			_ret = .ISkinnedMesh_addJoint_OVERLOAD_0(Self._ptr, _parent)
		EndIf
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetJointNumber:Int(_name:Byte Ptr)
		Local _ret:Int = .ISkinnedMesh_getJointNumber(Self._ptr, _name)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetInterpolationMode(_mode:Int)
		.ISkinnedMesh_setInterpolationMode(Self._ptr, _mode)
	End Method
	Method GetJointName:Byte Ptr(_number:Int)
		Local _ret:Byte Ptr = .ISkinnedMesh_getJointName(Self._ptr, _number)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method IsStatic:Int()
		Local _ret:Int = .ISkinnedMesh_isStatic(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IsceneManager Extends IreferenceCounted Abstract
	Method CreateTriangleSelector:ItriangleSelector(_mesh:Imesh, _node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .ISceneManager_createTriangleSelector_OVERLOAD_0(Self._ptr, p0, p1)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateTriangleSelectorWithNode:ItriangleSelector(_node:IanimatedMeshSceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .ISceneManager_createTriangleSelector_OVERLOAD_1(Self._ptr, p0)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddHillPlaneMesh:IanimatedMesh(_name:Path, _tileSize:Dimension2df, _tileCount:Dimension2du, _material:Smaterial = Null, _hillHeight:Float = -1e100000, _countHills:Dimension2df = Null, _textureRepeatCount:Dimension2df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_tileSize)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_tileCount)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_material)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_countHills)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_textureRepeatCount)
		Local _ret:Byte Ptr
		If _material = Null
			_ret = .ISceneManager_addHillPlaneMesh_OVERLOAD_4(Self._ptr, p0, p1, p2)
		ElseIf _hillHeight = -1e100000
			_ret = .ISceneManager_addHillPlaneMesh_OVERLOAD_3(Self._ptr, p0, p1, p2, p3)
		ElseIf _countHills = Null
			_ret = .ISceneManager_addHillPlaneMesh_OVERLOAD_2(Self._ptr, p0, p1, p2, p3, _hillHeight)
		ElseIf _textureRepeatCount = Null
			_ret = .ISceneManager_addHillPlaneMesh_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, _hillHeight, p5)
		Else
			_ret = .ISceneManager_addHillPlaneMesh_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, _hillHeight, p5, p6)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMesh:IanimatedMesh(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .ISceneManager_getMesh_OVERLOAD_0(Self._ptr, p0)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshWithFile:IanimatedMesh(_file:IreadFile)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Byte Ptr = .ISceneManager_getMesh_OVERLOAD_1(Self._ptr, p0)
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetFileSystem:IfileSystem()
		Local _ret:Byte Ptr = .ISceneManager_getFileSystem(Self._ptr)
		Local rval:IfileSystem = IfileSystem(New _IfileSystem._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetActiveCamera:IcameraSceneNode()
		Local _ret:Byte Ptr = .ISceneManager_getActiveCamera(Self._ptr)
		Local rval:IcameraSceneNode = IcameraSceneNode(New _IcameraSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSkyDomeSceneNode:IsceneNode(_texture:Itexture, _horiRes:Int = -2147483648, _vertRes:Int = -2147483648, _texturePercentage:Float = -1e100000, _spherePercentage:Float = -1e100000, _radius:Float = -1e100000, _parent:IsceneNode = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _horiRes = -2147483648
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_7(Self._ptr, p0)
		ElseIf _vertRes = -2147483648
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_6(Self._ptr, p0, _horiRes)
		ElseIf _texturePercentage = -1e100000
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_5(Self._ptr, p0, _horiRes, _vertRes)
		ElseIf _spherePercentage = -1e100000
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_4(Self._ptr, p0, _horiRes, _vertRes, _texturePercentage)
		ElseIf _radius = -1e100000
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_3(Self._ptr, p0, _horiRes, _vertRes, _texturePercentage, _spherePercentage)
		ElseIf _parent = Null
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_2(Self._ptr, p0, _horiRes, _vertRes, _texturePercentage, _spherePercentage, _radius)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_1(Self._ptr, p0, _horiRes, _vertRes, _texturePercentage, _spherePercentage, _radius, p6)
		Else
			_ret = .ISceneManager_addSkyDomeSceneNode_OVERLOAD_0(Self._ptr, p0, _horiRes, _vertRes, _texturePercentage, _spherePercentage, _radius, p6, _id)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetParameters:Iattributes()
		Local _ret:Byte Ptr = .ISceneManager_getParameters(Self._ptr)
		Local rval:Iattributes = Iattributes(New _Iattributes._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVideoDriver:IvideoDriver()
		Local _ret:Byte Ptr = .ISceneManager_getVideoDriver(Self._ptr)
		Local rval:IvideoDriver = IvideoDriver(New _IvideoDriver._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeAnimatorFactory:IsceneNodeAnimatorFactory(_index:Int)
		Local _ret:Byte Ptr = .ISceneManager_getSceneNodeAnimatorFactory(Self._ptr, _index)
		Local rval:IsceneNodeAnimatorFactory = IsceneNodeAnimatorFactory(New _IsceneNodeAnimatorFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddToDeletionQueue(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ISceneManager_addToDeletionQueue(Self._ptr, p0)
	End Method
	Method SaveScene:Int(_filename:Path, _userDataSerializer:IsceneUserDataSerializer = Null, _node:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_2(Self._ptr, p0)
		ElseIf _node = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_saveScene_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SaveSceneWithFile:Int(_file:IwriteFile, _userDataSerializer:IsceneUserDataSerializer = Null, _node:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_5(Self._ptr, p0)
		ElseIf _node = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_4(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_saveScene_OVERLOAD_3(Self._ptr, p0, p1, p2)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SaveSceneWithWriterCurrentPath:Int(_writer:Ixmlwriter, _currentPath:Path, _userDataSerializer:IsceneUserDataSerializer = Null, _node:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_writer)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_currentPath)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_8(Self._ptr, p0, p1)
		ElseIf _node = Null
			_ret = .ISceneManager_saveScene_OVERLOAD_7(Self._ptr, p0, p1, p2)
		Else
			_ret = .ISceneManager_saveScene_OVERLOAD_6(Self._ptr, p0, p1, p2, p3)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddWaterSurfaceSceneNode:IsceneNode(_mesh:Imesh, _waveHeight:Float = -1e100000, _waveSpeed:Float = -1e100000, _waveLength:Float = -1e100000, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _waveHeight = -1e100000
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_8(Self._ptr, p0)
		ElseIf _waveSpeed = -1e100000
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_7(Self._ptr, p0, _waveHeight)
		ElseIf _waveLength = -1e100000
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_6(Self._ptr, p0, _waveHeight, _waveSpeed)
		ElseIf _parent = Null
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_5(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_4(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength, p4)
		ElseIf _position = Null
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_3(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength, p4, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_2(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength, p4, _id, p6)
		ElseIf _scale = Null
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_1(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength, p4, _id, p6, p7)
		Else
			_ret = .ISceneManager_addWaterSurfaceSceneNode_OVERLOAD_0(Self._ptr, p0, _waveHeight, _waveSpeed, _waveLength, p4, _id, p6, p7, p8)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddCubeSceneNode:ImeshSceneNode(_size:Float = -1e100000, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _size = -1e100000
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_6(Self._ptr)
		ElseIf _parent = Null
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_5(Self._ptr, _size)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_4(Self._ptr, _size, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_3(Self._ptr, _size, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_2(Self._ptr, _size, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_1(Self._ptr, _size, p1, _id, p3, p4)
		Else
			_ret = .ISceneManager_addCubeSceneNode_OVERLOAD_0(Self._ptr, _size, p1, _id, p3, p4, p5)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddExternalSceneLoader(_externalLoader:IsceneLoader)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_externalLoader)
		.ISceneManager_addExternalSceneLoader(Self._ptr, p0)
	End Method
	Method CreateMeshWriter:ImeshWriter(_type:Int)
		Local _ret:Byte Ptr = .ISceneManager_createMeshWriter(Self._ptr, _type)
		Local rval:ImeshWriter = ImeshWriter(New _ImeshWriter._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSkyBoxSceneNode:IsceneNode(_top:Itexture, _bottom:Itexture, _left:Itexture, _right:Itexture, _front:Itexture, _back:Itexture, _parent:IsceneNode = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_top)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_bottom)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_left)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_right)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_front)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_back)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addSkyBoxSceneNode_OVERLOAD_2(Self._ptr, p0, p1, p2, p3, p4, p5)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addSkyBoxSceneNode_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, p4, p5, p6)
		Else
			_ret = .ISceneManager_addSkyBoxSceneNode_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, p4, p5, p6, _id)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeRenderPass:Int()
		Local _ret:Int = .ISceneManager_getSceneNodeRenderPass(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMeshLoaderCount:Int()
		Local _ret:Int = .ISceneManager_getMeshLoaderCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddArrowMesh:IanimatedMesh(_name:Path, _vtxColorCylinder:Scolor = Null, _vtxColorCone:Scolor = Null, _tesselationCylinder:Int = -2147483648, _tesselationCone:Int = -2147483648, _height:Float = -1e100000, _cylinderHeight:Float = -1e100000, _widthCylinder:Float = -1e100000, _widthCone:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_vtxColorCylinder)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_vtxColorCone)
		Local _ret:Byte Ptr
		If _vtxColorCylinder = Null
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_8(Self._ptr, p0)
		ElseIf _vtxColorCone = Null
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_7(Self._ptr, p0, p1)
		ElseIf _tesselationCylinder = -2147483648
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_6(Self._ptr, p0, p1, p2)
		ElseIf _tesselationCone = -2147483648
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_5(Self._ptr, p0, p1, p2, _tesselationCylinder)
		ElseIf _height = -1e100000
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_4(Self._ptr, p0, p1, p2, _tesselationCylinder, _tesselationCone)
		ElseIf _cylinderHeight = -1e100000
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_3(Self._ptr, p0, p1, p2, _tesselationCylinder, _tesselationCone, _height)
		ElseIf _widthCylinder = -1e100000
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_2(Self._ptr, p0, p1, p2, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight)
		ElseIf _widthCone = -1e100000
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_1(Self._ptr, p0, p1, p2, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder)
		Else
			_ret = .ISceneManager_addArrowMesh_OVERLOAD_0(Self._ptr, p0, p1, p2, _tesselationCylinder, _tesselationCone, _height, _cylinderHeight, _widthCylinder, _widthCone)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RegisterSceneNodeAnimatorFactory(_factoryToAdd:IsceneNodeAnimatorFactory)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factoryToAdd)
		.ISceneManager_registerSceneNodeAnimatorFactory(Self._ptr, p0)
	End Method
	Method GetSceneNodeFromType:IsceneNode(_type:Int, _start:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local _ret:Byte Ptr
		If _start = Null
			_ret = .ISceneManager_getSceneNodeFromType_OVERLOAD_1(Self._ptr, _type)
		Else
			_ret = .ISceneManager_getSceneNodeFromType_OVERLOAD_0(Self._ptr, _type, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeTypeName:Byte Ptr(_type:Int)
		Local _ret:Byte Ptr = .ISceneManager_getSceneNodeTypeName(Self._ptr, _type)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetSceneNodeFromId:IsceneNode(_id:Int, _start:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local _ret:Byte Ptr
		If _start = Null
			_ret = .ISceneManager_getSceneNodeFromId_OVERLOAD_1(Self._ptr, _id)
		Else
			_ret = .ISceneManager_getSceneNodeFromId_OVERLOAD_0(Self._ptr, _id, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateOctreeTriangleSelector:ItriangleSelector(_mesh:Imesh, _node:IsceneNode, _minimalPolysPerNode:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr
		If _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_createOctreeTriangleSelector_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_createOctreeTriangleSelector_OVERLOAD_0(Self._ptr, p0, p1, _minimalPolysPerNode)
		EndIf
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddQuake3SceneNode:ImeshSceneNode(_meshBuffer:ImeshBuffer, _shader:Byte Ptr, _parent:IsceneNode = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_meshBuffer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addQuake3SceneNode_OVERLOAD_2(Self._ptr, p0, _shader)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addQuake3SceneNode_OVERLOAD_1(Self._ptr, p0, _shader, p2)
		Else
			_ret = .ISceneManager_addQuake3SceneNode_OVERLOAD_0(Self._ptr, p0, _shader, p2, _id)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddVolumeLightMesh:IanimatedMesh(_name:Path, _SubdivideU:Int = -2147483648, _SubdivideV:Int = -2147483648, _FootColor:Scolor = Null, _TailColor:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_FootColor)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_TailColor)
		Local _ret:Byte Ptr
		If _SubdivideU = -2147483648
			_ret = .ISceneManager_addVolumeLightMesh_OVERLOAD_4(Self._ptr, p0)
		ElseIf _SubdivideV = -2147483648
			_ret = .ISceneManager_addVolumeLightMesh_OVERLOAD_3(Self._ptr, p0, _SubdivideU)
		ElseIf _FootColor = Null
			_ret = .ISceneManager_addVolumeLightMesh_OVERLOAD_2(Self._ptr, p0, _SubdivideU, _SubdivideV)
		ElseIf _TailColor = Null
			_ret = .ISceneManager_addVolumeLightMesh_OVERLOAD_1(Self._ptr, p0, _SubdivideU, _SubdivideV, p3)
		Else
			_ret = .ISceneManager_addVolumeLightMesh_OVERLOAD_0(Self._ptr, p0, _SubdivideU, _SubdivideV, p3, p4)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateDeleteAnimator:IsceneNodeAnimator(_timeMs:Int)
		Local _ret:Byte Ptr = .ISceneManager_createDeleteAnimator(Self._ptr, _timeMs)
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddMeshSceneNode:ImeshSceneNode(_mesh:Imesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_6(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_5(Self._ptr, p0, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_4(Self._ptr, p0, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_3(Self._ptr, p0, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_2(Self._ptr, p0, p1, _id, p3, p4)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_1(Self._ptr, p0, p1, _id, p3, p4, p5)
		Else
			_ret = .ISceneManager_addMeshSceneNode_OVERLOAD_0(Self._ptr, p0, p1, _id, p3, p4, p5, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshLoader:ImeshLoader(_index:Int)
		Local _ret:Byte Ptr = .ISceneManager_getMeshLoader(Self._ptr, _index)
		Local rval:ImeshLoader = ImeshLoader(New _ImeshLoader._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method PostEventFromUser:Int(_event:Byte Ptr)
		Local _ret:Int = .ISceneManager_postEventFromUser(Self._ptr, _event)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddLightSceneNode:IlightSceneNode(_parent:IsceneNode = Null, _position:Vector3df = Null, _color:Scolorf = Null, _radius:Float = -1e100000, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_5(Self._ptr)
		ElseIf _position = Null
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_4(Self._ptr, p0)
		ElseIf _color = Null
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _radius = -1e100000
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_2(Self._ptr, p0, p1, p2)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_1(Self._ptr, p0, p1, p2, _radius)
		Else
			_ret = .ISceneManager_addLightSceneNode_OVERLOAD_0(Self._ptr, p0, p1, p2, _radius, _id)
		EndIf
		Local rval:IlightSceneNode = IlightSceneNode(New _IlightSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSphereSceneNode:ImeshSceneNode(_radius:Float = -1e100000, _polyCount:Int = -2147483648, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _radius = -1e100000
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_7(Self._ptr)
		ElseIf _polyCount = -2147483648
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_6(Self._ptr, _radius)
		ElseIf _parent = Null
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_5(Self._ptr, _radius, _polyCount)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_4(Self._ptr, _radius, _polyCount, p2)
		ElseIf _position = Null
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_3(Self._ptr, _radius, _polyCount, p2, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_2(Self._ptr, _radius, _polyCount, p2, _id, p4)
		ElseIf _scale = Null
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_1(Self._ptr, _radius, _polyCount, p2, _id, p4, p5)
		Else
			_ret = .ISceneManager_addSphereSceneNode_OVERLOAD_0(Self._ptr, _radius, _polyCount, p2, _id, p4, p5, p6)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateFlyStraightAnimator:IsceneNodeAnimator(_startPoint:Vector3df, _endPoint:Vector3df, _timeForWay:Int, _loop:Int = -2147483648, _pingpong:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_startPoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_endPoint)
		Local _ret:Byte Ptr
		If _loop = -2147483648
			_ret = .ISceneManager_createFlyStraightAnimator_OVERLOAD_2(Self._ptr, p0, p1, _timeForWay)
		ElseIf _pingpong = -2147483648
			_ret = .ISceneManager_createFlyStraightAnimator_OVERLOAD_1(Self._ptr, p0, p1, _timeForWay, _loop)
		Else
			_ret = .ISceneManager_createFlyStraightAnimator_OVERLOAD_0(Self._ptr, p0, p1, _timeForWay, _loop, _pingpong)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateNewSceneManager:IsceneManager(_cloneContent:Int = -2147483648)
		Local _ret:Byte Ptr
		If _cloneContent = -2147483648
			_ret = .ISceneManager_createNewSceneManager_OVERLOAD_1(Self._ptr)
		Else
			_ret = .ISceneManager_createNewSceneManager_OVERLOAD_0(Self._ptr, _cloneContent)
		EndIf
		Local rval:IsceneManager = IsceneManager(New _IsceneManager._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRegisteredSceneNodeFactoryCount:Int()
		Local _ret:Int = .ISceneManager_getRegisteredSceneNodeFactoryCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddTerrainMesh:IanimatedMesh(_meshname:Path, _texture:Iimage, _heightmap:Iimage, _stretchSize:Dimension2df = Null, _maxHeight:Float = -1e100000, _defaultVertexBlockSize:Dimension2du = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_meshname)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_texture)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_heightmap)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_stretchSize)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_defaultVertexBlockSize)
		Local _ret:Byte Ptr
		If _stretchSize = Null
			_ret = .ISceneManager_addTerrainMesh_OVERLOAD_3(Self._ptr, p0, p1, p2)
		ElseIf _maxHeight = -1e100000
			_ret = .ISceneManager_addTerrainMesh_OVERLOAD_2(Self._ptr, p0, p1, p2, p3)
		ElseIf _defaultVertexBlockSize = Null
			_ret = .ISceneManager_addTerrainMesh_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, _maxHeight)
		Else
			_ret = .ISceneManager_addTerrainMesh_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, _maxHeight, p5)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeFactory:IsceneNodeFactory(_index:Int)
		Local _ret:Byte Ptr = .ISceneManager_getSceneNodeFactory(Self._ptr, _index)
		Local rval:IsceneNodeFactory = IsceneNodeFactory(New _IsceneNodeFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddCameraSceneNodeFps:IcameraSceneNode(_parent:IsceneNode = Null, _rotateSpeed:Float = -1e100000, _moveSpeed:Float = -1e100000, _id:Int = -2147483648, _keyMapArray:Byte Ptr = Null, _keyMapSize:Int = -2147483648, _noVerticalMovement:Int = -2147483648, _jumpSpeed:Float = -1e100000, _invertMouse:Int = -2147483648, _makeActive:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_10(Self._ptr)
		ElseIf _rotateSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_9(Self._ptr, p0)
		ElseIf _moveSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_8(Self._ptr, p0, _rotateSpeed)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_7(Self._ptr, p0, _rotateSpeed, _moveSpeed)
		ElseIf _keyMapArray = Null
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_6(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id)
		ElseIf _keyMapSize = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_5(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray)
		ElseIf _noVerticalMovement = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_4(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray, _keyMapSize)
		ElseIf _jumpSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_3(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray, _keyMapSize, _noVerticalMovement)
		ElseIf _invertMouse = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_2(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray, _keyMapSize, _noVerticalMovement, _jumpSpeed)
		ElseIf _makeActive = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_1(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray, _keyMapSize, _noVerticalMovement, _jumpSpeed, _invertMouse)
		Else
			_ret = .ISceneManager_addCameraSceneNodeFPS_OVERLOAD_0(Self._ptr, p0, _rotateSpeed, _moveSpeed, _id, _keyMapArray, _keyMapSize, _noVerticalMovement, _jumpSpeed, _invertMouse, _makeActive)
		EndIf
		Local rval:IcameraSceneNode = IcameraSceneNode(New _IcameraSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateFollowSplineAnimator:IsceneNodeAnimator(_startTime:Int, _points:Byte Ptr, _speed:Float = -1e100000, _tightness:Float = -1e100000, _loop:Int = -2147483648, _pingpong:Int = -2147483648)
		Local _ret:Byte Ptr
		If _speed = -1e100000
			_ret = .ISceneManager_createFollowSplineAnimator_OVERLOAD_4(Self._ptr, _startTime, _points)
		ElseIf _tightness = -1e100000
			_ret = .ISceneManager_createFollowSplineAnimator_OVERLOAD_3(Self._ptr, _startTime, _points, _speed)
		ElseIf _loop = -2147483648
			_ret = .ISceneManager_createFollowSplineAnimator_OVERLOAD_2(Self._ptr, _startTime, _points, _speed, _tightness)
		ElseIf _pingpong = -2147483648
			_ret = .ISceneManager_createFollowSplineAnimator_OVERLOAD_1(Self._ptr, _startTime, _points, _speed, _tightness, _loop)
		Else
			_ret = .ISceneManager_createFollowSplineAnimator_OVERLOAD_0(Self._ptr, _startTime, _points, _speed, _tightness, _loop, _pingpong)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSphereMesh:IanimatedMesh(_name:Path, _radius:Float = -1e100000, _polyCountX:Int = -2147483648, _polyCountY:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local _ret:Byte Ptr
		If _radius = -1e100000
			_ret = .ISceneManager_addSphereMesh_OVERLOAD_3(Self._ptr, p0)
		ElseIf _polyCountX = -2147483648
			_ret = .ISceneManager_addSphereMesh_OVERLOAD_2(Self._ptr, p0, _radius)
		ElseIf _polyCountY = -2147483648
			_ret = .ISceneManager_addSphereMesh_OVERLOAD_1(Self._ptr, p0, _radius, _polyCountX)
		Else
			_ret = .ISceneManager_addSphereMesh_OVERLOAD_0(Self._ptr, p0, _radius, _polyCountX, _polyCountY)
		EndIf
		Local rval:IanimatedMesh = IanimatedMesh(New _IanimatedMesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetShadowColor(_color:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		If _color = Null
			.ISceneManager_setShadowColor_OVERLOAD_1(Self._ptr)
		Else
			.ISceneManager_setShadowColor_OVERLOAD_0(Self._ptr, p0)
		EndIf
	End Method
	Method GetAnimatorTypeName:Byte Ptr(_type:Int)
		Local _ret:Byte Ptr = .ISceneManager_getAnimatorTypeName(Self._ptr, _type)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetShadowColor:Scolor()
		Local _ret:Byte Ptr = .ISceneManager_getShadowColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateOctTreeTriangleSelector:ItriangleSelector(_mesh:Imesh, _node:IsceneNode, _minimalPolysPerNode:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr
		If _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_createOctTreeTriangleSelector_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_createOctTreeTriangleSelector_OVERLOAD_0(Self._ptr, p0, p1, _minimalPolysPerNode)
		EndIf
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RegisterSceneNodeFactory(_factoryToAdd:IsceneNodeFactory)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_factoryToAdd)
		.ISceneManager_registerSceneNodeFactory(Self._ptr, p0)
	End Method
	Method GetAmbientLight:Scolorf()
		Local _ret:Byte Ptr = .ISceneManager_getAmbientLight(Self._ptr)
		Local rval:Scolorf = Scolorf(New _Scolorf._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetLightManager(_lightManager:IlightManager)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_lightManager)
		.ISceneManager_setLightManager(Self._ptr, p0)
	End Method
	Method GetRootSceneNode:IsceneNode()
		Local _ret:Byte Ptr = .ISceneManager_getRootSceneNode(Self._ptr)
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddExternalMeshLoader(_externalLoader:ImeshLoader)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_externalLoader)
		.ISceneManager_addExternalMeshLoader(Self._ptr, p0)
	End Method
	Method GetSceneLoaderCount:Int()
		Local _ret:Int = .ISceneManager_getSceneLoaderCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMeshManipulator:ImeshManipulator()
		Local _ret:Byte Ptr = .ISceneManager_getMeshManipulator(Self._ptr)
		Local rval:ImeshManipulator = ImeshManipulator(New _ImeshManipulator._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetGuienvironment:Iguienvironment()
		Local _ret:Byte Ptr = .ISceneManager_getGUIEnvironment(Self._ptr)
		Local rval:Iguienvironment = Iguienvironment(New _Iguienvironment._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAnimatedMeshSceneNode:IanimatedMeshSceneNode(_mesh:IanimatedMesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_6(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_5(Self._ptr, p0, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_4(Self._ptr, p0, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_3(Self._ptr, p0, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_2(Self._ptr, p0, p1, _id, p3, p4)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_1(Self._ptr, p0, p1, _id, p3, p4, p5)
		Else
			_ret = .ISceneManager_addAnimatedMeshSceneNode_OVERLOAD_0(Self._ptr, p0, p1, _id, p3, p4, p5, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:IanimatedMeshSceneNode = IanimatedMeshSceneNode(New _IanimatedMeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodesFromType(_type:Int, _outNodes:Byte Ptr, _start:IsceneNode = Null)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_start)
		If _start = Null
			.ISceneManager_getSceneNodesFromType_OVERLOAD_1(Self._ptr, _type, _outNodes)
		Else
			.ISceneManager_getSceneNodesFromType_OVERLOAD_0(Self._ptr, _type, _outNodes, p2)
		EndIf
	End Method
	Method CreateFlyCircleAnimator:IsceneNodeAnimator(_center:Vector3df = Null, _radius:Float = -1e100000, _speed:Float = -1e100000, _direction:Vector3df = Null, _startPosition:Float = -1e100000, _radiusEllipsoid:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_direction)
		Local _ret:Byte Ptr
		If _center = Null
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_6(Self._ptr)
		ElseIf _radius = -1e100000
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_5(Self._ptr, p0)
		ElseIf _speed = -1e100000
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_4(Self._ptr, p0, _radius)
		ElseIf _direction = Null
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_3(Self._ptr, p0, _radius, _speed)
		ElseIf _startPosition = -1e100000
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_2(Self._ptr, p0, _radius, _speed, p3)
		ElseIf _radiusEllipsoid = -1e100000
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_1(Self._ptr, p0, _radius, _speed, p3, _startPosition)
		Else
			_ret = .ISceneManager_createFlyCircleAnimator_OVERLOAD_0(Self._ptr, p0, _radius, _speed, p3, _startPosition, _radiusEllipsoid)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Clear()
		.ISceneManager_clear(Self._ptr)
	End Method
	Method IsCulled:Int(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int = .ISceneManager_isCulled(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateTriangleSelectorFromBoundingBox:ItriangleSelector(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr = .ISceneManager_createTriangleSelectorFromBoundingBox(Self._ptr, p0)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateSceneNodeAnimator:IsceneNodeAnimator(_typeName:Byte Ptr, _target:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local _ret:Byte Ptr
		If _target = Null
			_ret = .ISceneManager_createSceneNodeAnimator_OVERLOAD_1(Self._ptr, _typeName)
		Else
			_ret = .ISceneManager_createSceneNodeAnimator_OVERLOAD_0(Self._ptr, _typeName, p1)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddOctTreeSceneNode:ImeshSceneNode(_mesh:IanimatedMesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _minimalPolysPerNode:Int = -2147483648, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_4(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_2(Self._ptr, p0, p1, _id)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_1(Self._ptr, p0, p1, _id, _minimalPolysPerNode)
		Else
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_0(Self._ptr, p0, p1, _id, _minimalPolysPerNode, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddOctTreeSceneNodeWithMesh:ImeshSceneNode(_mesh:Imesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _minimalPolysPerNode:Int = -2147483648, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_9(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_8(Self._ptr, p0, p1)
		ElseIf _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_7(Self._ptr, p0, p1, _id)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_6(Self._ptr, p0, p1, _id, _minimalPolysPerNode)
		Else
			_ret = .ISceneManager_addOctTreeSceneNode_OVERLOAD_5(Self._ptr, p0, p1, _id, _minimalPolysPerNode, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDefaultSceneNodeFactory:IsceneNodeFactory()
		Local _ret:Byte Ptr = .ISceneManager_getDefaultSceneNodeFactory(Self._ptr)
		Local rval:IsceneNodeFactory = IsceneNodeFactory(New _IsceneNodeFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneLoader:IsceneLoader(_index:Int)
		Local _ret:Byte Ptr = .ISceneManager_getSceneLoader(Self._ptr, _index)
		Local rval:IsceneLoader = IsceneLoader(New _IsceneLoader._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneNodeFromName:IsceneNode(_name:Byte Ptr, _start:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local _ret:Byte Ptr
		If _start = Null
			_ret = .ISceneManager_getSceneNodeFromName_OVERLOAD_1(Self._ptr, _name)
		Else
			_ret = .ISceneManager_getSceneNodeFromName_OVERLOAD_0(Self._ptr, _name, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddTextSceneNode:ItextSceneNode(_font:Iguifont, _text:String, _color:Scolor = Null, _parent:IsceneNode = Null, _position:Vector3df = Null, _id:Int = -2147483648)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_color)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local _ret:Byte Ptr
		If _color = Null
			_ret = .ISceneManager_addTextSceneNode_OVERLOAD_4(Self._ptr, p0, ws1)
		ElseIf _parent = Null
			_ret = .ISceneManager_addTextSceneNode_OVERLOAD_3(Self._ptr, p0, ws1, p2)
		ElseIf _position = Null
			_ret = .ISceneManager_addTextSceneNode_OVERLOAD_2(Self._ptr, p0, ws1, p2, p3)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addTextSceneNode_OVERLOAD_1(Self._ptr, p0, ws1, p2, p3, p4)
		Else
			_ret = .ISceneManager_addTextSceneNode_OVERLOAD_0(Self._ptr, p0, ws1, p2, p3, p4, _id)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		Local rval:ItextSceneNode = ItextSceneNode(New _ItextSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddParticleSystemSceneNode:IparticleSystemSceneNode(_withDefaultEmitter:Int = -2147483648, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _withDefaultEmitter = -2147483648
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_6(Self._ptr)
		ElseIf _parent = Null
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_5(Self._ptr, _withDefaultEmitter)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_4(Self._ptr, _withDefaultEmitter, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_3(Self._ptr, _withDefaultEmitter, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_2(Self._ptr, _withDefaultEmitter, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_1(Self._ptr, _withDefaultEmitter, p1, _id, p3, p4)
		Else
			_ret = .ISceneManager_addParticleSystemSceneNode_OVERLOAD_0(Self._ptr, _withDefaultEmitter, p1, _id, p3, p4, p5)
		EndIf
		Local rval:IparticleSystemSceneNode = IparticleSystemSceneNode(New _IparticleSystemSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSceneNode:IsceneNode(_sceneNodeTypeName:Byte Ptr, _parent:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addSceneNode_OVERLOAD_1(Self._ptr, _sceneNodeTypeName)
		Else
			_ret = .ISceneManager_addSceneNode_OVERLOAD_0(Self._ptr, _sceneNodeTypeName, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMeshCache:ImeshCache()
		Local _ret:Byte Ptr = .ISceneManager_getMeshCache(Self._ptr)
		Local rval:ImeshCache = ImeshCache(New _ImeshCache._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddCameraSceneNodeMaya:IcameraSceneNode(_parent:IsceneNode = Null, _rotateSpeed:Float = -1e100000, _zoomSpeed:Float = -1e100000, _translationSpeed:Float = -1e100000, _id:Int = -2147483648, _distance:Float = -1e100000, _makeActive:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_7(Self._ptr)
		ElseIf _rotateSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_6(Self._ptr, p0)
		ElseIf _zoomSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_5(Self._ptr, p0, _rotateSpeed)
		ElseIf _translationSpeed = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_4(Self._ptr, p0, _rotateSpeed, _zoomSpeed)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_3(Self._ptr, p0, _rotateSpeed, _zoomSpeed, _translationSpeed)
		ElseIf _distance = -1e100000
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_2(Self._ptr, p0, _rotateSpeed, _zoomSpeed, _translationSpeed, _id)
		ElseIf _makeActive = -2147483648
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_1(Self._ptr, p0, _rotateSpeed, _zoomSpeed, _translationSpeed, _id, _distance)
		Else
			_ret = .ISceneManager_addCameraSceneNodeMaya_OVERLOAD_0(Self._ptr, p0, _rotateSpeed, _zoomSpeed, _translationSpeed, _id, _distance, _makeActive)
		EndIf
		Local rval:IcameraSceneNode = IcameraSceneNode(New _IcameraSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetAmbientLight(_ambientColor:Scolorf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_ambientColor)
		.ISceneManager_setAmbientLight(Self._ptr, p0)
	End Method
	Method AddBillboardTextSceneNode:IbillboardTextSceneNode(_font:Iguifont, _text:String, _parent:IsceneNode = Null, _size:Dimension2df = Null, _position:Vector3df = Null, _id:Int = -2147483648, _colorTop:Scolor = Null, _colorBottom:Scolor = Null)
		Local cs1:Byte Ptr = _text.ToCString(), ws1:Byte Ptr = _CStrToWStr(cs1, _text.Length)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_font)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_colorTop)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_colorBottom)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_6(Self._ptr, p0, ws1)
		ElseIf _size = Null
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_5(Self._ptr, p0, ws1, p2)
		ElseIf _position = Null
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_4(Self._ptr, p0, ws1, p2, p3)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_3(Self._ptr, p0, ws1, p2, p3, p4)
		ElseIf _colorTop = Null
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_2(Self._ptr, p0, ws1, p2, p3, p4, _id)
		ElseIf _colorBottom = Null
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_1(Self._ptr, p0, ws1, p2, p3, p4, _id, p6)
		Else
			_ret = .ISceneManager_addBillboardTextSceneNode_OVERLOAD_0(Self._ptr, p0, ws1, p2, p3, p4, _id, p6, p7)
		EndIf
		MemFree cs1 ; _CStdFree ws1
		Local rval:IbillboardTextSceneNode = IbillboardTextSceneNode(New _IbillboardTextSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDefaultSceneNodeAnimatorFactory:IsceneNodeAnimatorFactory()
		Local _ret:Byte Ptr = .ISceneManager_getDefaultSceneNodeAnimatorFactory(Self._ptr)
		Local rval:IsceneNodeAnimatorFactory = IsceneNodeAnimatorFactory(New _IsceneNodeAnimatorFactory._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddDummyTransformationSceneNode:IdummyTransformationSceneNode(_parent:IsceneNode = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addDummyTransformationSceneNode_OVERLOAD_2(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addDummyTransformationSceneNode_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneManager_addDummyTransformationSceneNode_OVERLOAD_0(Self._ptr, p0, _id)
		EndIf
		Local rval:IdummyTransformationSceneNode = IdummyTransformationSceneNode(New _IdummyTransformationSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateTerrainTriangleSelector:ItriangleSelector(_node:IterrainSceneNode, _LOD:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Byte Ptr
		If _LOD = -2147483648
			_ret = .ISceneManager_createTerrainTriangleSelector_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneManager_createTerrainTriangleSelector_OVERLOAD_0(Self._ptr, p0, _LOD)
		EndIf
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateCollisionResponseAnimator:IsceneNodeAnimatorCollisionResponse(_world:ItriangleSelector, _sceneNode:IsceneNode, _ellipsoidRadius:Vector3df = Null, _gravityPerSecond:Vector3df = Null, _ellipsoidTranslation:Vector3df = Null, _slidingValue:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_world)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_sceneNode)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_ellipsoidRadius)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_gravityPerSecond)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_ellipsoidTranslation)
		Local _ret:Byte Ptr
		If _ellipsoidRadius = Null
			_ret = .ISceneManager_createCollisionResponseAnimator_OVERLOAD_4(Self._ptr, p0, p1)
		ElseIf _gravityPerSecond = Null
			_ret = .ISceneManager_createCollisionResponseAnimator_OVERLOAD_3(Self._ptr, p0, p1, p2)
		ElseIf _ellipsoidTranslation = Null
			_ret = .ISceneManager_createCollisionResponseAnimator_OVERLOAD_2(Self._ptr, p0, p1, p2, p3)
		ElseIf _slidingValue = -1e100000
			_ret = .ISceneManager_createCollisionResponseAnimator_OVERLOAD_1(Self._ptr, p0, p1, p2, p3, p4)
		Else
			_ret = .ISceneManager_createCollisionResponseAnimator_OVERLOAD_0(Self._ptr, p0, p1, p2, p3, p4, _slidingValue)
		EndIf
		Local rval:IsceneNodeAnimatorCollisionResponse = IsceneNodeAnimatorCollisionResponse(New _IsceneNodeAnimatorCollisionResponse._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRegisteredSceneNodeAnimatorFactoryCount:Int()
		Local _ret:Int = .ISceneManager_getRegisteredSceneNodeAnimatorFactoryCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetActiveCamera(_camera:IcameraSceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_camera)
		.ISceneManager_setActiveCamera(Self._ptr, p0)
	End Method
	Method RegisterNodeForRendering:Int(_node:IsceneNode, _pass:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		Local _ret:Int
		If _pass = -2147483648
			_ret = .ISceneManager_registerNodeForRendering_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneManager_registerNodeForRendering_OVERLOAD_0(Self._ptr, p0, _pass)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddTerrainSceneNode:IterrainSceneNode(_heightMapFileName:Path, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null, _vertexColor:Scolor = Null, _maxLOD:Int = -2147483648, _patchSize:Int = -2147483648, _smoothFactor:Int = -2147483648, _addAlsoIfHeightmapEmpty:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_heightMapFileName)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_vertexColor)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_10(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_9(Self._ptr, p0, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_8(Self._ptr, p0, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_7(Self._ptr, p0, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_6(Self._ptr, p0, p1, _id, p3, p4)
		ElseIf _vertexColor = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_5(Self._ptr, p0, p1, _id, p3, p4, p5)
		ElseIf _maxLOD = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_4(Self._ptr, p0, p1, _id, p3, p4, p5, p6)
		ElseIf _patchSize = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_3(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD)
		ElseIf _smoothFactor = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_2(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize)
		ElseIf _addAlsoIfHeightmapEmpty = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_1(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize, _smoothFactor)
		Else
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_0(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize, _smoothFactor, _addAlsoIfHeightmapEmpty)
		EndIf
		Local rval:IterrainSceneNode = IterrainSceneNode(New _IterrainSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddTerrainSceneNodeWithHeightMapFile:IterrainSceneNode(_heightMapFile:IreadFile, _parent:IsceneNode = Null, _id:Int = -2147483648, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null, _vertexColor:Scolor = Null, _maxLOD:Int = -2147483648, _patchSize:Int = -2147483648, _smoothFactor:Int = -2147483648, _addAlsoIfHeightmapEmpty:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_heightMapFile)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_vertexColor)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_21(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_20(Self._ptr, p0, p1)
		ElseIf _position = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_19(Self._ptr, p0, p1, _id)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_18(Self._ptr, p0, p1, _id, p3)
		ElseIf _scale = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_17(Self._ptr, p0, p1, _id, p3, p4)
		ElseIf _vertexColor = Null
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_16(Self._ptr, p0, p1, _id, p3, p4, p5)
		ElseIf _maxLOD = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_15(Self._ptr, p0, p1, _id, p3, p4, p5, p6)
		ElseIf _patchSize = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_14(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD)
		ElseIf _smoothFactor = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_13(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize)
		ElseIf _addAlsoIfHeightmapEmpty = -2147483648
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_12(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize, _smoothFactor)
		Else
			_ret = .ISceneManager_addTerrainSceneNode_OVERLOAD_11(Self._ptr, p0, p1, _id, p3, p4, p5, p6, _maxLOD, _patchSize, _smoothFactor, _addAlsoIfHeightmapEmpty)
		EndIf
		Local rval:IterrainSceneNode = IterrainSceneNode(New _IterrainSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddCameraSceneNode:IcameraSceneNode(_parent:IsceneNode = Null, _position:Vector3df = Null, _lookat:Vector3df = Null, _id:Int = -2147483648, _makeActive:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_lookat)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_5(Self._ptr)
		ElseIf _position = Null
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_4(Self._ptr, p0)
		ElseIf _lookat = Null
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_2(Self._ptr, p0, p1, p2)
		ElseIf _makeActive = -2147483648
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_1(Self._ptr, p0, p1, p2, _id)
		Else
			_ret = .ISceneManager_addCameraSceneNode_OVERLOAD_0(Self._ptr, p0, p1, p2, _id, _makeActive)
		EndIf
		Local rval:IcameraSceneNode = IcameraSceneNode(New _IcameraSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSceneCollisionManager:IsceneCollisionManager()
		Local _ret:Byte Ptr = .ISceneManager_getSceneCollisionManager(Self._ptr)
		Local rval:IsceneCollisionManager = IsceneCollisionManager(New _IsceneCollisionManager._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddBillboardSceneNode:IbillboardSceneNode(_parent:IsceneNode = Null, _size:Dimension2df = Null, _position:Vector3df = Null, _id:Int = -2147483648, _colorTop:Scolor = Null, _colorBottom:Scolor = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_size)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_colorTop)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_colorBottom)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_6(Self._ptr)
		ElseIf _size = Null
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_5(Self._ptr, p0)
		ElseIf _position = Null
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_4(Self._ptr, p0, p1)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_3(Self._ptr, p0, p1, p2)
		ElseIf _colorTop = Null
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_2(Self._ptr, p0, p1, p2, _id)
		ElseIf _colorBottom = Null
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_1(Self._ptr, p0, p1, p2, _id, p4)
		Else
			_ret = .ISceneManager_addBillboardSceneNode_OVERLOAD_0(Self._ptr, p0, p1, p2, _id, p4, p5)
		EndIf
		Local rval:IbillboardSceneNode = IbillboardSceneNode(New _IbillboardSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddEmptySceneNode:IsceneNode(_parent:IsceneNode = Null, _id:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addEmptySceneNode_OVERLOAD_2(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addEmptySceneNode_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .ISceneManager_addEmptySceneNode_OVERLOAD_0(Self._ptr, p0, _id)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetGeometryCreator:IgeometryCreator()
		Local _ret:Byte Ptr = .ISceneManager_getGeometryCreator(Self._ptr)
		Local rval:IgeometryCreator = IgeometryCreator(New _IgeometryCreator._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateSkinnedMesh:IskinnedMesh()
		Local _ret:Byte Ptr = .ISceneManager_createSkinnedMesh(Self._ptr)
		Local rval:IskinnedMesh = IskinnedMesh(New _IskinnedMesh._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddOctreeSceneNode:ImeshSceneNode(_mesh:IanimatedMesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _minimalPolysPerNode:Int = -2147483648, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_4(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_3(Self._ptr, p0, p1)
		ElseIf _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_2(Self._ptr, p0, p1, _id)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_1(Self._ptr, p0, p1, _id, _minimalPolysPerNode)
		Else
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_0(Self._ptr, p0, p1, _id, _minimalPolysPerNode, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddOctreeSceneNodeWithMesh:ImeshSceneNode(_mesh:Imesh, _parent:IsceneNode = Null, _id:Int = -2147483648, _minimalPolysPerNode:Int = -2147483648, _alsoAddIfMeshPointerZero:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_9(Self._ptr, p0)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_8(Self._ptr, p0, p1)
		ElseIf _minimalPolysPerNode = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_7(Self._ptr, p0, p1, _id)
		ElseIf _alsoAddIfMeshPointerZero = -2147483648
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_6(Self._ptr, p0, p1, _id, _minimalPolysPerNode)
		Else
			_ret = .ISceneManager_addOctreeSceneNode_OVERLOAD_5(Self._ptr, p0, p1, _id, _minimalPolysPerNode, _alsoAddIfMeshPointerZero)
		EndIf
		Local rval:ImeshSceneNode = ImeshSceneNode(New _ImeshSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method LoadScene:Int(_filename:Path, _userDataSerializer:IsceneUserDataSerializer = Null, _rootNode:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_rootNode)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneManager_loadScene_OVERLOAD_2(Self._ptr, p0)
		ElseIf _rootNode = Null
			_ret = .ISceneManager_loadScene_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_loadScene_OVERLOAD_0(Self._ptr, p0, p1, p2)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method LoadSceneWithFile:Int(_file:IreadFile, _userDataSerializer:IsceneUserDataSerializer = Null, _rootNode:IsceneNode = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userDataSerializer)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_rootNode)
		Local _ret:Int
		If _userDataSerializer = Null
			_ret = .ISceneManager_loadScene_OVERLOAD_5(Self._ptr, p0)
		ElseIf _rootNode = Null
			_ret = .ISceneManager_loadScene_OVERLOAD_4(Self._ptr, p0, p1)
		Else
			_ret = .ISceneManager_loadScene_OVERLOAD_3(Self._ptr, p0, p1, p2)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method CreateMetaTriangleSelector:ImetaTriangleSelector()
		Local _ret:Byte Ptr = .ISceneManager_createMetaTriangleSelector(Self._ptr)
		Local rval:ImetaTriangleSelector = ImetaTriangleSelector(New _ImetaTriangleSelector._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateTextureAnimator:IsceneNodeAnimator(_textures:TTexArray, _timePerFrame:Int, _loop:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_textures)
		Local _ret:Byte Ptr
		If _loop = -2147483648
			_ret = .ISceneManager_createTextureAnimator_OVERLOAD_1(Self._ptr, p0, _timePerFrame)
		Else
			_ret = .ISceneManager_createTextureAnimator_OVERLOAD_0(Self._ptr, p0, _timePerFrame, _loop)
		EndIf
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DrawAll()
		.ISceneManager_drawAll(Self._ptr)
	End Method
	Method CreateRotationAnimator:IsceneNodeAnimator(_rotationSpeed:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotationSpeed)
		Local _ret:Byte Ptr = .ISceneManager_createRotationAnimator(Self._ptr, p0)
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddVolumeLightSceneNode:IvolumeLightSceneNode(_parent:IsceneNode = Null, _id:Int = -2147483648, _subdivU:Int = -2147483648, _subdivV:Int = -2147483648, _foot:Scolor = Null, _tail:Scolor = Null, _position:Vector3df = Null, _rotation:Vector3df = Null, _scale:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_foot)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_tail)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p7:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local p8:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_9(Self._ptr)
		ElseIf _id = -2147483648
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_8(Self._ptr, p0)
		ElseIf _subdivU = -2147483648
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_7(Self._ptr, p0, _id)
		ElseIf _subdivV = -2147483648
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_6(Self._ptr, p0, _id, _subdivU)
		ElseIf _foot = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_5(Self._ptr, p0, _id, _subdivU, _subdivV)
		ElseIf _tail = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_4(Self._ptr, p0, _id, _subdivU, _subdivV, p4)
		ElseIf _position = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_3(Self._ptr, p0, _id, _subdivU, _subdivV, p4, p5)
		ElseIf _rotation = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_2(Self._ptr, p0, _id, _subdivU, _subdivV, p4, p5, p6)
		ElseIf _scale = Null
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_1(Self._ptr, p0, _id, _subdivU, _subdivV, p4, p5, p6, p7)
		Else
			_ret = .ISceneManager_addVolumeLightSceneNode_OVERLOAD_0(Self._ptr, p0, _id, _subdivU, _subdivV, p4, p5, p6, p7, p8)
		EndIf
		Local rval:IvolumeLightSceneNode = IvolumeLightSceneNode(New _IvolumeLightSceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IsceneNodeAnimatorCameraFps Extends IsceneNodeAnimator Abstract
	Method SetVerticalMovement(_allow:Int)
		.ISceneNodeAnimatorCameraFPS_setVerticalMovement(Self._ptr, _allow)
	End Method
	Method GetMoveSpeed:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraFPS_getMoveSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetRotateSpeed:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraFPS_getRotateSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetRotateSpeed(_rotateSpeed:Float)
		.ISceneNodeAnimatorCameraFPS_setRotateSpeed(Self._ptr, _rotateSpeed)
	End Method
	Method GetKeyMap:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCameraFPS_getKeyMap(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetKeyMap(_map:Byte Ptr, _count:Int)
		.ISceneNodeAnimatorCameraFPS_setKeyMap_OVERLOAD_0(Self._ptr, _map, _count)
	End Method
	Method SetKeyMapWithKeymap(_keymap:Byte Ptr)
		.ISceneNodeAnimatorCameraFPS_setKeyMap_OVERLOAD_1(Self._ptr, _keymap)
	End Method
	Method SetInvertMouse(_invert:Int)
		.ISceneNodeAnimatorCameraFPS_setInvertMouse(Self._ptr, _invert)
	End Method
	Method SetMoveSpeed(_moveSpeed:Float)
		.ISceneNodeAnimatorCameraFPS_setMoveSpeed(Self._ptr, _moveSpeed)
	End Method
End Type

Type IsceneNodeAnimatorCameraMaya Extends IsceneNodeAnimator Abstract
	Method SetZoomSpeed(_zoomSpeed:Float)
		.ISceneNodeAnimatorCameraMaya_setZoomSpeed(Self._ptr, _zoomSpeed)
	End Method
	Method GetMoveSpeed:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraMaya_getMoveSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetRotateSpeed:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraMaya_getRotateSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetRotateSpeed(_rotateSpeed:Float)
		.ISceneNodeAnimatorCameraMaya_setRotateSpeed(Self._ptr, _rotateSpeed)
	End Method
	Method GetZoomSpeed:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraMaya_getZoomSpeed(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetDistance:Float()
		Local _ret:Float = .ISceneNodeAnimatorCameraMaya_getDistance(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method SetDistance(_distance:Float)
		.ISceneNodeAnimatorCameraMaya_setDistance(Self._ptr, _distance)
	End Method
	Method SetMoveSpeed(_moveSpeed:Float)
		.ISceneNodeAnimatorCameraMaya_setMoveSpeed(Self._ptr, _moveSpeed)
	End Method
End Type

Type IcollisionCallback Extends IreferenceCounted Abstract
	Method OnCollision:Int(_animator:IsceneNodeAnimatorCollisionResponse)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_animator)
		Local _ret:Int = .ICollisionCallback_onCollision(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IsceneNodeAnimatorCollisionResponse Extends IsceneNodeAnimator Abstract
	Method SetTargetNode(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ISceneNodeAnimatorCollisionResponse_setTargetNode(Self._ptr, p0)
	End Method
	Method GetCollisionPoint:Vector3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getCollisionPoint(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetGravity(_gravity:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_gravity)
		.ISceneNodeAnimatorCollisionResponse_setGravity(Self._ptr, p0)
	End Method
	Method GetWorld:ItriangleSelector()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getWorld(Self._ptr)
		Local rval:ItriangleSelector = ItriangleSelector(New _ItriangleSelector._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCollisionResultPosition:Vector3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getCollisionResultPosition(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCollisionNode:IsceneNode()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getCollisionNode(Self._ptr)
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetEllipsoidTranslation:Vector3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getEllipsoidTranslation(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWorld(_newWorld:ItriangleSelector)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newWorld)
		.ISceneNodeAnimatorCollisionResponse_setWorld(Self._ptr, p0)
	End Method
	Method SetEllipsoidRadius(_radius:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_radius)
		.ISceneNodeAnimatorCollisionResponse_setEllipsoidRadius(Self._ptr, p0)
	End Method
	Method GetAnimateTarget:Int()
		Local _ret:Int = .ISceneNodeAnimatorCollisionResponse_getAnimateTarget(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Jump(_jumpSpeed:Float)
		.ISceneNodeAnimatorCollisionResponse_jump(Self._ptr, _jumpSpeed)
	End Method
	Method SetCollisionCallback(_callback:IcollisionCallback)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_callback)
		.ISceneNodeAnimatorCollisionResponse_setCollisionCallback(Self._ptr, p0)
	End Method
	Method GetGravity:Vector3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getGravity(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetEllipsoidTranslation(_translation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		.ISceneNodeAnimatorCollisionResponse_setEllipsoidTranslation(Self._ptr, p0)
	End Method
	Method GetCollisionTriangle:Triangle3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getCollisionTriangle(Self._ptr)
		Local rval:Triangle3df = Triangle3df(New _Triangle3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTargetNode:IsceneNode()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getTargetNode(Self._ptr)
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CollisionOccurred:Int()
		Local _ret:Int = .ISceneNodeAnimatorCollisionResponse_collisionOccurred(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsFalling:Int()
		Local _ret:Int = .ISceneNodeAnimatorCollisionResponse_isFalling(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetAnimateTarget(_enable:Int)
		.ISceneNodeAnimatorCollisionResponse_setAnimateTarget(Self._ptr, _enable)
	End Method
	Method GetEllipsoidRadius:Vector3df()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorCollisionResponse_getEllipsoidRadius(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IsceneNodeAnimatorFactory Extends IreferenceCounted Abstract
	Method CreateSceneNodeAnimator:IsceneNodeAnimator(_type:Int, _target:IsceneNode)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local _ret:Byte Ptr = .ISceneNodeAnimatorFactory_createSceneNodeAnimator_OVERLOAD_0(Self._ptr, _type, p1)
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CreateSceneNodeAnimatorWithTypeNameTarget:IsceneNodeAnimator(_typeName:Byte Ptr, _target:IsceneNode)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local _ret:Byte Ptr = .ISceneNodeAnimatorFactory_createSceneNodeAnimator_OVERLOAD_1(Self._ptr, _typeName, p1)
		Local rval:IsceneNodeAnimator = IsceneNodeAnimator(New _IsceneNodeAnimator._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCreateableSceneNodeAnimatorTypeName:Byte Ptr(_idx:Int)
		Local _ret:Byte Ptr = .ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName_OVERLOAD_0(Self._ptr, _idx)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetCreateableSceneNodeAnimatorTypeNameWithType:Byte Ptr(_type:Int)
		Local _ret:Byte Ptr = .ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorTypeName_OVERLOAD_1(Self._ptr, _type)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetCreateableSceneNodeAnimatorType:Int(_idx:Int)
		Local _ret:Int = .ISceneNodeAnimatorFactory_getCreateableSceneNodeAnimatorType(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCreatableSceneNodeAnimatorTypeCount:Int()
		Local _ret:Int = .ISceneNodeAnimatorFactory_getCreatableSceneNodeAnimatorTypeCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type IsceneNodeFactory Extends IreferenceCounted Abstract
	Method AddSceneNode:IsceneNode(_type:Int, _parent:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneNodeFactory_addSceneNode_OVERLOAD_1(Self._ptr, _type)
		Else
			_ret = .ISceneNodeFactory_addSceneNode_OVERLOAD_0(Self._ptr, _type, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddSceneNodeWithTypeName:IsceneNode(_typeName:Byte Ptr, _parent:IsceneNode = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_parent)
		Local _ret:Byte Ptr
		If _parent = Null
			_ret = .ISceneNodeFactory_addSceneNode_OVERLOAD_3(Self._ptr, _typeName)
		Else
			_ret = .ISceneNodeFactory_addSceneNode_OVERLOAD_2(Self._ptr, _typeName, p1)
		EndIf
		Local rval:IsceneNode = IsceneNode(New _IsceneNode._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCreatableSceneNodeTypeCount:Int()
		Local _ret:Int = .ISceneNodeFactory_getCreatableSceneNodeTypeCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCreateableSceneNodeType:Int(_idx:Int)
		Local _ret:Int = .ISceneNodeFactory_getCreateableSceneNodeType(Self._ptr, _idx)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCreateableSceneNodeTypeName:Byte Ptr(_idx:Int)
		Local _ret:Byte Ptr = .ISceneNodeFactory_getCreateableSceneNodeTypeName_OVERLOAD_0(Self._ptr, _idx)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetCreateableSceneNodeTypeNameWithType:Byte Ptr(_type:Int)
		Local _ret:Byte Ptr = .ISceneNodeFactory_getCreateableSceneNodeTypeName_OVERLOAD_1(Self._ptr, _type)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type IsceneUserDataSerializer Extends _irrlicht_Object Abstract
	Method OnCreateNode(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ISceneUserDataSerializer_OnCreateNode(Self._ptr, p0)
	End Method
	Method OnReadUserData(_forSceneNode:IsceneNode, _userData:Iattributes)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_forSceneNode)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_userData)
		.ISceneUserDataSerializer_OnReadUserData(Self._ptr, p0, p1)
	End Method
	Method CreateUserData:Iattributes(_forSceneNode:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_forSceneNode)
		Local _ret:Byte Ptr = .ISceneUserDataSerializer_createUserData(Self._ptr, p0)
		Local rval:Iattributes = Iattributes(New _Iattributes._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type IshaderConstantSetCallBack Extends IreferenceCounted Abstract
	Method OnSetConstants(_services:ImaterialRendererServices, _userData:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_services)
		.IShaderConstantSetCallBack_OnSetConstants(Self._ptr, p0, _userData)
	End Method
	Method OnSetMaterial(_material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_material)
		.IShaderConstantSetCallBack_OnSetMaterial(Self._ptr, p0)
	End Method
End Type

Type IshadowVolumeSceneNode Extends IsceneNode Abstract
	Method UpdateShadowVolumes()
		.IShadowVolumeSceneNode_updateShadowVolumes(Self._ptr)
	End Method
	Method SetShadowMesh(_mesh:Imesh)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mesh)
		.IShadowVolumeSceneNode_setShadowMesh(Self._ptr, p0)
	End Method
End Type

Type IterrainSceneNode Extends IsceneNode Abstract
	Method SetCameraRotationDelta(_delta:Float)
		.ITerrainSceneNode_setCameraRotationDelta(Self._ptr, _delta)
	End Method
	Method GetHeight:Float(_x:Float, _y:Float)
		Local _ret:Float = .ITerrainSceneNode_getHeight(Self._ptr, _x, _y)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetBoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .ITerrainSceneNode_getBoundingBox_OVERLOAD_0(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetBoundingBoxWithPatchXPatchZ:Aabbox3df(_patchX:Int, _patchZ:Int)
		Local _ret:Byte Ptr = .ITerrainSceneNode_getBoundingBox_OVERLOAD_1(Self._ptr, _patchX, _patchZ)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetCurrentLodofPatches:Int(_LODs:Byte Ptr)
		Local _ret:Int = .ITerrainSceneNode_getCurrentLODOfPatches(Self._ptr, _LODs)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetTerrainCenter:Vector3df()
		Local _ret:Byte Ptr = .ITerrainSceneNode_getTerrainCenter(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMesh:Imesh()
		Local _ret:Byte Ptr = .ITerrainSceneNode_getMesh(Self._ptr)
		Local rval:Imesh = Imesh(New _Imesh._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetRenderBuffer:ImeshBuffer()
		Local _ret:Byte Ptr = .ITerrainSceneNode_getRenderBuffer(Self._ptr)
		Local rval:ImeshBuffer = ImeshBuffer(New _ImeshBuffer._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetCameraMovementDelta(_delta:Float)
		.ITerrainSceneNode_setCameraMovementDelta(Self._ptr, _delta)
	End Method
	Method OverrideLoddistance:Int(_LOD:Int, _newDistance:Double)
		Local _ret:Int = .ITerrainSceneNode_overrideLODDistance(Self._ptr, _LOD, _newDistance)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ScaleTexture(_scale:Float = -1e100000, _scale2:Float = -1e100000)
		If _scale = -1e100000
			.ITerrainSceneNode_scaleTexture_OVERLOAD_2(Self._ptr)
		ElseIf _scale2 = -1e100000
			.ITerrainSceneNode_scaleTexture_OVERLOAD_1(Self._ptr, _scale)
		Else
			.ITerrainSceneNode_scaleTexture_OVERLOAD_0(Self._ptr, _scale, _scale2)
		EndIf
	End Method
	Method GetIndicesForPatch:Int(_indices:Byte Ptr, _patchX:Int, _patchZ:Int, _LOD:Int = -2147483648)
		Local _ret:Int
		If _LOD = -2147483648
			_ret = .ITerrainSceneNode_getIndicesForPatch_OVERLOAD_1(Self._ptr, _indices, _patchX, _patchZ)
		Else
			_ret = .ITerrainSceneNode_getIndicesForPatch_OVERLOAD_0(Self._ptr, _indices, _patchX, _patchZ, _LOD)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLodofPatch(_patchX:Int, _patchZ:Int, _LOD:Int = -2147483648)
		If _LOD = -2147483648
			.ITerrainSceneNode_setLODOfPatch_OVERLOAD_1(Self._ptr, _patchX, _patchZ)
		Else
			.ITerrainSceneNode_setLODOfPatch_OVERLOAD_0(Self._ptr, _patchX, _patchZ, _LOD)
		EndIf
	End Method
	Method LoadHeightMapRaw:Int(_file:IreadFile, _bitsPerPixel:Int = -2147483648, _signedData:Int = -2147483648, _floatVals:Int = -2147483648, _width:Int = -2147483648, _vertexColor:Scolor = Null, _smoothFactor:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p5:Byte Ptr = _irrlicht_Object._getPtr(_vertexColor)
		Local _ret:Int
		If _bitsPerPixel = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_6(Self._ptr, p0)
		ElseIf _signedData = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_5(Self._ptr, p0, _bitsPerPixel)
		ElseIf _floatVals = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_4(Self._ptr, p0, _bitsPerPixel, _signedData)
		ElseIf _width = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_3(Self._ptr, p0, _bitsPerPixel, _signedData, _floatVals)
		ElseIf _vertexColor = Null
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_2(Self._ptr, p0, _bitsPerPixel, _signedData, _floatVals, _width)
		ElseIf _smoothFactor = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_1(Self._ptr, p0, _bitsPerPixel, _signedData, _floatVals, _width, p5)
		Else
			_ret = .ITerrainSceneNode_loadHeightMapRAW_OVERLOAD_0(Self._ptr, p0, _bitsPerPixel, _signedData, _floatVals, _width, p5, _smoothFactor)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDynamicSelectorUpdate(_bVal:Int)
		.ITerrainSceneNode_setDynamicSelectorUpdate(Self._ptr, _bVal)
	End Method
	Method GetMeshBufferForLod(_mb:IdynamicMeshBuffer, _LOD:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_mb)
		If _LOD = -2147483648
			.ITerrainSceneNode_getMeshBufferForLOD_OVERLOAD_1(Self._ptr, p0)
		Else
			.ITerrainSceneNode_getMeshBufferForLOD_OVERLOAD_0(Self._ptr, p0, _LOD)
		EndIf
	End Method
	Method LoadHeightMap:Int(_file:IreadFile, _vertexColor:Scolor = Null, _smoothFactor:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_vertexColor)
		Local _ret:Int
		If _vertexColor = Null
			_ret = .ITerrainSceneNode_loadHeightMap_OVERLOAD_2(Self._ptr, p0)
		ElseIf _smoothFactor = -2147483648
			_ret = .ITerrainSceneNode_loadHeightMap_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .ITerrainSceneNode_loadHeightMap_OVERLOAD_0(Self._ptr, p0, p1, _smoothFactor)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndexCount:Int()
		Local _ret:Int = .ITerrainSceneNode_getIndexCount(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type ItextSceneNode Extends IsceneNode Abstract
	Method SetText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.ITextSceneNode_setText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method SetTextColor(_color:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_color)
		.ITextSceneNode_setTextColor(Self._ptr, p0)
	End Method
End Type

Type IvolumeLightSceneNode Extends IsceneNode Abstract
	Method SetSubDivideU(_inU:Int)
		.IVolumeLightSceneNode_setSubDivideU(Self._ptr, _inU)
	End Method
	Method GetSubDivideU:Int()
		Local _ret:Int = .IVolumeLightSceneNode_getSubDivideU(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetFootColor:Scolor()
		Local _ret:Byte Ptr = .IVolumeLightSceneNode_getFootColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTailColor:Scolor()
		Local _ret:Byte Ptr = .IVolumeLightSceneNode_getTailColor(Self._ptr)
		Local rval:Scolor = Scolor(New _Scolor._withPtr(_ret)._withDel(delete_Scolor))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSubDivideV:Int()
		Local _ret:Int = .IVolumeLightSceneNode_getSubDivideV(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetFootColor(_inColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_inColor)
		.IVolumeLightSceneNode_setFootColor(Self._ptr, p0)
	End Method
	Method SetTailColor(_inColor:Scolor)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_inColor)
		.IVolumeLightSceneNode_setTailColor(Self._ptr, p0)
	End Method
	Method SetSubDivideV(_inV:Int)
		.IVolumeLightSceneNode_setSubDivideV(Self._ptr, _inV)
	End Method
End Type

Type IwriteFile Extends IreferenceCounted Abstract
	Method GetFileName:Path()
		Local _ret:Byte Ptr = .IWriteFile_getFileName(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Write:Int(_buffer:Byte Ptr, _sizeToWrite:Int)
		Local _ret:Int = .IWriteFile_write(Self._ptr, _buffer, _sizeToWrite)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Seek:Int(_finalPos:Int, _relativeMovement:Int = -2147483648)
		Local _ret:Int
		If _relativeMovement = -2147483648
			_ret = .IWriteFile_seek_OVERLOAD_1(Self._ptr, _finalPos)
		Else
			_ret = .IWriteFile_seek_OVERLOAD_0(Self._ptr, _finalPos, _relativeMovement)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPos:Int()
		Local _ret:Int = .IWriteFile_getPos(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Ixmlwriter Extends IreferenceCounted Abstract
	Method WriteLineBreak()
		.IXMLWriter_writeLineBreak(Self._ptr)
	End Method
	Method WriteClosingTag(_name:String)
		Local cs0:Byte Ptr = _name.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _name.Length)
		.IXMLWriter_writeClosingTag(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method WriteComment(_comment:String)
		Local cs0:Byte Ptr = _comment.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _comment.Length)
		.IXMLWriter_writeComment(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method WriteXmlheader()
		.IXMLWriter_writeXMLHeader(Self._ptr)
	End Method
	Method WriteElement(_name:String, _empty:Int = -2147483648, _attr1Name:String = Null, _attr1Value:String = Null, _attr2Name:String = Null, _attr2Value:String = Null, _attr3Name:String = Null, _attr3Value:String = Null, _attr4Name:String = Null, _attr4Value:String = Null, _attr5Name:String = Null, _attr5Value:String = Null)
		Local cs0:Byte Ptr = _name.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _name.Length)
		Local cs2:Byte Ptr = _attr1Name.ToCString(), ws2:Byte Ptr = _CStrToWStr(cs2, _attr1Name.Length)
		Local cs3:Byte Ptr = _attr1Value.ToCString(), ws3:Byte Ptr = _CStrToWStr(cs3, _attr1Value.Length)
		Local cs4:Byte Ptr = _attr2Name.ToCString(), ws4:Byte Ptr = _CStrToWStr(cs4, _attr2Name.Length)
		Local cs5:Byte Ptr = _attr2Value.ToCString(), ws5:Byte Ptr = _CStrToWStr(cs5, _attr2Value.Length)
		Local cs6:Byte Ptr = _attr3Name.ToCString(), ws6:Byte Ptr = _CStrToWStr(cs6, _attr3Name.Length)
		Local cs7:Byte Ptr = _attr3Value.ToCString(), ws7:Byte Ptr = _CStrToWStr(cs7, _attr3Value.Length)
		Local cs8:Byte Ptr = _attr4Name.ToCString(), ws8:Byte Ptr = _CStrToWStr(cs8, _attr4Name.Length)
		Local cs9:Byte Ptr = _attr4Value.ToCString(), ws9:Byte Ptr = _CStrToWStr(cs9, _attr4Value.Length)
		Local cs10:Byte Ptr = _attr5Name.ToCString(), ws10:Byte Ptr = _CStrToWStr(cs10, _attr5Name.Length)
		Local cs11:Byte Ptr = _attr5Value.ToCString(), ws11:Byte Ptr = _CStrToWStr(cs11, _attr5Value.Length)
		If _empty = -2147483648
			.IXMLWriter_writeElement_OVERLOAD_11(Self._ptr, ws0)
		ElseIf _attr1Name = Null
			.IXMLWriter_writeElement_OVERLOAD_10(Self._ptr, ws0, _empty)
		ElseIf _attr1Value = Null
			.IXMLWriter_writeElement_OVERLOAD_9(Self._ptr, ws0, _empty, ws2)
		ElseIf _attr2Name = Null
			.IXMLWriter_writeElement_OVERLOAD_8(Self._ptr, ws0, _empty, ws2, ws3)
		ElseIf _attr2Value = Null
			.IXMLWriter_writeElement_OVERLOAD_7(Self._ptr, ws0, _empty, ws2, ws3, ws4)
		ElseIf _attr3Name = Null
			.IXMLWriter_writeElement_OVERLOAD_6(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5)
		ElseIf _attr3Value = Null
			.IXMLWriter_writeElement_OVERLOAD_5(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6)
		ElseIf _attr4Name = Null
			.IXMLWriter_writeElement_OVERLOAD_4(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6, ws7)
		ElseIf _attr4Value = Null
			.IXMLWriter_writeElement_OVERLOAD_3(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6, ws7, ws8)
		ElseIf _attr5Name = Null
			.IXMLWriter_writeElement_OVERLOAD_2(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6, ws7, ws8, ws9)
		ElseIf _attr5Value = Null
			.IXMLWriter_writeElement_OVERLOAD_1(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6, ws7, ws8, ws9, ws10)
		Else
			.IXMLWriter_writeElement_OVERLOAD_0(Self._ptr, ws0, _empty, ws2, ws3, ws4, ws5, ws6, ws7, ws8, ws9, ws10, ws11)
		EndIf
		MemFree cs0 ; _CStdFree ws0
		MemFree cs2 ; _CStdFree ws2
		MemFree cs3 ; _CStdFree ws3
		MemFree cs4 ; _CStdFree ws4
		MemFree cs5 ; _CStdFree ws5
		MemFree cs6 ; _CStdFree ws6
		MemFree cs7 ; _CStdFree ws7
		MemFree cs8 ; _CStdFree ws8
		MemFree cs9 ; _CStdFree ws9
		MemFree cs10 ; _CStdFree ws10
		MemFree cs11 ; _CStdFree ws11
	End Method
	Method WriteElementWithNameEmptyNamesValues(_name:String, _empty:Int, _names:Byte Ptr, _values:Byte Ptr)
		Local cs0:Byte Ptr = _name.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _name.Length)
		.IXMLWriter_writeElement_OVERLOAD_12(Self._ptr, ws0, _empty, _names, _values)
		MemFree cs0 ; _CStdFree ws0
	End Method
	Method WriteText(_text:String)
		Local cs0:Byte Ptr = _text.ToCString(), ws0:Byte Ptr = _CStrToWStr(cs0, _text.Length)
		.IXMLWriter_writeText(Self._ptr, ws0)
		MemFree cs0 ; _CStdFree ws0
	End Method
End Type

Type IlightManager Extends IreferenceCounted Abstract
	Method OnNodePreRender(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ILightManager_OnNodePreRender(Self._ptr, p0)
	End Method
	Method OnPreRender(_lightList:Byte Ptr)
		.ILightManager_OnPreRender(Self._ptr, _lightList)
	End Method
	Method OnRenderPassPostRender(_renderPass:Int)
		.ILightManager_OnRenderPassPostRender(Self._ptr, _renderPass)
	End Method
	Method OnNodePostRender(_node:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_node)
		.ILightManager_OnNodePostRender(Self._ptr, p0)
	End Method
	Method OnPostRender()
		.ILightManager_OnPostRender(Self._ptr)
	End Method
	Method OnRenderPassPreRender(_renderPass:Int)
		.ILightManager_OnRenderPassPreRender(Self._ptr, _renderPass)
	End Method
End Type

Type SmeshBuffer Extends ImeshBuffer Abstract
	Method ChangedID_Index:Int()
		Local _ret:Int = .SMeshBuffer_ChangedID_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPosition:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBuffer_getPosition_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDirty(_Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBuffer_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.SMeshBuffer_setDirty_OVERLOAD_0(Self._ptr, _Buffer)
		EndIf
	End Method
	Method Material:Smaterial()
		Local _ret:Byte Ptr = .SMeshBuffer_Material_get(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Vertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBuffer_Vertices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetTcoords:Vector2df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBuffer_getTCoords_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBuffer_getVertices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Function Make:SmeshBuffer()
		Local _ret:Byte Ptr = .new_SMeshBuffer()
		Local rval:SmeshBuffer = SmeshBuffer(New _SmeshBuffer._withPtr(_ret)._withDel(delete_SmeshBuffer))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetHardwareMappingHint(_NewMappingHint:Int, _Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBuffer_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _NewMappingHint)
		Else
			.SMeshBuffer_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _NewMappingHint, _Buffer)
		EndIf
	End Method
	Method Indices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBuffer_Indices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method MappingHint_Index:Int()
		Local _ret:Int = .SMeshBuffer_MappingHint_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .SMeshBuffer_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setMappingHint_Vertex(_MappingHint_Vertex:Int)
		.SMeshBuffer_MappingHint_Vertex_set(Self._ptr, _MappingHint_Vertex)
	End Method
	Method setVertices(_Vertices:Byte Ptr)
		.SMeshBuffer_Vertices_set(Self._ptr, _Vertices)
	End Method
	Method setMappingHint_Index(_MappingHint_Index:Int)
		.SMeshBuffer_MappingHint_Index_set(Self._ptr, _MappingHint_Index)
	End Method
	Method BoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .SMeshBuffer_BoundingBox_get(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ChangedID_Vertex:Int()
		Local _ret:Int = .SMeshBuffer_ChangedID_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBuffer_getIndices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method setChangedID_Index(_ChangedID_Index:Int)
		.SMeshBuffer_ChangedID_Index_set(Self._ptr, _ChangedID_Index)
	End Method
	Method Append(_vertices:Byte Ptr, _numVertices:Int, _indices:Byte Ptr, _numIndices:Int)
		.SMeshBuffer_append_OVERLOAD_0(Self._ptr, _vertices, _numVertices, _indices, _numIndices)
	End Method
	Method AppendWithOther(_other:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.SMeshBuffer_append_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method setChangedID_Vertex(_ChangedID_Vertex:Int)
		.SMeshBuffer_ChangedID_Vertex_set(Self._ptr, _ChangedID_Vertex)
	End Method
	Method GetNormal:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBuffer_getNormal_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setIndices(_Indices:Byte Ptr)
		.SMeshBuffer_Indices_set(Self._ptr, _Indices)
	End Method
	Method setBoundingBox(_BoundingBox:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_BoundingBox)
		.SMeshBuffer_BoundingBox_set(Self._ptr, p0)
	End Method
	Method setMaterial(_Material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Material)
		.SMeshBuffer_Material_set(Self._ptr, p0)
	End Method
	Method MappingHint_Vertex:Int()
		Local _ret:Int = .SMeshBuffer_MappingHint_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type SmeshBufferLightMap Extends ImeshBuffer Abstract
	Method ChangedID_Index:Int()
		Local _ret:Int = .SMeshBufferLightMap_ChangedID_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPosition:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getPosition_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDirty(_Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBufferLightMap_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.SMeshBufferLightMap_setDirty_OVERLOAD_0(Self._ptr, _Buffer)
		EndIf
	End Method
	Method Material:Smaterial()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_Material_get(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Vertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_Vertices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetTcoords:Vector2df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getTCoords_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getVertices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Function Make:SmeshBufferLightMap()
		Local _ret:Byte Ptr = .new_SMeshBufferLightMap()
		Local rval:SmeshBufferLightMap = SmeshBufferLightMap(New _SmeshBufferLightMap._withPtr(_ret)._withDel(delete_SmeshBufferLightMap))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetHardwareMappingHint(_NewMappingHint:Int, _Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBufferLightMap_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _NewMappingHint)
		Else
			.SMeshBufferLightMap_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _NewMappingHint, _Buffer)
		EndIf
	End Method
	Method Indices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_Indices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method MappingHint_Index:Int()
		Local _ret:Int = .SMeshBufferLightMap_MappingHint_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setMappingHint_Vertex(_MappingHint_Vertex:Int)
		.SMeshBufferLightMap_MappingHint_Vertex_set(Self._ptr, _MappingHint_Vertex)
	End Method
	Method setVertices(_Vertices:Byte Ptr)
		.SMeshBufferLightMap_Vertices_set(Self._ptr, _Vertices)
	End Method
	Method setMappingHint_Index(_MappingHint_Index:Int)
		.SMeshBufferLightMap_MappingHint_Index_set(Self._ptr, _MappingHint_Index)
	End Method
	Method BoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_BoundingBox_get(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ChangedID_Vertex:Int()
		Local _ret:Int = .SMeshBufferLightMap_ChangedID_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getIndices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method setChangedID_Index(_ChangedID_Index:Int)
		.SMeshBufferLightMap_ChangedID_Index_set(Self._ptr, _ChangedID_Index)
	End Method
	Method Append(_vertices:Byte Ptr, _numVertices:Int, _indices:Byte Ptr, _numIndices:Int)
		.SMeshBufferLightMap_append_OVERLOAD_0(Self._ptr, _vertices, _numVertices, _indices, _numIndices)
	End Method
	Method AppendWithOther(_other:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.SMeshBufferLightMap_append_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method setChangedID_Vertex(_ChangedID_Vertex:Int)
		.SMeshBufferLightMap_ChangedID_Vertex_set(Self._ptr, _ChangedID_Vertex)
	End Method
	Method GetNormal:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferLightMap_getNormal_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setIndices(_Indices:Byte Ptr)
		.SMeshBufferLightMap_Indices_set(Self._ptr, _Indices)
	End Method
	Method setBoundingBox(_BoundingBox:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_BoundingBox)
		.SMeshBufferLightMap_BoundingBox_set(Self._ptr, p0)
	End Method
	Method setMaterial(_Material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Material)
		.SMeshBufferLightMap_Material_set(Self._ptr, p0)
	End Method
	Method MappingHint_Vertex:Int()
		Local _ret:Int = .SMeshBufferLightMap_MappingHint_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type SmeshBufferTangents Extends ImeshBuffer Abstract
	Method ChangedID_Index:Int()
		Local _ret:Int = .SMeshBufferTangents_ChangedID_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPosition:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferTangents_getPosition_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetDirty(_Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBufferTangents_setDirty_OVERLOAD_1(Self._ptr)
		Else
			.SMeshBufferTangents_setDirty_OVERLOAD_0(Self._ptr, _Buffer)
		EndIf
	End Method
	Method Material:Smaterial()
		Local _ret:Byte Ptr = .SMeshBufferTangents_Material_get(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Vertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferTangents_Vertices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method GetTcoords:Vector2df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferTangents_getTCoords_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVertices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferTangents_getVertices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Function Make:SmeshBufferTangents()
		Local _ret:Byte Ptr = .new_SMeshBufferTangents()
		Local rval:SmeshBufferTangents = SmeshBufferTangents(New _SmeshBufferTangents._withPtr(_ret)._withDel(delete_SmeshBufferTangents))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetHardwareMappingHint(_NewMappingHint:Int, _Buffer:Int = -2147483648)
		If _Buffer = -2147483648
			.SMeshBufferTangents_setHardwareMappingHint_OVERLOAD_1(Self._ptr, _NewMappingHint)
		Else
			.SMeshBufferTangents_setHardwareMappingHint_OVERLOAD_0(Self._ptr, _NewMappingHint, _Buffer)
		EndIf
	End Method
	Method Indices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferTangents_Indices_get(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method MappingHint_Index:Int()
		Local _ret:Int = .SMeshBufferTangents_MappingHint_Index_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMaterial:Smaterial()
		Local _ret:Byte Ptr = .SMeshBufferTangents_getMaterial_OVERLOAD_0(Self._ptr)
		Local rval:Smaterial = Smaterial(New _Smaterial._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setMappingHint_Vertex(_MappingHint_Vertex:Int)
		.SMeshBufferTangents_MappingHint_Vertex_set(Self._ptr, _MappingHint_Vertex)
	End Method
	Method setVertices(_Vertices:Byte Ptr)
		.SMeshBufferTangents_Vertices_set(Self._ptr, _Vertices)
	End Method
	Method setMappingHint_Index(_MappingHint_Index:Int)
		.SMeshBufferTangents_MappingHint_Index_set(Self._ptr, _MappingHint_Index)
	End Method
	Method BoundingBox:Aabbox3df()
		Local _ret:Byte Ptr = .SMeshBufferTangents_BoundingBox_get(Self._ptr)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ChangedID_Vertex:Int()
		Local _ret:Int = .SMeshBufferTangents_ChangedID_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIndices:Byte Ptr()
		Local _ret:Byte Ptr = .SMeshBufferTangents_getIndices_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method setChangedID_Index(_ChangedID_Index:Int)
		.SMeshBufferTangents_ChangedID_Index_set(Self._ptr, _ChangedID_Index)
	End Method
	Method Append(_vertices:Byte Ptr, _numVertices:Int, _indices:Byte Ptr, _numIndices:Int)
		.SMeshBufferTangents_append_OVERLOAD_0(Self._ptr, _vertices, _numVertices, _indices, _numIndices)
	End Method
	Method AppendWithOther(_other:ImeshBuffer)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.SMeshBufferTangents_append_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method setChangedID_Vertex(_ChangedID_Vertex:Int)
		.SMeshBufferTangents_ChangedID_Vertex_set(Self._ptr, _ChangedID_Vertex)
	End Method
	Method GetNormal:Vector3df(_i:Int)
		Local _ret:Byte Ptr = .SMeshBufferTangents_getNormal_OVERLOAD_0(Self._ptr, _i)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setIndices(_Indices:Byte Ptr)
		.SMeshBufferTangents_Indices_set(Self._ptr, _Indices)
	End Method
	Method setBoundingBox(_BoundingBox:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_BoundingBox)
		.SMeshBufferTangents_BoundingBox_set(Self._ptr, p0)
	End Method
	Method setMaterial(_Material:Smaterial)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Material)
		.SMeshBufferTangents_Material_set(Self._ptr, p0)
	End Method
	Method MappingHint_Vertex:Int()
		Local _ret:Int = .SMeshBufferTangents_MappingHint_Vertex_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type TStringList Extends _irrlicht_Object Abstract
	Method PushBack(_element:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.tStringList_push_back(Self._ptr, p0)
	End Method
	Method Empty:Int()
		Local _ret:Int = .tStringList_empty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ConstPointer:Path()
		Local _ret:Byte Ptr = .tStringList_const_pointer(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetPointer(_newPointer:Path, _size:Int, __is_sorted:Int = -2147483648, __free_when_destroyed:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newPointer)
		If __is_sorted = -2147483648
			.tStringList_set_pointer_OVERLOAD_2(Self._ptr, p0, _size)
		ElseIf __free_when_destroyed = -2147483648
			.tStringList_set_pointer_OVERLOAD_1(Self._ptr, p0, _size, __is_sorted)
		Else
			.tStringList_set_pointer_OVERLOAD_0(Self._ptr, p0, _size, __is_sorted, __free_when_destroyed)
		EndIf
	End Method
	Method Sort()
		.tStringList_sort(Self._ptr)
	End Method
	Method Clear()
		.tStringList_clear(Self._ptr)
	End Method
	Method LinearSearch:Int(_element:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tStringList_linear_search(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BinarySearch:Int(_element:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tStringList_binary_search_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BinarySearchWithElementLeftRight:Int(_element:Path, _left:Int, _right:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tStringList_binary_search_OVERLOAD_2(Self._ptr, p0, _left, _right)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:TStringList()
		Local _ret:Byte Ptr = .new_tStringList_OVERLOAD_0()
		Local rval:TStringList = TStringList(New _TStringList._withPtr(_ret)._withDel(delete_TStringList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStart_count:TStringList(_start_count:Int)
		Local _ret:Byte Ptr = .new_tStringList_OVERLOAD_1(_start_count)
		Local rval:TStringList = TStringList(New _TStringList._withPtr(_ret)._withDel(delete_TStringList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:TStringList(_other:TStringList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_tStringList_OVERLOAD_2(p0)
		Local rval:TStringList = TStringList(New _TStringList._withPtr(_ret)._withDel(delete_TStringList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetUsed(_usedNow:Int)
		.tStringList_set_used(Self._ptr, _usedNow)
	End Method
	Method Eq:Int(_other:TStringList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .tStringList___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LinearReverseSearch:Int(_element:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tStringList_linear_reverse_search(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Swap(_other:TStringList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.tStringList_swap(Self._ptr, p0)
	End Method
	Method GetLast:Path()
		Local _ret:Byte Ptr = .tStringList_getLast_OVERLOAD_0(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AllocatedSize:Int()
		Local _ret:Int = .tStringList_allocated_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .tStringList_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Pointer:Path()
		Local _ret:Byte Ptr = .tStringList_pointer(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Reallocate(_new_size:Int, _canShrink:Int = -2147483648)
		If _canShrink = -2147483648
			.tStringList_reallocate_OVERLOAD_1(Self._ptr, _new_size)
		Else
			.tStringList_reallocate_OVERLOAD_0(Self._ptr, _new_size, _canShrink)
		EndIf
	End Method
	Method Insert(_element:Path, _index:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		If _index = -2147483648
			.tStringList_insert_OVERLOAD_1(Self._ptr, p0)
		Else
			.tStringList_insert_OVERLOAD_0(Self._ptr, p0, _index)
		EndIf
	End Method
	Method BinarySearchMulti:Int(_element:Path, _last:Byte Ptr)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tStringList_binary_search_multi(Self._ptr, p0, _last)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:TStringList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .tStringList___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSorted(__is_sorted:Int)
		.tStringList_set_sorted(Self._ptr, __is_sorted)
	End Method
	Method PushFront(_element:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.tStringList_push_front(Self._ptr, p0)
	End Method
	Method SetAllocStrategy(_newStrategy:Int = -2147483648)
		If _newStrategy = -2147483648
			.tStringList_setAllocStrategy_OVERLOAD_1(Self._ptr)
		Else
			.tStringList_setAllocStrategy_OVERLOAD_0(Self._ptr, _newStrategy)
		EndIf
	End Method
	Method _assign:TStringList(_other:TStringList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .tStringList___assign__(Self._ptr, p0)
		Local rval:TStringList = TStringList(New _TStringList._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ARef:Path(_index:Int)
		Local _ret:Byte Ptr = .tStringList___aref___OVERLOAD_0(Self._ptr, _index)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Erase(_index:Int)
		.tStringList_erase_OVERLOAD_0(Self._ptr, _index)
	End Method
	Method EraseWithIndexCount(_index:Int, _count:Int)
		.tStringList_erase_OVERLOAD_1(Self._ptr, _index, _count)
	End Method
	Method SetFreeWhenDestroyed(_f:Int)
		.tStringList_set_free_when_destroyed(Self._ptr, _f)
	End Method
End Type

Type TTexArray Extends _irrlicht_Object Abstract
	Method PushBack(_element:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.tTexArray_push_back(Self._ptr, p0)
	End Method
	Method Empty:Int()
		Local _ret:Int = .tTexArray_empty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ConstPointer:Itexture()
		Local _ret:Byte Ptr = .tTexArray_const_pointer(Self._ptr)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetPointer(_newPointer:Itexture, _size:Int, __is_sorted:Int = -2147483648, __free_when_destroyed:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_newPointer)
		If __is_sorted = -2147483648
			.tTexArray_set_pointer_OVERLOAD_2(Self._ptr, p0, _size)
		ElseIf __free_when_destroyed = -2147483648
			.tTexArray_set_pointer_OVERLOAD_1(Self._ptr, p0, _size, __is_sorted)
		Else
			.tTexArray_set_pointer_OVERLOAD_0(Self._ptr, p0, _size, __is_sorted, __free_when_destroyed)
		EndIf
	End Method
	Method Sort()
		.tTexArray_sort(Self._ptr)
	End Method
	Method Clear()
		.tTexArray_clear(Self._ptr)
	End Method
	Method LinearSearch:Int(_element:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tTexArray_linear_search(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BinarySearch:Int(_element:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tTexArray_binary_search_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BinarySearchWithElementLeftRight:Int(_element:Itexture, _left:Int, _right:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tTexArray_binary_search_OVERLOAD_2(Self._ptr, p0, _left, _right)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:TTexArray()
		Local _ret:Byte Ptr = .new_tTexArray_OVERLOAD_0()
		Local rval:TTexArray = TTexArray(New _TTexArray._withPtr(_ret)._withDel(delete_TTexArray))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStart_count:TTexArray(_start_count:Int)
		Local _ret:Byte Ptr = .new_tTexArray_OVERLOAD_1(_start_count)
		Local rval:TTexArray = TTexArray(New _TTexArray._withPtr(_ret)._withDel(delete_TTexArray))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:TTexArray(_other:TTexArray)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_tTexArray_OVERLOAD_2(p0)
		Local rval:TTexArray = TTexArray(New _TTexArray._withPtr(_ret)._withDel(delete_TTexArray))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method SetUsed(_usedNow:Int)
		.tTexArray_set_used(Self._ptr, _usedNow)
	End Method
	Method Eq:Int(_other:TTexArray)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .tTexArray___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LinearReverseSearch:Int(_element:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tTexArray_linear_reverse_search(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Swap(_other:TTexArray)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.tTexArray_swap(Self._ptr, p0)
	End Method
	Method GetLast:Itexture()
		Local _ret:Byte Ptr = .tTexArray_getLast_OVERLOAD_0(Self._ptr)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AllocatedSize:Int()
		Local _ret:Int = .tTexArray_allocated_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .tTexArray_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Pointer:Itexture()
		Local _ret:Byte Ptr = .tTexArray_pointer(Self._ptr)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Reallocate(_new_size:Int, _canShrink:Int = -2147483648)
		If _canShrink = -2147483648
			.tTexArray_reallocate_OVERLOAD_1(Self._ptr, _new_size)
		Else
			.tTexArray_reallocate_OVERLOAD_0(Self._ptr, _new_size, _canShrink)
		EndIf
	End Method
	Method Insert(_element:Itexture, _index:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		If _index = -2147483648
			.tTexArray_insert_OVERLOAD_1(Self._ptr, p0)
		Else
			.tTexArray_insert_OVERLOAD_0(Self._ptr, p0, _index)
		EndIf
	End Method
	Method BinarySearchMulti:Int(_element:Itexture, _last:Byte Ptr)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		Local _ret:Int = .tTexArray_binary_search_multi(Self._ptr, p0, _last)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:TTexArray)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .tTexArray___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetSorted(__is_sorted:Int)
		.tTexArray_set_sorted(Self._ptr, __is_sorted)
	End Method
	Method PushFront(_element:Itexture)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.tTexArray_push_front(Self._ptr, p0)
	End Method
	Method SetAllocStrategy(_newStrategy:Int = -2147483648)
		If _newStrategy = -2147483648
			.tTexArray_setAllocStrategy_OVERLOAD_1(Self._ptr)
		Else
			.tTexArray_setAllocStrategy_OVERLOAD_0(Self._ptr, _newStrategy)
		EndIf
	End Method
	Method _assign:TTexArray(_other:TTexArray)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .tTexArray___assign__(Self._ptr, p0)
		Local rval:TTexArray = TTexArray(New _TTexArray._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ARef:Itexture(_index:Int)
		Local _ret:Byte Ptr = .tTexArray___aref___OVERLOAD_0(Self._ptr, _index)
		Local rval:Itexture = Itexture(New _Itexture._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Erase(_index:Int)
		.tTexArray_erase_OVERLOAD_0(Self._ptr, _index)
	End Method
	Method EraseWithIndexCount(_index:Int, _count:Int)
		.tTexArray_erase_OVERLOAD_1(Self._ptr, _index, _count)
	End Method
	Method SetFreeWhenDestroyed(_f:Int)
		.tTexArray_set_free_when_destroyed(Self._ptr, _f)
	End Method
End Type

Type IsceneNodeList Extends _irrlicht_Object Abstract
	Method Erase:Byte Ptr(_it:Byte Ptr)
		Local _ret:Byte Ptr = .ISceneNodeList_erase(Self._ptr, _it)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method PushBack(_element:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeList_push_back(Self._ptr, p0)
	End Method
	Method PushFront(_element:IsceneNode)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeList_push_front(Self._ptr, p0)
	End Method
	Method InsertBefore(_it:Byte Ptr, _element:IsceneNode)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeList_insert_before(Self._ptr, _it, p1)
	End Method
	Function Make:IsceneNodeList()
		Local _ret:Byte Ptr = .new_ISceneNodeList_OVERLOAD_0()
		Local rval:IsceneNodeList = IsceneNodeList(New _IsceneNodeList._withPtr(_ret)._withDel(delete_IsceneNodeList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:IsceneNodeList(_other:IsceneNodeList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_ISceneNodeList_OVERLOAD_1(p0)
		Local rval:IsceneNodeList = IsceneNodeList(New _IsceneNodeList._withPtr(_ret)._withDel(delete_IsceneNodeList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Clear()
		.ISceneNodeList_clear(Self._ptr)
	End Method
	Method _end:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeList_end_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method InsertAfter(_it:Byte Ptr, _element:IsceneNode)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeList_insert_after(Self._ptr, _it, p1)
	End Method
	Method GetLast:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeList_getLast_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Swap(_other:IsceneNodeList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.ISceneNodeList_swap(Self._ptr, p0)
	End Method
	Method _assign(_other:IsceneNodeList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.ISceneNodeList___assign__(Self._ptr, p0)
	End Method
	Method GetSize:Int()
		Local _ret:Int = .ISceneNodeList_getSize(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .ISceneNodeList_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Empty:Int()
		Local _ret:Int = .ISceneNodeList_empty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Begin:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeList_begin_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type IsceneNodeAnimatorList Extends _irrlicht_Object Abstract
	Method Erase:Byte Ptr(_it:Byte Ptr)
		Local _ret:Byte Ptr = .ISceneNodeAnimatorList_erase(Self._ptr, _it)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method PushBack(_element:IsceneNodeAnimator)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeAnimatorList_push_back(Self._ptr, p0)
	End Method
	Method PushFront(_element:IsceneNodeAnimator)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeAnimatorList_push_front(Self._ptr, p0)
	End Method
	Method InsertBefore(_it:Byte Ptr, _element:IsceneNodeAnimator)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeAnimatorList_insert_before(Self._ptr, _it, p1)
	End Method
	Function Make:IsceneNodeAnimatorList()
		Local _ret:Byte Ptr = .new_ISceneNodeAnimatorList_OVERLOAD_0()
		Local rval:IsceneNodeAnimatorList = IsceneNodeAnimatorList(New _IsceneNodeAnimatorList._withPtr(_ret)._withDel(delete_IsceneNodeAnimatorList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:IsceneNodeAnimatorList(_other:IsceneNodeAnimatorList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_ISceneNodeAnimatorList_OVERLOAD_1(p0)
		Local rval:IsceneNodeAnimatorList = IsceneNodeAnimatorList(New _IsceneNodeAnimatorList._withPtr(_ret)._withDel(delete_IsceneNodeAnimatorList))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Clear()
		.ISceneNodeAnimatorList_clear(Self._ptr)
	End Method
	Method _end:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorList_end_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method InsertAfter(_it:Byte Ptr, _element:IsceneNodeAnimator)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_element)
		.ISceneNodeAnimatorList_insert_after(Self._ptr, _it, p1)
	End Method
	Method GetLast:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorList_getLast_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Swap(_other:IsceneNodeAnimatorList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.ISceneNodeAnimatorList_swap(Self._ptr, p0)
	End Method
	Method _assign(_other:IsceneNodeAnimatorList)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.ISceneNodeAnimatorList___assign__(Self._ptr, p0)
	End Method
	Method GetSize:Int()
		Local _ret:Int = .ISceneNodeAnimatorList_getSize(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .ISceneNodeAnimatorList_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Empty:Int()
		Local _ret:Int = .ISceneNodeAnimatorList_empty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Begin:Byte Ptr()
		Local _ret:Byte Ptr = .ISceneNodeAnimatorList_begin_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
End Type

Type Aabbox3df Extends _irrlicht_Object Abstract
	Method Reset(_x:Float, _y:Float, _z:Float)
		.aabbox3df_reset_OVERLOAD_0(Self._ptr, _x, _y, _z)
	End Method
	Method ResetWithInitValue(_initValue:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_initValue)
		.aabbox3df_reset_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method ResetWithVector3df(_initValue:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_initValue)
		.aabbox3df_reset_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method IsPointInside:Int(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .aabbox3df_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IntersectsWithBox:Int(_other:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3df_intersectsWithBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddInternalBox(_b:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		.aabbox3df_addInternalBox(Self._ptr, p0)
	End Method
	Method GetInterpolated:Aabbox3df(_other:Aabbox3df, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .aabbox3df_getInterpolated(Self._ptr, p0, _d)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Aabbox3df()
		Local _ret:Byte Ptr = .new_aabbox3df_OVERLOAD_0()
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMinMax:Aabbox3df(_min:Vector3df, _max:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_min)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_max)
		Local _ret:Byte Ptr = .new_aabbox3df_OVERLOAD_1(p0, p1)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithInit:Aabbox3df(_init:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_init)
		Local _ret:Byte Ptr = .new_aabbox3df_OVERLOAD_2(p0)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMinxMinyMinzMaxxMaxyMaxz:Aabbox3df(_minx:Float, _miny:Float, _minz:Float, _maxx:Float, _maxy:Float, _maxz:Float)
		Local _ret:Byte Ptr = .new_aabbox3df_OVERLOAD_3(_minx, _miny, _minz, _maxx, _maxy, _maxz)
		Local rval:Aabbox3df = Aabbox3df(New _Aabbox3df._withPtr(_ret)._withDel(delete_Aabbox3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Repair()
		.aabbox3df_repair(Self._ptr)
	End Method
	Method GetCenter:Vector3df()
		Local _ret:Byte Ptr = .aabbox3df_getCenter(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetEdges(_edges:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_edges)
		.aabbox3df_getEdges(Self._ptr, p0)
	End Method
	Method setMaxEdge(_MaxEdge:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MaxEdge)
		.aabbox3df_MaxEdge_set(Self._ptr, p0)
	End Method
	Method IntersectsWithLine:Int(_line:Line3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		Local _ret:Int = .aabbox3df_intersectsWithLine_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IntersectsWithLineWithLinemiddleLinevectHalflength:Int(_linemiddle:Vector3df, _linevect:Vector3df, _halflength:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linemiddle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linevect)
		Local _ret:Int = .aabbox3df_intersectsWithLine_OVERLOAD_1(Self._ptr, p0, p1, _halflength)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetExtent:Vector3df()
		Local _ret:Byte Ptr = .aabbox3df_getExtent(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddInternalPoint(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		.aabbox3df_addInternalPoint_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method AddInternalPointWithXYZ(_x:Float, _y:Float, _z:Float)
		.aabbox3df_addInternalPoint_OVERLOAD_1(Self._ptr, _x, _y, _z)
	End Method
	Method GetVolume:Float()
		Local _ret:Float = .aabbox3df_getVolume(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setMinEdge(_MinEdge:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MinEdge)
		.aabbox3df_MinEdge_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsEmpty:Int()
		Local _ret:Int = .aabbox3df_isEmpty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MaxEdge:Vector3df()
		Local _ret:Byte Ptr = .aabbox3df_MaxEdge_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClassifyPlaneRelation:Int(_plane:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_plane)
		Local _ret:Int = .aabbox3df_classifyPlaneRelation(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointTotalInside:Int(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .aabbox3df_isPointTotalInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Float()
		Local _ret:Float = .aabbox3df_getArea(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method MinEdge:Vector3df()
		Local _ret:Byte Ptr = .aabbox3df_MinEdge_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsFullInside:Int(_other:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3df_isFullInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Aabbox3di Extends _irrlicht_Object Abstract
	Method Reset(_x:Int, _y:Int, _z:Int)
		.aabbox3di_reset_OVERLOAD_0(Self._ptr, _x, _y, _z)
	End Method
	Method ResetWithInitValue(_initValue:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_initValue)
		.aabbox3di_reset_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method ResetWithVector3di(_initValue:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_initValue)
		.aabbox3di_reset_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method IsPointInside:Int(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .aabbox3di_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IntersectsWithBox:Int(_other:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3di_intersectsWithBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method AddInternalBox(_b:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		.aabbox3di_addInternalBox(Self._ptr, p0)
	End Method
	Method GetInterpolated:Aabbox3di(_other:Aabbox3di, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .aabbox3di_getInterpolated(Self._ptr, p0, _d)
		Local rval:Aabbox3di = Aabbox3di(New _Aabbox3di._withPtr(_ret)._withDel(delete_Aabbox3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Aabbox3di()
		Local _ret:Byte Ptr = .new_aabbox3di_OVERLOAD_0()
		Local rval:Aabbox3di = Aabbox3di(New _Aabbox3di._withPtr(_ret)._withDel(delete_Aabbox3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMinMax:Aabbox3di(_min:Vector3di, _max:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_min)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_max)
		Local _ret:Byte Ptr = .new_aabbox3di_OVERLOAD_1(p0, p1)
		Local rval:Aabbox3di = Aabbox3di(New _Aabbox3di._withPtr(_ret)._withDel(delete_Aabbox3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithInit:Aabbox3di(_init:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_init)
		Local _ret:Byte Ptr = .new_aabbox3di_OVERLOAD_2(p0)
		Local rval:Aabbox3di = Aabbox3di(New _Aabbox3di._withPtr(_ret)._withDel(delete_Aabbox3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMinxMinyMinzMaxxMaxyMaxz:Aabbox3di(_minx:Int, _miny:Int, _minz:Int, _maxx:Int, _maxy:Int, _maxz:Int)
		Local _ret:Byte Ptr = .new_aabbox3di_OVERLOAD_3(_minx, _miny, _minz, _maxx, _maxy, _maxz)
		Local rval:Aabbox3di = Aabbox3di(New _Aabbox3di._withPtr(_ret)._withDel(delete_Aabbox3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Repair()
		.aabbox3di_repair(Self._ptr)
	End Method
	Method GetCenter:Vector3di()
		Local _ret:Byte Ptr = .aabbox3di_getCenter(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetEdges(_edges:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_edges)
		.aabbox3di_getEdges(Self._ptr, p0)
	End Method
	Method setMaxEdge(_MaxEdge:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MaxEdge)
		.aabbox3di_MaxEdge_set(Self._ptr, p0)
	End Method
	Method IntersectsWithLine:Int(_line:Line3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		Local _ret:Int = .aabbox3di_intersectsWithLine_OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IntersectsWithLineWithLinemiddleLinevectHalflength:Int(_linemiddle:Vector3di, _linevect:Vector3di, _halflength:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linemiddle)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linevect)
		Local _ret:Int = .aabbox3di_intersectsWithLine_OVERLOAD_1(Self._ptr, p0, p1, _halflength)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetExtent:Vector3di()
		Local _ret:Byte Ptr = .aabbox3di_getExtent(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddInternalPoint(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		.aabbox3di_addInternalPoint_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method AddInternalPointWithXYZ(_x:Int, _y:Int, _z:Int)
		.aabbox3di_addInternalPoint_OVERLOAD_1(Self._ptr, _x, _y, _z)
	End Method
	Method GetVolume:Int()
		Local _ret:Int = .aabbox3di_getVolume(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setMinEdge(_MinEdge:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MinEdge)
		.aabbox3di_MinEdge_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsEmpty:Int()
		Local _ret:Int = .aabbox3di_isEmpty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MaxEdge:Vector3di()
		Local _ret:Byte Ptr = .aabbox3di_MaxEdge_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClassifyPlaneRelation:Int(_plane:Plane3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_plane)
		Local _ret:Int = .aabbox3di_classifyPlaneRelation(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointTotalInside:Int(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .aabbox3di_isPointTotalInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Int()
		Local _ret:Int = .aabbox3di_getArea(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MinEdge:Vector3di()
		Local _ret:Byte Ptr = .aabbox3di_MinEdge_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsFullInside:Int(_other:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .aabbox3di_isFullInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Dimension2df Extends _irrlicht_Object Abstract
	Method setHeight(_Height:Float)
		.dimension2df_Height_set(Self._ptr, _Height)
	End Method
	Method GetOptimalSize:Dimension2df(_requirePowerOfTwo:Int = -2147483648, _requireSquare:Int = -2147483648, _larger:Int = -2147483648, _maxValue:Int = -2147483648)
		Local _ret:Byte Ptr
		If _requirePowerOfTwo = -2147483648
			_ret = .dimension2df_getOptimalSize_OVERLOAD_4(Self._ptr)
		ElseIf _requireSquare = -2147483648
			_ret = .dimension2df_getOptimalSize_OVERLOAD_3(Self._ptr, _requirePowerOfTwo)
		ElseIf _larger = -2147483648
			_ret = .dimension2df_getOptimalSize_OVERLOAD_2(Self._ptr, _requirePowerOfTwo, _requireSquare)
		ElseIf _maxValue = -2147483648
			_ret = .dimension2df_getOptimalSize_OVERLOAD_1(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger)
		Else
			_ret = .dimension2df_getOptimalSize_OVERLOAD_0(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger, _maxValue)
		EndIf
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInterpolated:Dimension2df(_other:Dimension2df, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2df_getInterpolated(Self._ptr, p0, _d)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Dimension2df()
		Local _ret:Byte Ptr = .new_dimension2df_OVERLOAD_0()
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithWidthHeight:Dimension2df(_width:Float Ptr, _height:Float Ptr)
		Local _ret:Byte Ptr = .new_dimension2df_OVERLOAD_1(_width, _height)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Dimension2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_dimension2df_OVERLOAD_2(p0)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Eq:Int(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2df___eq___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqWithOther:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2df___eq___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MulAssign:Dimension2df(_scale:Float Ptr)
		Local _ret:Byte Ptr = .dimension2df___mul_assign__(Self._ptr, _scale)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssign:Dimension2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2df___sub_assign__(Self._ptr, p0)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Mul:Dimension2df(_scale:Float Ptr)
		Local _ret:Byte Ptr = .dimension2df___mul__(Self._ptr, _scale)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Width:Float()
		Local _ret:Float = .dimension2df_Width_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Sub:Dimension2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2df___sub__(Self._ptr, p0)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Div:Dimension2df(_scale:Float Ptr)
		Local _ret:Byte Ptr = .dimension2df___div__(Self._ptr, _scale)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Dimension2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2df___add_assign__(Self._ptr, p0)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Dimension2df(_width:Float Ptr, _height:Float Ptr)
		Local _ret:Byte Ptr = .dimension2df_set(Self._ptr, _width, _height)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Height:Float()
		Local _ret:Float = .dimension2df_Height_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setWidth(_Width:Float)
		.dimension2df_Width_set(Self._ptr, _Width)
	End Method
	Method DivAssign:Dimension2df(_scale:Float Ptr)
		Local _ret:Byte Ptr = .dimension2df___div_assign__(Self._ptr, _scale)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2df___ne___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEqWithOther:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2df___ne___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Float()
		Local _ret:Float = .dimension2df_getArea(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Add:Dimension2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2df___add__(Self._ptr, p0)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Dimension2du Extends _irrlicht_Object Abstract
	Method setHeight(_Height:Int)
		.dimension2du_Height_set(Self._ptr, _Height)
	End Method
	Method GetOptimalSize:Dimension2du(_requirePowerOfTwo:Int = -2147483648, _requireSquare:Int = -2147483648, _larger:Int = -2147483648, _maxValue:Int = -2147483648)
		Local _ret:Byte Ptr
		If _requirePowerOfTwo = -2147483648
			_ret = .dimension2du_getOptimalSize_OVERLOAD_4(Self._ptr)
		ElseIf _requireSquare = -2147483648
			_ret = .dimension2du_getOptimalSize_OVERLOAD_3(Self._ptr, _requirePowerOfTwo)
		ElseIf _larger = -2147483648
			_ret = .dimension2du_getOptimalSize_OVERLOAD_2(Self._ptr, _requirePowerOfTwo, _requireSquare)
		ElseIf _maxValue = -2147483648
			_ret = .dimension2du_getOptimalSize_OVERLOAD_1(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger)
		Else
			_ret = .dimension2du_getOptimalSize_OVERLOAD_0(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger, _maxValue)
		EndIf
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInterpolated:Dimension2du(_other:Dimension2du, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2du_getInterpolated(Self._ptr, p0, _d)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Dimension2du()
		Local _ret:Byte Ptr = .new_dimension2du_OVERLOAD_0()
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithWidthHeight:Dimension2du(_width:Int Ptr, _height:Int Ptr)
		Local _ret:Byte Ptr = .new_dimension2du_OVERLOAD_1(_width, _height)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Dimension2du(_other:Byte Ptr)
		Local _ret:Byte Ptr = .new_dimension2du_OVERLOAD_2(_other)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Eq:Int(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2du___eq___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqWithOther:Int(_other:Byte Ptr)
		Local _ret:Int = .dimension2du___eq___OVERLOAD_1(Self._ptr, _other)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MulAssign:Dimension2du(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2du___mul_assign__(Self._ptr, _scale)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssign:Dimension2du(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2du___sub_assign__(Self._ptr, p0)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Mul:Dimension2du(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2du___mul__(Self._ptr, _scale)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Width:Int()
		Local _ret:Int = .dimension2du_Width_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Dimension2du(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2du___sub__(Self._ptr, p0)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Div:Dimension2du(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2du___div__(Self._ptr, _scale)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Dimension2du(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2du___add_assign__(Self._ptr, p0)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Dimension2du(_width:Int Ptr, _height:Int Ptr)
		Local _ret:Byte Ptr = .dimension2du_set(Self._ptr, _width, _height)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Height:Int()
		Local _ret:Int = .dimension2du_Height_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setWidth(_Width:Int)
		.dimension2du_Width_set(Self._ptr, _Width)
	End Method
	Method DivAssign:Dimension2du(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2du___div_assign__(Self._ptr, _scale)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2du___ne___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEqWithOther:Int(_other:Byte Ptr)
		Local _ret:Int = .dimension2du___ne___OVERLOAD_1(Self._ptr, _other)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Int()
		Local _ret:Int = .dimension2du_getArea(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Add:Dimension2du(_other:Dimension2du)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2du___add__(Self._ptr, p0)
		Local rval:Dimension2du = Dimension2du(New _Dimension2du._withPtr(_ret)._withDel(delete_Dimension2du))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Dimension2di Extends _irrlicht_Object Abstract
	Method setHeight(_Height:Int)
		.dimension2di_Height_set(Self._ptr, _Height)
	End Method
	Method GetOptimalSize:Dimension2di(_requirePowerOfTwo:Int = -2147483648, _requireSquare:Int = -2147483648, _larger:Int = -2147483648, _maxValue:Int = -2147483648)
		Local _ret:Byte Ptr
		If _requirePowerOfTwo = -2147483648
			_ret = .dimension2di_getOptimalSize_OVERLOAD_4(Self._ptr)
		ElseIf _requireSquare = -2147483648
			_ret = .dimension2di_getOptimalSize_OVERLOAD_3(Self._ptr, _requirePowerOfTwo)
		ElseIf _larger = -2147483648
			_ret = .dimension2di_getOptimalSize_OVERLOAD_2(Self._ptr, _requirePowerOfTwo, _requireSquare)
		ElseIf _maxValue = -2147483648
			_ret = .dimension2di_getOptimalSize_OVERLOAD_1(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger)
		Else
			_ret = .dimension2di_getOptimalSize_OVERLOAD_0(Self._ptr, _requirePowerOfTwo, _requireSquare, _larger, _maxValue)
		EndIf
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInterpolated:Dimension2di(_other:Dimension2di, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2di_getInterpolated(Self._ptr, p0, _d)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Dimension2di()
		Local _ret:Byte Ptr = .new_dimension2di_OVERLOAD_0()
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithWidthHeight:Dimension2di(_width:Int Ptr, _height:Int Ptr)
		Local _ret:Byte Ptr = .new_dimension2di_OVERLOAD_1(_width, _height)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Dimension2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_dimension2di_OVERLOAD_2(p0)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Eq:Int(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2di___eq___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqWithOther:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2di___eq___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MulAssign:Dimension2di(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2di___mul_assign__(Self._ptr, _scale)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssign:Dimension2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2di___sub_assign__(Self._ptr, p0)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Mul:Dimension2di(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2di___mul__(Self._ptr, _scale)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Width:Int()
		Local _ret:Int = .dimension2di_Width_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Dimension2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2di___sub__(Self._ptr, p0)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Div:Dimension2di(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2di___div__(Self._ptr, _scale)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Dimension2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2di___add_assign__(Self._ptr, p0)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Dimension2di(_width:Int Ptr, _height:Int Ptr)
		Local _ret:Byte Ptr = .dimension2di_set(Self._ptr, _width, _height)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Height:Int()
		Local _ret:Int = .dimension2di_Height_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setWidth(_Width:Int)
		.dimension2di_Width_set(Self._ptr, _Width)
	End Method
	Method DivAssign:Dimension2di(_scale:Int Ptr)
		Local _ret:Byte Ptr = .dimension2di___div_assign__(Self._ptr, _scale)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2di___ne___OVERLOAD_0(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEqWithOther:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .dimension2di___ne___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Int()
		Local _ret:Int = .dimension2di_getArea(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Add:Dimension2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .dimension2di___add__(Self._ptr, p0)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Line2df Extends _irrlicht_Object Abstract
	Method IsPointBetweenStartAndEnd:Int(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line2df_isPointBetweenStartAndEnd(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Start:Vector2df()
		Local _ret:Byte Ptr = .line2df_start_get(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IntersectWith:Int(_l:Line2df, _out:Vector2df, _checkOnlySegments:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_l)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local _ret:Int
		If _checkOnlySegments = -2147483648
			_ret = .line2df_intersectWith_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .line2df_intersectWith_OVERLOAD_0(Self._ptr, p0, p1, _checkOnlySegments)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method _end:Vector2df()
		Local _ret:Byte Ptr = .line2df_end_get(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMiddle:Vector2df()
		Local _ret:Byte Ptr = .line2df_getMiddle(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetUnitVector:Vector2df()
		Local _ret:Byte Ptr = .line2df_getUnitVector(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Line2df()
		Local _ret:Byte Ptr = .new_line2df_OVERLOAD_0()
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXaYaXbYb:Line2df(_xa:Float, _ya:Float, _xb:Float, _yb:Float)
		Local _ret:Byte Ptr = .new_line2df_OVERLOAD_1(_xa, _ya, _xb, _yb)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStartEnd:Line2df(_start:Vector2df, _end:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Byte Ptr = .new_line2df_OVERLOAD_2(p0, p1)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Line2df(_other:Line2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_line2df_OVERLOAD_3(p0)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method GetAngleWith:Double(_l:Line2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_l)
		Local _ret:Double = .line2df_getAngleWith(Self._ptr, p0)
		Local rval:Double = _ret ; Return rval
	End Method
	Method SubAssign:Line2df(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2df___sub_assign__(Self._ptr, p0)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Float()
		Local _ret:Float = .line2df_getLengthSQ(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Sub:Line2df(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2df___sub__(Self._ptr, p0)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPointOrientation:Float(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Float = .line2df_getPointOrientation(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetVector:Vector2df()
		Local _ret:Byte Ptr = .line2df_getVector(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Line2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line2df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLine(_xa:Float Ptr, _ya:Float Ptr, _xb:Float Ptr, _yb:Float Ptr)
		.line2df_setLine_OVERLOAD_0(Self._ptr, _xa, _ya, _xb, _yb)
	End Method
	Method SetLineWithNstartNend(_nstart:Vector2df, _nend:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nstart)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nend)
		.line2df_setLine_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetLineWithLine(_line:Line2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		.line2df_setLine_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method GetLength:Float()
		Local _ret:Float = .line2df_getLength(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Line2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line2df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method set_end(_end:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_end)
		.line2df_end_set(Self._ptr, p0)
	End Method
	Method setStart(_start:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		.line2df_start_set(Self._ptr, p0)
	End Method
	Method AddAssign:Line2df(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2df___add_assign__(Self._ptr, p0)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetClosestPoint:Vector2df(_point:Vector2df, _checkOnlySegments:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr
		If _checkOnlySegments = -2147483648
			_ret = .line2df_getClosestPoint_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .line2df_getClosestPoint_OVERLOAD_0(Self._ptr, p0, _checkOnlySegments)
		EndIf
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsPointOnLine:Int(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line2df_isPointOnLine(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Add:Line2df(_point:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2df___add__(Self._ptr, p0)
		Local rval:Line2df = Line2df(New _Line2df._withPtr(_ret)._withDel(delete_Line2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Line2di Extends _irrlicht_Object Abstract
	Method IsPointBetweenStartAndEnd:Int(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line2di_isPointBetweenStartAndEnd(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Start:Vector2di()
		Local _ret:Byte Ptr = .line2di_start_get(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IntersectWith:Int(_l:Line2di, _out:Vector2di, _checkOnlySegments:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_l)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local _ret:Int
		If _checkOnlySegments = -2147483648
			_ret = .line2di_intersectWith_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .line2di_intersectWith_OVERLOAD_0(Self._ptr, p0, p1, _checkOnlySegments)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method _end:Vector2di()
		Local _ret:Byte Ptr = .line2di_end_get(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetMiddle:Vector2di()
		Local _ret:Byte Ptr = .line2di_getMiddle(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetUnitVector:Vector2di()
		Local _ret:Byte Ptr = .line2di_getUnitVector(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Line2di()
		Local _ret:Byte Ptr = .new_line2di_OVERLOAD_0()
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXaYaXbYb:Line2di(_xa:Int, _ya:Int, _xb:Int, _yb:Int)
		Local _ret:Byte Ptr = .new_line2di_OVERLOAD_1(_xa, _ya, _xb, _yb)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStartEnd:Line2di(_start:Vector2di, _end:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Byte Ptr = .new_line2di_OVERLOAD_2(p0, p1)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Line2di(_other:Line2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_line2di_OVERLOAD_3(p0)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method GetAngleWith:Double(_l:Line2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_l)
		Local _ret:Double = .line2di_getAngleWith(Self._ptr, p0)
		Local rval:Double = _ret ; Return rval
	End Method
	Method SubAssign:Line2di(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2di___sub_assign__(Self._ptr, p0)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Int()
		Local _ret:Int = .line2di_getLengthSQ(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Line2di(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2di___sub__(Self._ptr, p0)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetPointOrientation:Int(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line2di_getPointOrientation(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetVector:Vector2di()
		Local _ret:Byte Ptr = .line2di_getVector(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Line2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line2di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetLine(_xa:Int Ptr, _ya:Int Ptr, _xb:Int Ptr, _yb:Int Ptr)
		.line2di_setLine_OVERLOAD_0(Self._ptr, _xa, _ya, _xb, _yb)
	End Method
	Method SetLineWithNstartNend(_nstart:Vector2di, _nend:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nstart)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nend)
		.line2di_setLine_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetLineWithLine(_line:Line2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		.line2di_setLine_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method GetLength:Int()
		Local _ret:Int = .line2di_getLength(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Line2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line2di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method set_end(_end:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_end)
		.line2di_end_set(Self._ptr, p0)
	End Method
	Method setStart(_start:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		.line2di_start_set(Self._ptr, p0)
	End Method
	Method AddAssign:Line2di(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2di___add_assign__(Self._ptr, p0)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetClosestPoint:Vector2di(_point:Vector2di, _checkOnlySegments:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr
		If _checkOnlySegments = -2147483648
			_ret = .line2di_getClosestPoint_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .line2di_getClosestPoint_OVERLOAD_0(Self._ptr, p0, _checkOnlySegments)
		EndIf
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsPointOnLine:Int(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line2di_isPointOnLine(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Add:Line2di(_point:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line2di___add__(Self._ptr, p0)
		Local rval:Line2di = Line2di(New _Line2di._withPtr(_ret)._withDel(delete_Line2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Line3df Extends _irrlicht_Object Abstract
	Method IsPointBetweenStartAndEnd:Int(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line3df_isPointBetweenStartAndEnd(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMiddle:Vector3df()
		Local _ret:Byte Ptr = .line3df_getMiddle(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetClosestPoint:Vector3df(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3df_getClosestPoint(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Line3df()
		Local _ret:Byte Ptr = .new_line3df_OVERLOAD_0()
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXaYaZaXbYbZb:Line3df(_xa:Float, _ya:Float, _za:Float, _xb:Float, _yb:Float, _zb:Float)
		Local _ret:Byte Ptr = .new_line3df_OVERLOAD_1(_xa, _ya, _za, _xb, _yb, _zb)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStartEnd:Line3df(_start:Vector3df, _end:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Byte Ptr = .new_line3df_OVERLOAD_2(p0, p1)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Eq:Int(_other:Line3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line3df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SubAssign:Line3df(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3df___sub_assign__(Self._ptr, p0)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Float()
		Local _ret:Float = .line3df_getLengthSQ(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Sub:Line3df(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3df___sub__(Self._ptr, p0)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Line3df(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3df___add__(Self._ptr, p0)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret)._withDel(delete_Line3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVector:Vector3df()
		Local _ret:Byte Ptr = .line3df_getVector(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setStart(_start:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		.line3df_start_set(Self._ptr, p0)
	End Method
	Method SetLine(_xa:Float Ptr, _ya:Float Ptr, _za:Float Ptr, _xb:Float Ptr, _yb:Float Ptr, _zb:Float Ptr)
		.line3df_setLine_OVERLOAD_0(Self._ptr, _xa, _ya, _za, _xb, _yb, _zb)
	End Method
	Method SetLineWithNstartNend(_nstart:Vector3df, _nend:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nstart)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nend)
		.line3df_setLine_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetLineWithLine(_line:Line3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		.line3df_setLine_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method GetLength:Float()
		Local _ret:Float = .line3df_getLength(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Line3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line3df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method set_end(_end:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_end)
		.line3df_end_set(Self._ptr, p0)
	End Method
	Method _end:Vector3df()
		Local _ret:Byte Ptr = .line3df_end_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Line3df(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3df___add_assign__(Self._ptr, p0)
		Local rval:Line3df = Line3df(New _Line3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Start:Vector3df()
		Local _ret:Byte Ptr = .line3df_start_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetIntersectionWithSphere:Int(_sorigin:Vector3df, _sradius:Float, _outdistance:Byte Ptr)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_sorigin)
		Local _ret:Int = .line3df_getIntersectionWithSphere(Self._ptr, p0, _sradius, _outdistance)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Line3di Extends _irrlicht_Object Abstract
	Method IsPointBetweenStartAndEnd:Int(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .line3di_isPointBetweenStartAndEnd(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetMiddle:Vector3di()
		Local _ret:Byte Ptr = .line3di_getMiddle(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetClosestPoint:Vector3di(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3di_getClosestPoint(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Line3di()
		Local _ret:Byte Ptr = .new_line3di_OVERLOAD_0()
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret)._withDel(delete_Line3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXaYaZaXbYbZb:Line3di(_xa:Int, _ya:Int, _za:Int, _xb:Int, _yb:Int, _zb:Int)
		Local _ret:Byte Ptr = .new_line3di_OVERLOAD_1(_xa, _ya, _za, _xb, _yb, _zb)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret)._withDel(delete_Line3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithStartEnd:Line3di(_start:Vector3di, _end:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Byte Ptr = .new_line3di_OVERLOAD_2(p0, p1)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret)._withDel(delete_Line3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Eq:Int(_other:Line3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line3di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SubAssign:Line3di(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3di___sub_assign__(Self._ptr, p0)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Int()
		Local _ret:Int = .line3di_getLengthSQ(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Line3di(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3di___sub__(Self._ptr, p0)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret)._withDel(delete_Line3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Line3di(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3di___add__(Self._ptr, p0)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret)._withDel(delete_Line3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetVector:Vector3di()
		Local _ret:Byte Ptr = .line3di_getVector(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setStart(_start:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_start)
		.line3di_start_set(Self._ptr, p0)
	End Method
	Method SetLine(_xa:Int Ptr, _ya:Int Ptr, _za:Int Ptr, _xb:Int Ptr, _yb:Int Ptr, _zb:Int Ptr)
		.line3di_setLine_OVERLOAD_0(Self._ptr, _xa, _ya, _za, _xb, _yb, _zb)
	End Method
	Method SetLineWithNstartNend(_nstart:Vector3di, _nend:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nstart)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nend)
		.line3di_setLine_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetLineWithLine(_line:Line3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		.line3di_setLine_OVERLOAD_2(Self._ptr, p0)
	End Method
	Method GetLength:Int()
		Local _ret:Int = .line3di_getLength(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Line3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .line3di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method set_end(_end:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_end)
		.line3di_end_set(Self._ptr, p0)
	End Method
	Method _end:Vector3di()
		Local _ret:Byte Ptr = .line3di_end_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Line3di(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Byte Ptr = .line3di___add_assign__(Self._ptr, p0)
		Local rval:Line3di = Line3di(New _Line3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Start:Vector3di()
		Local _ret:Byte Ptr = .line3di_start_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetIntersectionWithSphere:Int(_sorigin:Vector3di, _sradius:Int, _outdistance:Byte Ptr)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_sorigin)
		Local _ret:Int = .line3di_getIntersectionWithSphere(Self._ptr, p0, _sradius, _outdistance)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Matrix4 Extends _irrlicht_Object Abstract
	Method MultiplyWith1x4Matrix(_matrix:Byte Ptr)
		.matrix4_multiplyWith1x4Matrix(Self._ptr, _matrix)
	End Method
	Method BuildNdctoDcmatrix:Matrix4(_area:Recti, _zScale:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_area)
		Local _ret:Byte Ptr = .matrix4_buildNDCToDCMatrix(Self._ptr, p0, _zScale)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .matrix4___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method TransformBoxEx(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		.matrix4_transformBoxEx(Self._ptr, p0)
	End Method
	Method Pointer:Byte Ptr()
		Local _ret:Byte Ptr = .matrix4_pointer_OVERLOAD_0(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SetRotationRadians:Matrix4(_rotation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local _ret:Byte Ptr = .matrix4_setRotationRadians(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetInverseRotationRadians:Matrix4(_rotation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local _ret:Byte Ptr = .matrix4_setInverseRotationRadians(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetTextureTranslateTransposed:Matrix4(_x:Float, _y:Float)
		Local _ret:Byte Ptr = .matrix4_setTextureTranslateTransposed(Self._ptr, _x, _y)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildProjectionMatrixOrthoRh:Matrix4(_widthOfViewVolume:Float, _heightOfViewVolume:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixOrthoRH(Self._ptr, _widthOfViewVolume, _heightOfViewVolume, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Equals:Int(_other:Matrix4, _tolerance:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .matrix4_equals_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .matrix4_equals_OVERLOAD_0(Self._ptr, p0, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetScale:Vector3df()
		Local _ret:Byte Ptr = .matrix4_getScale(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildTextureTransform:Matrix4(_rotateRad:Float, _rotatecenter:Vector2df, _translate:Vector2df, _scale:Vector2df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_rotatecenter)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_translate)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr = .matrix4_buildTextureTransform(Self._ptr, _rotateRad, p1, p2, p3)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetInverseRotationDegrees:Matrix4(_rotation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local _ret:Byte Ptr = .matrix4_setInverseRotationDegrees(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .matrix4___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BuildAxisAlignedBillboard(_camPos:Vector3df, _center:Vector3df, _translation:Vector3df, _axis:Vector3df, _from:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_camPos)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_axis)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_from)
		.matrix4_buildAxisAlignedBillboard(Self._ptr, p0, p1, p2, p3, p4)
	End Method
	Method SetTranslation:Matrix4(_translation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		Local _ret:Byte Ptr = .matrix4_setTranslation(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildCameraLookAtMatrixLh:Matrix4(_position:Vector3df, _target:Vector3df, _upVector:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_upVector)
		Local _ret:Byte Ptr = .matrix4_buildCameraLookAtMatrixLH(Self._ptr, p0, p1, p2)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDefinitelyIdentityMatrix:Int()
		Local _ret:Int = .matrix4_getDefinitelyIdentityMatrix(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetTextureScaleCenter:Matrix4(_sx:Float, _sy:Float)
		Local _ret:Byte Ptr = .matrix4_setTextureScaleCenter(Self._ptr, _sx, _sy)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildProjectionMatrixOrthoLh:Matrix4(_widthOfViewVolume:Float, _heightOfViewVolume:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixOrthoLH(Self._ptr, _widthOfViewVolume, _heightOfViewVolume, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Interpolate:Matrix4(_b:Matrix4, _time:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Byte Ptr = .matrix4_interpolate(Self._ptr, p0, _time)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTranslation:Vector3df()
		Local _ret:Byte Ptr = .matrix4_getTranslation(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method InverseRotateVect(_vect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vect)
		.matrix4_inverseRotateVect(Self._ptr, p0)
	End Method
	Method BuildCameraLookAtMatrixRh:Matrix4(_position:Vector3df, _target:Vector3df, _upVector:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_position)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_target)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_upVector)
		Local _ret:Byte Ptr = .matrix4_buildCameraLookAtMatrixRH(Self._ptr, p0, p1, p2)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Mul:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithScalar:Matrix4(_scalar:Float Ptr)
		Local _ret:Byte Ptr = .matrix4___mul___OVERLOAD_1(Self._ptr, _scalar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildProjectionMatrixPerspectiveFovInfinityLh:Matrix4(_fieldOfViewRadians:Float, _aspectRatio:Float, _zNear:Float, _epsilon:Float = -1e100000)
		Local _ret:Byte Ptr
		If _epsilon = -1e100000
			_ret = .matrix4_buildProjectionMatrixPerspectiveFovInfinityLH_OVERLOAD_1(Self._ptr, _fieldOfViewRadians, _aspectRatio, _zNear)
		Else
			_ret = .matrix4_buildProjectionMatrixPerspectiveFovInfinityLH_OVERLOAD_0(Self._ptr, _fieldOfViewRadians, _aspectRatio, _zNear, _epsilon)
		EndIf
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assignWithScalar:Matrix4(_scalar:Float Ptr)
		Local _ret:Byte Ptr = .matrix4___assign___OVERLOAD_1(Self._ptr, _scalar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildProjectionMatrixPerspectiveFovRh:Matrix4(_fieldOfViewRadians:Float, _aspectRatio:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixPerspectiveFovRH(Self._ptr, _fieldOfViewRadians, _aspectRatio, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TransformVec3(_out:Byte Ptr, _in:Byte Ptr)
		.matrix4_transformVec3(Self._ptr, _out, _in)
	End Method
	Method SetM:Matrix4(_data:Byte Ptr)
		Local _ret:Byte Ptr = .matrix4_setM(Self._ptr, _data)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTransposed:Matrix4()
		Local _ret:Byte Ptr = .matrix4_getTransposed_OVERLOAD_0(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetTransposedWithDest(_dest:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		.matrix4_getTransposed_OVERLOAD_1(Self._ptr, p0)
	End Method
	Method Call:Byte Ptr(_row:Int, _col:Int)
		Local _ret:Byte Ptr = .matrix4___funcall___OVERLOAD_0(Self._ptr, _row, _col)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method Setbyproduct:Matrix4(_other_a:Matrix4, _other_b:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_other_b)
		Local _ret:Byte Ptr = .matrix4_setbyproduct(Self._ptr, p0, p1)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildShadowMatrix:Matrix4(_light:Vector3df, _plane:Plane3df, _point:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_light)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_plane)
		Local _ret:Byte Ptr
		If _point = -1e100000
			_ret = .matrix4_buildShadowMatrix_OVERLOAD_1(Self._ptr, p0, p1)
		Else
			_ret = .matrix4_buildShadowMatrix_OVERLOAD_0(Self._ptr, p0, p1, _point)
		EndIf
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TransformPlane(_plane:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_plane)
		.matrix4_transformPlane_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method TransformPlaneWithInOut(_in:Plane3df, _out:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_in)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_out)
		.matrix4_transformPlane_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method SetTextureScale:Matrix4(_sx:Float, _sy:Float)
		Local _ret:Byte Ptr = .matrix4_setTextureScale(Self._ptr, _sx, _sy)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___add_assign__(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetInverseTranslation:Matrix4(_translation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_translation)
		Local _ret:Byte Ptr = .matrix4_setInverseTranslation(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildRotateFromTo:Matrix4(_from:Vector3df, _to:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_from)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_to)
		Local _ret:Byte Ptr = .matrix4_buildRotateFromTo(Self._ptr, p0, p1)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInverse:Int(_out:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local _ret:Int = .matrix4_getInverse(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method MakeInverse:Int()
		Local _ret:Int = .matrix4_makeInverse(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetRotationDegrees:Vector3df()
		Local _ret:Byte Ptr = .matrix4_getRotationDegrees(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___mul_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithScalar:Matrix4(_scalar:Float Ptr)
		Local _ret:Byte Ptr = .matrix4___mul_assign___OVERLOAD_1(Self._ptr, _scalar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetScale:Matrix4(_scale:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_scale)
		Local _ret:Byte Ptr = .matrix4_setScale_OVERLOAD_0(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetScaleWithScale:Matrix4(_scale:Float)
		Local _ret:Byte Ptr = .matrix4_setScale_OVERLOAD_1(Self._ptr, _scale)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetRotationDegrees:Matrix4(_rotation:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_rotation)
		Local _ret:Byte Ptr = .matrix4_setRotationDegrees(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function MakeWith:Matrix4(_constructor:Int = -2147483648)
		Local _ret:Byte Ptr
		If _constructor = -2147483648
			_ret = .new_matrix4_OVERLOAD_1()
		Else
			_ret = .new_matrix4_OVERLOAD_0(_constructor)
		EndIf
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Matrix4(_other:Matrix4, _constructor:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr
		If _constructor = -2147483648
			_ret = .new_matrix4_OVERLOAD_3(p0)
		Else
			_ret = .new_matrix4_OVERLOAD_2(p0, _constructor)
		EndIf
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method BuildProjectionMatrixPerspectiveFovLh:Matrix4(_fieldOfViewRadians:Float, _aspectRatio:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixPerspectiveFovLH(Self._ptr, _fieldOfViewRadians, _aspectRatio, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___add__(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ARef:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .matrix4___aref___OVERLOAD_0(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method InverseTranslateVect(_vect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vect)
		.matrix4_inverseTranslateVect(Self._ptr, p0)
	End Method
	Method IsIdentity:Int()
		Local _ret:Int = .matrix4_isIdentity(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetRotationCenter(_center:Vector3df, _translate:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_translate)
		.matrix4_setRotationCenter(Self._ptr, p0, p1)
	End Method
	Method TransformVect(_vect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vect)
		.matrix4_transformVect_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method TransformVectWithOutIn(_out:Vector3df, _in:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_in)
		.matrix4_transformVect_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method TransformVectWithByte_PtrVector3df(_out:Byte Ptr, _in:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_in)
		.matrix4_transformVect_OVERLOAD_2(Self._ptr, _out, p1)
	End Method
	Method SubAssign:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___sub_assign__(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Sub:Matrix4(_other:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .matrix4___sub__(Self._ptr, p0)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret)._withDel(delete_Matrix4))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MakeIdentity:Matrix4()
		Local _ret:Byte Ptr = .matrix4_makeIdentity(Self._ptr)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetbyproductNocheck:Matrix4(_other_a:Matrix4, _other_b:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_other_b)
		Local _ret:Byte Ptr = .matrix4_setbyproduct_nocheck(Self._ptr, p0, p1)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetRotationAxisRadians:Matrix4(_angle:Float Ptr, _axis:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_axis)
		Local _ret:Byte Ptr = .matrix4_setRotationAxisRadians(Self._ptr, _angle, p1)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TransformBox(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		.matrix4_transformBox(Self._ptr, p0)
	End Method
	Method IsOrthogonal:Int()
		Local _ret:Int = .matrix4_isOrthogonal(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method BuildProjectionMatrixPerspectiveRh:Matrix4(_widthOfViewVolume:Float, _heightOfViewVolume:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixPerspectiveRH(Self._ptr, _widthOfViewVolume, _heightOfViewVolume, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotateVect(_vect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vect)
		.matrix4_rotateVect_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method RotateVectWithOutIn(_out:Vector3df, _in:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_in)
		.matrix4_rotateVect_OVERLOAD_1(Self._ptr, p0, p1)
	End Method
	Method RotateVectWithByte_PtrVector3df(_out:Byte Ptr, _in:Vector3df)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_in)
		.matrix4_rotateVect_OVERLOAD_2(Self._ptr, _out, p1)
	End Method
	Method SetTextureTranslate:Matrix4(_x:Float, _y:Float)
		Local _ret:Byte Ptr = .matrix4_setTextureTranslate(Self._ptr, _x, _y)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method BuildProjectionMatrixPerspectiveLh:Matrix4(_widthOfViewVolume:Float, _heightOfViewVolume:Float, _zNear:Float, _zFar:Float)
		Local _ret:Byte Ptr = .matrix4_buildProjectionMatrixPerspectiveLH(Self._ptr, _widthOfViewVolume, _heightOfViewVolume, _zNear, _zFar)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method TranslateVect(_vect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_vect)
		.matrix4_translateVect(Self._ptr, p0)
	End Method
	Method SetTextureRotationCenter:Matrix4(_radAngle:Float)
		Local _ret:Byte Ptr = .matrix4_setTextureRotationCenter(Self._ptr, _radAngle)
		Local rval:Matrix4 = Matrix4(New _Matrix4._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsIdentityIntegerBase:Int()
		Local _ret:Int = .matrix4_isIdentity_integer_base(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInversePrimitive:Int(_out:Matrix4)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_out)
		Local _ret:Int = .matrix4_getInversePrimitive(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetDefinitelyIdentityMatrix(_isDefinitelyIdentityMatrix:Int)
		.matrix4_setDefinitelyIdentityMatrix(Self._ptr, _isDefinitelyIdentityMatrix)
	End Method
End Type

Type Path Extends _irrlicht_Object Abstract
	Method LowerIgnoreCase:Int(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path_lower_ignore_case(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Empty:Int()
		Local _ret:Int = .path_empty(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LastChar:Byte()
		Local _ret:Byte = .path_lastChar(Self._ptr)
		Local rval:Byte = _ret ; Return rval
	End Method
	Method Append:Path(_character:Byte)
		Local _ret:Byte Ptr = .path_append_OVERLOAD_0(Self._ptr, _character)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AppendWithOther:Path(_other:Byte Ptr, _length:Int = -2147483648)
		Local _ret:Byte Ptr
		If _length = -2147483648
			_ret = .path_append_OVERLOAD_2(Self._ptr, _other)
		Else
			_ret = .path_append_OVERLOAD_1(Self._ptr, _other, _length)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AppendWithPath:Path(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .path_append_OVERLOAD_3(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AppendWithOtherLength:Path(_other:Path, _length:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .path_append_OVERLOAD_4(Self._ptr, p0, _length)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method FindFirst:Int(_c:Byte)
		Local _ret:Int = .path_findFirst(Self._ptr, _c)
		Local rval:Int = _ret ; Return rval
	End Method
	Method FindLastChar:Int(_c:Byte Ptr, _count:Int = -2147483648)
		Local _ret:Int
		If _count = -2147483648
			_ret = .path_findLastChar_OVERLOAD_1(Self._ptr, _c)
		Else
			_ret = .path_findLastChar_OVERLOAD_0(Self._ptr, _c, _count)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method MakeUpper:Path()
		Local _ret:Byte Ptr = .path_make_upper(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Path(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .path___add__(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Trim:Path(_whitespace:Path = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_whitespace)
		Local _ret:Byte Ptr
		If _whitespace = Null
			_ret = .path_trim_OVERLOAD_1(Self._ptr)
		Else
			_ret = .path_trim_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method FindFirstChar:Int(_c:Byte Ptr, _count:Int = -2147483648)
		Local _ret:Int
		If _count = -2147483648
			_ret = .path_findFirstChar_OVERLOAD_1(Self._ptr, _c)
		Else
			_ret = .path_findFirstChar_OVERLOAD_0(Self._ptr, _c, _count)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method FindNext:Int(_c:Byte, _startPos:Int)
		Local _ret:Int = .path_findNext(Self._ptr, _c, _startPos)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Less:Int(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqualsSubstringIgnoreCase:Int(_other:Path, _sourcePos:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int
		If _sourcePos = -2147483648
			_ret = .path_equals_substring_ignore_case_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .path_equals_substring_ignore_case_OVERLOAD_0(Self._ptr, p0, _sourcePos)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method FindLast:Int(_c:Byte, _start:Int = -2147483648)
		Local _ret:Int
		If _start = -2147483648
			_ret = .path_findLast_OVERLOAD_1(Self._ptr, _c)
		Else
			_ret = .path_findLast_OVERLOAD_0(Self._ptr, _c, _start)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method Remove:Path(_c:Byte)
		Local _ret:Byte Ptr = .path_remove_OVERLOAD_0(Self._ptr, _c)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RemoveWithToRemove:Path(_toRemove:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_toRemove)
		Local _ret:Byte Ptr = .path_remove_OVERLOAD_1(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Path()
		Local _ret:Byte Ptr = .new_path_OVERLOAD_0()
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Path(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_path_OVERLOAD_1(p0)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNumber:Path(_number:Double)
		Local _ret:Byte Ptr = .new_path_OVERLOAD_2(_number)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithInt:Path(_number:Int)
		Local _ret:Byte Ptr = .new_path_OVERLOAD_3(_number)
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Replace:Path(_toReplace:Byte, _replaceWith:Byte)
		Local _ret:Byte Ptr = .path_replace_OVERLOAD_0(Self._ptr, _toReplace, _replaceWith)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ReplaceWithToReplaceReplaceWith:Path(_toReplace:Path, _replaceWith:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_toReplace)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_replaceWith)
		Local _ret:Byte Ptr = .path_replace_OVERLOAD_1(Self._ptr, p0, p1)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Erase:Path(_index:Int)
		Local _ret:Byte Ptr = .path_erase(Self._ptr, _index)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Validate:Path()
		Local _ret:Byte Ptr = .path_validate(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Path(_c:Byte)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_0(Self._ptr, _c)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithC:Path(_c:Byte Ptr)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_1(Self._ptr, _c)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithOther:Path(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_2(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithI:Path(_i:Int)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_3(Self._ptr, _i)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithInt:Path(_i:Int)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_4(Self._ptr, _i)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithDouble:Path(_i:Double)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_7(Self._ptr, _i)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithFloat:Path(_i:Float)
		Local _ret:Byte Ptr = .path___add_assign___OVERLOAD_8(Self._ptr, _i)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_str:Byte Ptr)
		Local _ret:Int = .path___ne___OVERLOAD_0(Self._ptr, _str)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEqWithOther:Int(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path___ne___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Eq:Int(_str:Byte Ptr)
		Local _ret:Int = .path___eq___OVERLOAD_0(Self._ptr, _str)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqWithOther:Int(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path___eq___OVERLOAD_1(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Size:Int()
		Local _ret:Int = .path_size(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Reserve(_count:Int)
		.path_reserve(Self._ptr, _count)
	End Method
	Method Equalsn:Int(_other:Path, _n:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path_equalsn_OVERLOAD_0(Self._ptr, p0, _n)
		Local rval:Int = _ret ; Return rval
	End Method
	Method EqualsnWithStrN:Int(_str:Byte Ptr, _n:Int)
		Local _ret:Int = .path_equalsn_OVERLOAD_1(Self._ptr, _str, _n)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ARef:Byte Ptr(_index:Int)
		Local _ret:Byte Ptr = .path___aref___OVERLOAD_0(Self._ptr, _index)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method SubString:Path(_begin:Int, _length:Int, _make_lower:Int = -2147483648)
		Local _ret:Byte Ptr
		If _make_lower = -2147483648
			_ret = .path_subString_OVERLOAD_1(Self._ptr, _begin, _length)
		Else
			_ret = .path_subString_OVERLOAD_0(Self._ptr, _begin, _length, _make_lower)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret)._withDel(delete_Path))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MakeLower:Path()
		Local _ret:Byte Ptr = .path_make_lower(Self._ptr)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method CStr:Byte Ptr()
		Local _ret:Byte Ptr = .path_c_str(Self._ptr)
		Local rval:Byte Ptr = _ret ; Return rval
	End Method
	Method RemoveChars:Path(_characters:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_characters)
		Local _ret:Byte Ptr = .path_removeChars(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Path(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .path___assign__(Self._ptr, p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method EqualsIgnoreCase:Int(_other:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .path_equals_ignore_case(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Plane3df Extends _irrlicht_Object Abstract
	Method GetDistanceTo:Float(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Float = .plane3df_getDistanceTo(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method D:Float()
		Local _ret:Float = .plane3df_D_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method RecalculateD(_MPoint:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MPoint)
		.plane3df_recalculateD(Self._ptr, p0)
	End Method
	Method GetMemberPoint:Vector3df()
		Local _ret:Byte Ptr = .plane3df_getMemberPoint(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClassifyPointRelation:Int(_point:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .plane3df_classifyPointRelation(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:Plane3df()
		Local _ret:Byte Ptr = .new_plane3df_OVERLOAD_0()
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMPointNormal:Plane3df(_MPoint:Vector3df, _Normal:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MPoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_Normal)
		Local _ret:Byte Ptr = .new_plane3df_OVERLOAD_1(p0, p1)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithPxPyPzNxNyNz:Plane3df(_px:Float, _py:Float, _pz:Float, _nx:Float, _ny:Float, _nz:Float)
		Local _ret:Byte Ptr = .new_plane3df_OVERLOAD_2(_px, _py, _pz, _nx, _ny, _nz)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithPoint1Point2Point3:Plane3df(_point1:Vector3df, _point2:Vector3df, _point3:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_point2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_point3)
		Local _ret:Byte Ptr = .new_plane3df_OVERLOAD_3(p0, p1, p2)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNormalD:Plane3df(_normal:Vector3df, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_normal)
		Local _ret:Byte Ptr = .new_plane3df_OVERLOAD_4(p0, _d)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method GetKnownIntersectionWithLine:Float(_linePoint1:Vector3df, _linePoint2:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linePoint2)
		Local _ret:Float = .plane3df_getKnownIntersectionWithLine(Self._ptr, p0, p1)
		Local rval:Float = _ret ; Return rval
	End Method
	Method ExistsIntersection:Int(_other:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3df_existsIntersection(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setD(_D:Float)
		.plane3df_D_set(Self._ptr, _D)
	End Method
	Method GetIntersectionWithPlanes:Int(_o1:Plane3df, _o2:Plane3df, _outPoint:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_o1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_o2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outPoint)
		Local _ret:Int = .plane3df_getIntersectionWithPlanes(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithPlane:Int(_other:Plane3df, _outLinePoint:Vector3df, _outLineVect:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outLinePoint)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outLineVect)
		Local _ret:Int = .plane3df_getIntersectionWithPlane(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsFrontFacing:Int(_lookDirection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_lookDirection)
		Local _ret:Int = .plane3df_isFrontFacing(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLimitedLine:Int(_linePoint1:Vector3df, _linePoint2:Vector3df, _outIntersection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linePoint2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .plane3df_getIntersectionWithLimitedLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPlane(_point:Vector3df, _nvector:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nvector)
		.plane3df_setPlane_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method SetPlaneWithNvectD(_nvect:Vector3df, _d:Float)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nvect)
		.plane3df_setPlane_OVERLOAD_1(Self._ptr, p0, _d)
	End Method
	Method SetPlaneWithPoint1Point2Point3(_point1:Vector3df, _point2:Vector3df, _point3:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_point2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_point3)
		.plane3df_setPlane_OVERLOAD_2(Self._ptr, p0, p1, p2)
	End Method
	Method GetIntersectionWithLine:Int(_linePoint:Vector3df, _lineVect:Vector3df, _outIntersection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .plane3df_getIntersectionWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setNormal(_Normal:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Normal)
		.plane3df_Normal_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Plane3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Normal:Vector3df()
		Local _ret:Byte Ptr = .plane3df_Normal_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Plane3di Extends _irrlicht_Object Abstract
	Method GetDistanceTo:Int(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .plane3di_getDistanceTo(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method D:Int()
		Local _ret:Int = .plane3di_D_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method RecalculateD(_MPoint:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MPoint)
		.plane3di_recalculateD(Self._ptr, p0)
	End Method
	Method GetMemberPoint:Vector3di()
		Local _ret:Byte Ptr = .plane3di_getMemberPoint(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method ClassifyPointRelation:Int(_point:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local _ret:Int = .plane3di_classifyPointRelation(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:Plane3di()
		Local _ret:Byte Ptr = .new_plane3di_OVERLOAD_0()
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithMPointNormal:Plane3di(_MPoint:Vector3di, _Normal:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_MPoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_Normal)
		Local _ret:Byte Ptr = .new_plane3di_OVERLOAD_1(p0, p1)
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithPxPyPzNxNyNz:Plane3di(_px:Int, _py:Int, _pz:Int, _nx:Int, _ny:Int, _nz:Int)
		Local _ret:Byte Ptr = .new_plane3di_OVERLOAD_2(_px, _py, _pz, _nx, _ny, _nz)
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithPoint1Point2Point3:Plane3di(_point1:Vector3di, _point2:Vector3di, _point3:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_point2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_point3)
		Local _ret:Byte Ptr = .new_plane3di_OVERLOAD_3(p0, p1, p2)
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNormalD:Plane3di(_normal:Vector3di, _d:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_normal)
		Local _ret:Byte Ptr = .new_plane3di_OVERLOAD_4(p0, _d)
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method GetKnownIntersectionWithLine:Float(_linePoint1:Vector3di, _linePoint2:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linePoint2)
		Local _ret:Float = .plane3di_getKnownIntersectionWithLine(Self._ptr, p0, p1)
		Local rval:Float = _ret ; Return rval
	End Method
	Method ExistsIntersection:Int(_other:Plane3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3di_existsIntersection(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setD(_D:Int)
		.plane3di_D_set(Self._ptr, _D)
	End Method
	Method GetIntersectionWithPlanes:Int(_o1:Plane3di, _o2:Plane3di, _outPoint:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_o1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_o2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outPoint)
		Local _ret:Int = .plane3di_getIntersectionWithPlanes(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithPlane:Int(_other:Plane3di, _outLinePoint:Vector3di, _outLineVect:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outLinePoint)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outLineVect)
		Local _ret:Int = .plane3di_getIntersectionWithPlane(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsFrontFacing:Int(_lookDirection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_lookDirection)
		Local _ret:Int = .plane3di_isFrontFacing(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLimitedLine:Int(_linePoint1:Vector3di, _linePoint2:Vector3di, _outIntersection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_linePoint2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .plane3di_getIntersectionWithLimitedLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SetPlane(_point:Vector3di, _nvector:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_nvector)
		.plane3di_setPlane_OVERLOAD_0(Self._ptr, p0, p1)
	End Method
	Method SetPlaneWithNvectD(_nvect:Vector3di, _d:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_nvect)
		.plane3di_setPlane_OVERLOAD_1(Self._ptr, p0, _d)
	End Method
	Method SetPlaneWithPoint1Point2Point3(_point1:Vector3di, _point2:Vector3di, _point3:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_point1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_point2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_point3)
		.plane3di_setPlane_OVERLOAD_2(Self._ptr, p0, p1, p2)
	End Method
	Method GetIntersectionWithLine:Int(_linePoint:Vector3di, _lineVect:Vector3di, _outIntersection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .plane3di_getIntersectionWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Plane3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setNormal(_Normal:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_Normal)
		.plane3di_Normal_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Plane3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .plane3di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Normal:Vector3di()
		Local _ret:Byte Ptr = .plane3di_Normal_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Rectf Extends _irrlicht_Object Abstract
	Method AddInternalPoint(_p:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		.rectf_addInternalPoint_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method AddInternalPointWithXY(_x:Float, _y:Float)
		.rectf_addInternalPoint_OVERLOAD_1(Self._ptr, _x, _y)
	End Method
	Method UpperLeftCorner:Vector2df()
		Local _ret:Byte Ptr = .rectf_UpperLeftCorner_get(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsPointInside:Int(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Int = .rectf_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetHeight:Float()
		Local _ret:Float = .rectf_getHeight(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetSize:Dimension2df()
		Local _ret:Byte Ptr = .rectf_getSize(Self._ptr)
		Local rval:Dimension2df = Dimension2df(New _Dimension2df._withPtr(_ret)._withDel(delete_Dimension2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Rectf()
		Local _ret:Byte Ptr = .new_rectf_OVERLOAD_0()
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret)._withDel(delete_Rectf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXYX2Y2:Rectf(_x:Float, _y:Float, _x2:Float, _y2:Float)
		Local _ret:Byte Ptr = .new_rectf_OVERLOAD_1(_x, _y, _x2, _y2)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret)._withDel(delete_Rectf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithUpperLeftLowerRight:Rectf(_upperLeft:Vector2df, _lowerRight:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_upperLeft)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lowerRight)
		Local _ret:Byte Ptr = .new_rectf_OVERLOAD_2(p0, p1)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret)._withDel(delete_Rectf))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Less:Int(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .rectf___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsValid:Int()
		Local _ret:Int = .rectf_isValid(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SubAssign:Rectf(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .rectf___sub_assign__(Self._ptr, p0)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Repair()
		.rectf_repair(Self._ptr)
	End Method
	Method setLowerRightCorner(_LowerRightCorner:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_LowerRightCorner)
		.rectf_LowerRightCorner_set(Self._ptr, p0)
	End Method
	Method Sub:Rectf(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .rectf___sub__(Self._ptr, p0)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret)._withDel(delete_Rectf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setUpperLeftCorner(_UpperLeftCorner:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_UpperLeftCorner)
		.rectf_UpperLeftCorner_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .rectf___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsRectCollided:Int(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .rectf_isRectCollided(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .rectf___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClipAgainst(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.rectf_clipAgainst(Self._ptr, p0)
	End Method
	Method ConstrainTo:Int(_other:Rectf)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .rectf_constrainTo(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LowerRightCorner:Vector2df()
		Local _ret:Byte Ptr = .rectf_LowerRightCorner_get(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Rectf(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .rectf___add_assign__(Self._ptr, p0)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetWidth:Float()
		Local _ret:Float = .rectf_getWidth(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetArea:Float()
		Local _ret:Float = .rectf_getArea(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetCenter:Vector2df()
		Local _ret:Byte Ptr = .rectf_getCenter(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Rectf(_pos:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .rectf___add__(Self._ptr, p0)
		Local rval:Rectf = Rectf(New _Rectf._withPtr(_ret)._withDel(delete_Rectf))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Recti Extends _irrlicht_Object Abstract
	Method AddInternalPoint(_p:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		.recti_addInternalPoint_OVERLOAD_0(Self._ptr, p0)
	End Method
	Method AddInternalPointWithXY(_x:Int, _y:Int)
		.recti_addInternalPoint_OVERLOAD_1(Self._ptr, _x, _y)
	End Method
	Method UpperLeftCorner:Vector2di()
		Local _ret:Byte Ptr = .recti_UpperLeftCorner_get(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsPointInside:Int(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Int = .recti_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetHeight:Int()
		Local _ret:Int = .recti_getHeight(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetSize:Dimension2di()
		Local _ret:Byte Ptr = .recti_getSize(Self._ptr)
		Local rval:Dimension2di = Dimension2di(New _Dimension2di._withPtr(_ret)._withDel(delete_Dimension2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Recti()
		Local _ret:Byte Ptr = .new_recti_OVERLOAD_0()
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithXYX2Y2:Recti(_x:Int, _y:Int, _x2:Int, _y2:Int)
		Local _ret:Byte Ptr = .new_recti_OVERLOAD_1(_x, _y, _x2, _y2)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithUpperLeftLowerRight:Recti(_upperLeft:Vector2di, _lowerRight:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_upperLeft)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lowerRight)
		Local _ret:Byte Ptr = .new_recti_OVERLOAD_2(p0, p1)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Less:Int(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .recti___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsValid:Int()
		Local _ret:Int = .recti_isValid(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method SubAssign:Recti(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .recti___sub_assign__(Self._ptr, p0)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Repair()
		.recti_repair(Self._ptr)
	End Method
	Method setLowerRightCorner(_LowerRightCorner:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_LowerRightCorner)
		.recti_LowerRightCorner_set(Self._ptr, p0)
	End Method
	Method Sub:Recti(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .recti___sub__(Self._ptr, p0)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setUpperLeftCorner(_UpperLeftCorner:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_UpperLeftCorner)
		.recti_UpperLeftCorner_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .recti___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsRectCollided:Int(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .recti_isRectCollided(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method nEq:Int(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .recti___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClipAgainst(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		.recti_clipAgainst(Self._ptr, p0)
	End Method
	Method ConstrainTo:Int(_other:Recti)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .recti_constrainTo(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method LowerRightCorner:Vector2di()
		Local _ret:Byte Ptr = .recti_LowerRightCorner_get(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Recti(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .recti___add_assign__(Self._ptr, p0)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetWidth:Int()
		Local _ret:Int = .recti_getWidth(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Int()
		Local _ret:Int = .recti_getArea(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetCenter:Vector2di()
		Local _ret:Byte Ptr = .recti_getCenter(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Recti(_pos:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pos)
		Local _ret:Byte Ptr = .recti___add__(Self._ptr, p0)
		Local rval:Recti = Recti(New _Recti._withPtr(_ret)._withDel(delete_Recti))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Triangle3df Extends _irrlicht_Object Abstract
	Method IsTotalOutsideBox:Int(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local _ret:Int = .triangle3df_isTotalOutsideBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointInside:Int(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .triangle3df_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClosestPointOnTriangle:Vector3df(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .triangle3df_closestPointOnTriangle(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Triangle3df()
		Local _ret:Byte Ptr = .new_triangle3df_OVERLOAD_0()
		Local rval:Triangle3df = Triangle3df(New _Triangle3df._withPtr(_ret)._withDel(delete_Triangle3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithV1V2V3:Triangle3df(_v1:Vector3df, _v2:Vector3df, _v3:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .new_triangle3df_OVERLOAD_1(p0, p1, p2)
		Local rval:Triangle3df = Triangle3df(New _Triangle3df._withPtr(_ret)._withDel(delete_Triangle3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method setPointA(_pointA:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointA)
		.triangle3df_pointA_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Triangle3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .triangle3df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLimitedLine:Int(_line:Line3df, _outIntersection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3df_getIntersectionWithLimitedLine(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setPointB(_pointB:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointB)
		.triangle3df_pointB_set(Self._ptr, p0)
	End Method
	Method PointC:Vector3df()
		Local _ret:Byte Ptr = .triangle3df_pointC_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsFrontFacing:Int(_lookDirection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_lookDirection)
		Local _ret:Int = .triangle3df_isFrontFacing(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPlane:Plane3df()
		Local _ret:Byte Ptr = .triangle3df_getPlane(Self._ptr)
		Local rval:Plane3df = Plane3df(New _Plane3df._withPtr(_ret)._withDel(delete_Plane3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setPointC(_pointC:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointC)
		.triangle3df_pointC_set(Self._ptr, p0)
	End Method
	Method Set(_a:Vector3df, _b:Vector3df, _c:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_c)
		.triangle3df_set(Self._ptr, p0, p1, p2)
	End Method
	Method IsTotalInsideBox:Int(_box:Aabbox3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local _ret:Int = .triangle3df_isTotalInsideBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLine:Int(_linePoint:Vector3df, _lineVect:Vector3df, _outIntersection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3df_getIntersectionWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionOfPlaneWithLine:Int(_linePoint:Vector3df, _lineVect:Vector3df, _outIntersection:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3df_getIntersectionOfPlaneWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetNormal:Vector3df()
		Local _ret:Byte Ptr = .triangle3df_getNormal(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Triangle3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .triangle3df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointInsideFast:Int(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .triangle3df_isPointInsideFast(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Float()
		Local _ret:Float = .triangle3df_getArea(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method PointA:Vector3df()
		Local _ret:Byte Ptr = .triangle3df_pointA_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method PointB:Vector3df()
		Local _ret:Byte Ptr = .triangle3df_pointB_get(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Triangle3di Extends _irrlicht_Object Abstract
	Method IsTotalOutsideBox:Int(_box:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local _ret:Int = .triangle3di_isTotalOutsideBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointInside:Int(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .triangle3di_isPointInside(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method ClosestPointOnTriangle:Vector3di(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .triangle3di_closestPointOnTriangle(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Function Make:Triangle3di()
		Local _ret:Byte Ptr = .new_triangle3di_OVERLOAD_0()
		Local rval:Triangle3di = Triangle3di(New _Triangle3di._withPtr(_ret)._withDel(delete_Triangle3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithV1V2V3:Triangle3di(_v1:Vector3di, _v2:Vector3di, _v3:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v1)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .new_triangle3di_OVERLOAD_1(p0, p1, p2)
		Local rval:Triangle3di = Triangle3di(New _Triangle3di._withPtr(_ret)._withDel(delete_Triangle3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method setPointA(_pointA:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointA)
		.triangle3di_pointA_set(Self._ptr, p0)
	End Method
	Method Eq:Int(_other:Triangle3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .triangle3di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLimitedLine:Int(_line:Line3di, _outIntersection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_line)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3di_getIntersectionWithLimitedLine(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setPointB(_pointB:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointB)
		.triangle3di_pointB_set(Self._ptr, p0)
	End Method
	Method PointC:Vector3di()
		Local _ret:Byte Ptr = .triangle3di_pointC_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method IsFrontFacing:Int(_lookDirection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_lookDirection)
		Local _ret:Int = .triangle3di_isFrontFacing(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetPlane:Plane3di()
		Local _ret:Byte Ptr = .triangle3di_getPlane(Self._ptr)
		Local rval:Plane3di = Plane3di(New _Plane3di._withPtr(_ret)._withDel(delete_Plane3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setPointC(_pointC:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_pointC)
		.triangle3di_pointC_set(Self._ptr, p0)
	End Method
	Method Set(_a:Vector3di, _b:Vector3di, _c:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_c)
		.triangle3di_set(Self._ptr, p0, p1, p2)
	End Method
	Method IsTotalInsideBox:Int(_box:Aabbox3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_box)
		Local _ret:Int = .triangle3di_isTotalInsideBox(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionWithLine:Int(_linePoint:Vector3di, _lineVect:Vector3di, _outIntersection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3di_getIntersectionWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetIntersectionOfPlaneWithLine:Int(_linePoint:Vector3di, _lineVect:Vector3di, _outIntersection:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_linePoint)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_lineVect)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_outIntersection)
		Local _ret:Int = .triangle3di_getIntersectionOfPlaneWithLine(Self._ptr, p0, p1, p2)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetNormal:Vector3di()
		Local _ret:Byte Ptr = .triangle3di_getNormal(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Triangle3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .triangle3di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsPointInsideFast:Int(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Int = .triangle3di_isPointInsideFast(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetArea:Int()
		Local _ret:Int = .triangle3di_getArea(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method PointA:Vector3di()
		Local _ret:Byte Ptr = .triangle3di_pointA_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method PointB:Vector3di()
		Local _ret:Byte Ptr = .triangle3di_pointB_get(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
End Type

Type Vector2df Extends _irrlicht_Object Abstract
	Method GetDistanceFromSq:Float(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector2df_getDistanceFromSQ(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetInterpolated:Vector2df(_other:Vector2df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df_getInterpolated(Self._ptr, p0, _d)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Sub:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___sub___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithOther:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___sub___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___sub___OVERLOAD_2(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Equals:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df_equals(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsBetweenPoints:Int(_begin:Vector2df, _end:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_begin)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Int = .vector2df_isBetweenPoints(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method lEq:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___lte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setY(_Y:Float)
		.vector2df_Y_set(Self._ptr, _Y)
	End Method
	Method SubAssign:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___sub_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___sub_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithOther:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___sub_assign___OVERLOAD_2(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Greater:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___gt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DotProduct:Float(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector2df_dotProduct(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Mul:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___mul___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Normalize:Vector2df()
		Local _ret:Byte Ptr = .vector2df_normalize(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngleWith:Double(_b:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Double = .vector2df_getAngleWith(Self._ptr, p0)
		Local rval:Double = _ret ; Return rval
	End Method
	Method GetDistanceFrom:Float(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector2df_getDistanceFrom(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Neg:Vector2df()
		Local _ret:Byte Ptr = .vector2df___neg__(Self._ptr)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Y:Float()
		Local _ret:Float = .vector2df_Y_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetLength:Float()
		Local _ret:Float = .vector2df_getLength(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Function Make:Vector2df()
		Local _ret:Byte Ptr = .new_vector2df_OVERLOAD_0()
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNxNy:Vector2df(_nx:Float, _ny:Float)
		Local _ret:Byte Ptr = .new_vector2df_OVERLOAD_1(_nx, _ny)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithN:Vector2df(_n:Float)
		Local _ret:Byte Ptr = .new_vector2df_OVERLOAD_2(_n)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector2df_OVERLOAD_3(p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithDimension2df:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector2df_OVERLOAD_4(p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method DivAssign:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___div_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivAssignWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___div_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Float()
		Local _ret:Float = .vector2df_getLengthSQ(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Div:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___div___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___div___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___add___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithOther:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___add___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___add___OVERLOAD_2(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngle:Double()
		Local _ret:Double = .vector2df_getAngle(Self._ptr)
		Local rval:Double = _ret ; Return rval
	End Method
	Method AddAssign:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___add_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___add_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithOther:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___add_assign___OVERLOAD_2(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___mul_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithV:Vector2df(_v:Float)
		Local _ret:Byte Ptr = .vector2df___mul_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotateBy:Vector2df(_degrees:Double, _center:Vector2df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local _ret:Byte Ptr
		If _center = Null
			_ret = .vector2df_rotateBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			_ret = .vector2df_rotateBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Vector2df(_nx:Float, _ny:Float)
		Local _ret:Byte Ptr = .vector2df_set_OVERLOAD_0(Self._ptr, _nx, _ny)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithP:Vector2df(_p:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector2df_set_OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolatedQuadratic:Vector2df(_v2:Vector2df, _v3:Vector2df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .vector2df_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret)._withDel(delete_Vector2df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setX(_X:Float)
		.vector2df_X_set(Self._ptr, _X)
	End Method
	Method gEq:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___gte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Less:Int(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2df___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method X:Float()
		Local _ret:Float = .vector2df_X_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Interpolate:Vector2df(_a:Vector2df, _b:Vector2df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Byte Ptr = .vector2df_interpolate(Self._ptr, p0, p1, _d)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Vector2df(_other:Vector2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assignWithOther:Vector2df(_other:Dimension2df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2df___assign___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2df = Vector2df(New _Vector2df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngleTrig:Double()
		Local _ret:Double = .vector2df_getAngleTrig(Self._ptr)
		Local rval:Double = _ret ; Return rval
	End Method
End Type

Type Vector2di Extends _irrlicht_Object Abstract
	Method GetDistanceFromSq:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di_getDistanceFromSQ(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolated:Vector2di(_other:Vector2di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di_getInterpolated(Self._ptr, p0, _d)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Sub:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___sub___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithOther:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___sub___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___sub___OVERLOAD_2(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Equals:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di_equals(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsBetweenPoints:Int(_begin:Vector2di, _end:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_begin)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Int = .vector2di_isBetweenPoints(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method lEq:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___lte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setY(_Y:Int)
		.vector2di_Y_set(Self._ptr, _Y)
	End Method
	Method SubAssign:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___sub_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___sub_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithOther:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___sub_assign___OVERLOAD_2(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Greater:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___gt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DotProduct:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di_dotProduct(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Mul:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___mul___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method nEq:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Normalize:Vector2di()
		Local _ret:Byte Ptr = .vector2di_normalize(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngleWith:Double(_b:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Double = .vector2di_getAngleWith(Self._ptr, p0)
		Local rval:Double = _ret ; Return rval
	End Method
	Method GetDistanceFrom:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di_getDistanceFrom(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Neg:Vector2di()
		Local _ret:Byte Ptr = .vector2di___neg__(Self._ptr)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Y:Int()
		Local _ret:Int = .vector2di_Y_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLength:Int()
		Local _ret:Int = .vector2di_getLength(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:Vector2di()
		Local _ret:Byte Ptr = .new_vector2di_OVERLOAD_0()
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNxNy:Vector2di(_nx:Int, _ny:Int)
		Local _ret:Byte Ptr = .new_vector2di_OVERLOAD_1(_nx, _ny)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithN:Vector2di(_n:Int)
		Local _ret:Byte Ptr = .new_vector2di_OVERLOAD_2(_n)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector2di_OVERLOAD_3(p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithDimension2di:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector2di_OVERLOAD_4(p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method DivAssign:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___div_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivAssignWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___div_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Int()
		Local _ret:Int = .vector2di_getLengthSQ(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Div:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___div___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___div___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___add___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithOther:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___add___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___add___OVERLOAD_2(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngle:Double()
		Local _ret:Double = .vector2di_getAngle(Self._ptr)
		Local rval:Double = _ret ; Return rval
	End Method
	Method AddAssign:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___add_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___add_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithOther:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___add_assign___OVERLOAD_2(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___mul_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithV:Vector2di(_v:Int)
		Local _ret:Byte Ptr = .vector2di___mul_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotateBy:Vector2di(_degrees:Double, _center:Vector2di = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		Local _ret:Byte Ptr
		If _center = Null
			_ret = .vector2di_rotateBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			_ret = .vector2di_rotateBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Set:Vector2di(_nx:Int, _ny:Int)
		Local _ret:Byte Ptr = .vector2di_set_OVERLOAD_0(Self._ptr, _nx, _ny)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithP:Vector2di(_p:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector2di_set_OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Eq:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolatedQuadratic:Vector2di(_v2:Vector2di, _v3:Vector2di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .vector2di_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret)._withDel(delete_Vector2di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setX(_X:Int)
		.vector2di_X_set(Self._ptr, _X)
	End Method
	Method gEq:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___gte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Less:Int(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector2di___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method X:Int()
		Local _ret:Int = .vector2di_X_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Interpolate:Vector2di(_a:Vector2di, _b:Vector2di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Byte Ptr = .vector2di_interpolate(Self._ptr, p0, p1, _d)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Vector2di(_other:Vector2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assignWithOther:Vector2di(_other:Dimension2di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector2di___assign___OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector2di = Vector2di(New _Vector2di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAngleTrig:Double()
		Local _ret:Double = .vector2di_getAngleTrig(Self._ptr)
		Local rval:Double = _ret ; Return rval
	End Method
End Type

Type Vector3df Extends _irrlicht_Object Abstract
	Method Z:Float()
		Local _ret:Float = .vector3df_Z_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetHorizontalAngle:Vector3df()
		Local _ret:Byte Ptr = .vector3df_getHorizontalAngle(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setZ(_Z:Float)
		.vector3df_Z_set(Self._ptr, _Z)
	End Method
	Method RotateYzby(_degrees:Double, _center:Vector3df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3df_rotateYZBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3df_rotateYZBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method Div:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___div___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivWithV:Vector3df(_v:Float)
		Local _ret:Byte Ptr = .vector3df___div___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___add___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithVal:Vector3df(_val:Float)
		Local _ret:Byte Ptr = .vector3df___add___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Interpolate:Vector3df(_a:Vector3df, _b:Vector3df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Byte Ptr = .vector3df_interpolate(Self._ptr, p0, p1, _d)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Y:Float()
		Local _ret:Float = .vector3df_Y_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method DotProduct:Float(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector3df_dotProduct(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Eq:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method gEq:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___gte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLength:Float()
		Local _ret:Float = .vector3df_getLength(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Function Make:Vector3df()
		Local _ret:Byte Ptr = .new_vector3df_OVERLOAD_0()
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNxNyNz:Vector3df(_nx:Float, _ny:Float, _nz:Float)
		Local _ret:Byte Ptr = .new_vector3df_OVERLOAD_1(_nx, _ny, _nz)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithN:Vector3df(_n:Float)
		Local _ret:Byte Ptr = .new_vector3df_OVERLOAD_2(_n)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector3df_OVERLOAD_3(p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Mul:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithV:Vector3df(_v:Float)
		Local _ret:Byte Ptr = .vector3df___mul___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDistanceFromSq:Float(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector3df_getDistanceFromSQ(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Less:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method X:Float()
		Local _ret:Float = .vector3df_X_get(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method GetInterpolatedQuadratic:Vector3df(_v2:Vector3df, _v3:Vector3df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .vector3df_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInterpolated:Vector3df(_other:Vector3df, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df_getInterpolated(Self._ptr, p0, _d)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setY(_Y:Float)
		.vector3df_Y_set(Self._ptr, _Y)
	End Method
	Method GetAs4Values(_array:Byte Ptr)
		.vector3df_getAs4Values(Self._ptr, _array)
	End Method
	Method SetLength:Vector3df(_newlength:Float)
		Local _ret:Byte Ptr = .vector3df_setLength(Self._ptr, _newlength)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAs3Values(_array:Byte Ptr)
		.vector3df_getAs3Values(Self._ptr, _array)
	End Method
	Method Set:Vector3df(_nx:Float, _ny:Float, _nz:Float)
		Local _ret:Byte Ptr = .vector3df_set_OVERLOAD_0(Self._ptr, _nx, _ny, _nz)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithP:Vector3df(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector3df_set_OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Normalize:Vector3df()
		Local _ret:Byte Ptr = .vector3df_normalize(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Neg:Vector3df()
		Local _ret:Byte Ptr = .vector3df___neg__(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDistanceFrom:Float(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Float = .vector3df_getDistanceFrom(Self._ptr, p0)
		Local rval:Float = _ret ; Return rval
	End Method
	Method Equals:Int(_other:Vector3df, _tolerance:Float = -1e100000)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .vector3df_equals_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .vector3df_equals_OVERLOAD_0(Self._ptr, p0, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsBetweenPoints:Int(_begin:Vector3df, _end:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_begin)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Int = .vector3df_isBetweenPoints(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___sub___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithVal:Vector3df(_val:Float)
		Local _ret:Byte Ptr = .vector3df___sub___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssign:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___sub_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithVal:Vector3df(_val:Float)
		Local _ret:Byte Ptr = .vector3df___sub_assign___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method lEq:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___lte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CrossProduct:Vector3df(_p:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector3df_crossProduct(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___add_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithVal:Vector3df(_val:Float)
		Local _ret:Byte Ptr = .vector3df___add_assign___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Invert:Vector3df()
		Local _ret:Byte Ptr = .vector3df_invert(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___assign__(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotationToDirection:Vector3df(_forwards:Vector3df = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_forwards)
		Local _ret:Byte Ptr
		If _forwards = Null
			_ret = .vector3df_rotationToDirection_OVERLOAD_1(Self._ptr)
		Else
			_ret = .vector3df_rotationToDirection_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___mul_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithV:Vector3df(_v:Float)
		Local _ret:Byte Ptr = .vector3df___mul_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotateXyby(_degrees:Double, _center:Vector3df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3df_rotateXYBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3df_rotateXYBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method RotateXzby(_degrees:Double, _center:Vector3df = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3df_rotateXZBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3df_rotateXZBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method DivAssign:Vector3df(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3df___div_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivAssignWithV:Vector3df(_v:Float)
		Local _ret:Byte Ptr = .vector3df___div_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSphericalCoordinateAngles:Vector3df()
		Local _ret:Byte Ptr = .vector3df_getSphericalCoordinateAngles(Self._ptr)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Float()
		Local _ret:Float = .vector3df_getLengthSQ(Self._ptr)
		Local rval:Float = _ret ; Return rval
	End Method
	Method setX(_X:Float)
		.vector3df_X_set(Self._ptr, _X)
	End Method
	Method nEq:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Greater:Int(_other:Vector3df)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3df___gt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type

Type Vector3di Extends _irrlicht_Object Abstract
	Method Z:Int()
		Local _ret:Int = .vector3di_Z_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetHorizontalAngle:Vector3di()
		Local _ret:Byte Ptr = .vector3di_getHorizontalAngle(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setZ(_Z:Int)
		.vector3di_Z_set(Self._ptr, _Z)
	End Method
	Method RotateYzby(_degrees:Double, _center:Vector3di = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3di_rotateYZBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3di_rotateYZBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method Div:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___div___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivWithV:Vector3di(_v:Int)
		Local _ret:Byte Ptr = .vector3di___div___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Add:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___add___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddWithVal:Vector3di(_val:Int)
		Local _ret:Byte Ptr = .vector3di___add___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Interpolate:Vector3di(_a:Vector3di, _b:Vector3di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_a)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_b)
		Local _ret:Byte Ptr = .vector3di_interpolate(Self._ptr, p0, p1, _d)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Y:Int()
		Local _ret:Int = .vector3di_Y_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method DotProduct:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di_dotProduct(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Eq:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___eq__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method gEq:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___gte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetLength:Int()
		Local _ret:Int = .vector3di_getLength(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Function Make:Vector3di()
		Local _ret:Byte Ptr = .new_vector3di_OVERLOAD_0()
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithNxNyNz:Vector3di(_nx:Int, _ny:Int, _nz:Int)
		Local _ret:Byte Ptr = .new_vector3di_OVERLOAD_1(_nx, _ny, _nz)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithN:Vector3di(_n:Int)
		Local _ret:Byte Ptr = .new_vector3di_OVERLOAD_2(_n)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function MakeWithOther:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .new_vector3di_OVERLOAD_3(p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Method Mul:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___mul___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulWithV:Vector3di(_v:Int)
		Local _ret:Byte Ptr = .vector3di___mul___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDistanceFromSq:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di_getDistanceFromSQ(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Less:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___lt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method X:Int()
		Local _ret:Int = .vector3di_X_get(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method GetInterpolatedQuadratic:Vector3di(_v2:Vector3di, _v3:Vector3di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_v2)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_v3)
		Local _ret:Byte Ptr = .vector3di_getInterpolated_quadratic(Self._ptr, p0, p1, _d)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetInterpolated:Vector3di(_other:Vector3di, _d:Double)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di_getInterpolated(Self._ptr, p0, _d)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method setY(_Y:Int)
		.vector3di_Y_set(Self._ptr, _Y)
	End Method
	Method GetAs4Values(_array:Byte Ptr)
		.vector3di_getAs4Values(Self._ptr, _array)
	End Method
	Method SetLength:Vector3di(_newlength:Int)
		Local _ret:Byte Ptr = .vector3di_setLength(Self._ptr, _newlength)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetAs3Values(_array:Byte Ptr)
		.vector3di_getAs3Values(Self._ptr, _array)
	End Method
	Method Set:Vector3di(_nx:Int, _ny:Int, _nz:Int)
		Local _ret:Byte Ptr = .vector3di_set_OVERLOAD_0(Self._ptr, _nx, _ny, _nz)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SetWithP:Vector3di(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector3di_set_OVERLOAD_1(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Normalize:Vector3di()
		Local _ret:Byte Ptr = .vector3di_normalize(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Neg:Vector3di()
		Local _ret:Byte Ptr = .vector3di___neg__(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetDistanceFrom:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di_getDistanceFrom(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Equals:Int(_other:Vector3di, _tolerance:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int
		If _tolerance = -2147483648
			_ret = .vector3di_equals_OVERLOAD_1(Self._ptr, p0)
		Else
			_ret = .vector3di_equals_OVERLOAD_0(Self._ptr, p0, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Method
	Method IsBetweenPoints:Int(_begin:Vector3di, _end:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_begin)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_end)
		Local _ret:Int = .vector3di_isBetweenPoints(Self._ptr, p0, p1)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Sub:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___sub___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubWithVal:Vector3di(_val:Int)
		Local _ret:Byte Ptr = .vector3di___sub___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssign:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___sub_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method SubAssignWithVal:Vector3di(_val:Int)
		Local _ret:Byte Ptr = .vector3di___sub_assign___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method lEq:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___lte__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method CrossProduct:Vector3di(_p:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_p)
		Local _ret:Byte Ptr = .vector3di_crossProduct(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssign:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___add_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method AddAssignWithVal:Vector3di(_val:Int)
		Local _ret:Byte Ptr = .vector3di___add_assign___OVERLOAD_1(Self._ptr, _val)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method Invert:Vector3di()
		Local _ret:Byte Ptr = .vector3di_invert(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method _assign:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___assign__(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotationToDirection:Vector3di(_forwards:Vector3di = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_forwards)
		Local _ret:Byte Ptr
		If _forwards = Null
			_ret = .vector3di_rotationToDirection_OVERLOAD_1(Self._ptr)
		Else
			_ret = .vector3di_rotationToDirection_OVERLOAD_0(Self._ptr, p0)
		EndIf
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssign:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___mul_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method MulAssignWithV:Vector3di(_v:Int)
		Local _ret:Byte Ptr = .vector3di___mul_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method RotateXyby(_degrees:Double, _center:Vector3di = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3di_rotateXYBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3di_rotateXYBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method RotateXzby(_degrees:Double, _center:Vector3di = Null)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_center)
		If _center = Null
			.vector3di_rotateXZBy_OVERLOAD_1(Self._ptr, _degrees)
		Else
			.vector3di_rotateXZBy_OVERLOAD_0(Self._ptr, _degrees, p1)
		EndIf
	End Method
	Method DivAssign:Vector3di(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Byte Ptr = .vector3di___div_assign___OVERLOAD_0(Self._ptr, p0)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method DivAssignWithV:Vector3di(_v:Int)
		Local _ret:Byte Ptr = .vector3di___div_assign___OVERLOAD_1(Self._ptr, _v)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetSphericalCoordinateAngles:Vector3di()
		Local _ret:Byte Ptr = .vector3di_getSphericalCoordinateAngles(Self._ptr)
		Local rval:Vector3di = Vector3di(New _Vector3di._withPtr(_ret)._withDel(delete_Vector3di))
		If rval._ptr Then Return rval ; Else Return Null
	End Method
	Method GetLengthSq:Int()
		Local _ret:Int = .vector3di_getLengthSQ(Self._ptr)
		Local rval:Int = _ret ; Return rval
	End Method
	Method setX(_X:Int)
		.vector3di_X_set(Self._ptr, _X)
	End Method
	Method nEq:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___ne__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
	Method Greater:Int(_other:Vector3di)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_other)
		Local _ret:Int = .vector3di___gt__(Self._ptr, p0)
		Local rval:Int = _ret ; Return rval
	End Method
End Type


Type irrlicht Final
	Function isdigit:Int(_c:Int)
		Local _ret:Int = .isdigit(_c)
		Local rval:Int = _ret ; Return rval
	End Function
	Function locale_set(_id:Int)
		.locale_set(_id)
	End Function
	Function IImage_isRenderTargetOnlyFormat:Int(_format:Int)
		Local _ret:Int = .IImage_isRenderTargetOnlyFormat(_format)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getAverage:Int(_color:Short)
		Local _ret:Int = .getAverage(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getMD3Normal:Vector3df(_i:Int, _j:Int)
		Local _ret:Byte Ptr = .getMD3Normal(_i, _j)
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function textureBlendFunc_hasAlpha:Int(_factor:Int)
		Local _ret:Int = .textureBlendFunc_hasAlpha(_factor)
		Local rval:Int = _ret ; Return rval
	End Function
	Function isspace:Int(_c:Int)
		Local _ret:Int = .isspace(_c)
		Local rval:Int = _ret ; Return rval
	End Function
	Function R5G6B5toA1R5G5B5:Short(_color:Short)
		Local _ret:Short = .R5G6B5toA1R5G5B5(_color)
		Local rval:Short = _ret ; Return rval
	End Function
	Function isupper:Int(_c:Int)
		Local _ret:Int = .isupper(_c)
		Local rval:Int = _ret ; Return rval
	End Function
	Function new_fromCString:Path(_c:Byte Ptr, _length:Int = -2147483648)
		Local _ret:Byte Ptr
		If _length = -2147483648
			_ret = .new_fromCString_OVERLOAD_1(_c)
		Else
			_ret = .new_fromCString_OVERLOAD_0(_c, _length)
		EndIf
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function getFileNameExtension:Path(_dest:Path, _source:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_source)
		Local _ret:Byte Ptr = .getFileNameExtension(p0, p1)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function ceil32:Int(_x:Float)
		Local _ret:Int = .ceil32(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getAsVector3df:Vector3df(_string:String, _pos:Byte Ptr)
		Local cs0:Byte Ptr = _string.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Byte Ptr = .getAsVector3df(is0, _pos)
		MemFree cs0 ; delete_path is0
		Local rval:Vector3df = Vector3df(New _Vector3df._withPtr(_ret)._withDel(delete_Vector3df))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function A1R5G5B5toA8R8G8B8:Int(_color:Short)
		Local _ret:Int = .A1R5G5B5toA8R8G8B8(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function deletePathFromFilename:Path(_filename:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .deletePathFromFilename(p0)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function X8R8G8B8toA1R5G5B5:Short(_color:Int)
		Local _ret:Short = .X8R8G8B8toA1R5G5B5(_color)
		Local rval:Short = _ret ; Return rval
	End Function
	Function equalsByUlp:Int(_a:Float, _b:Float, _maxUlpDiff:Int)
		Local _ret:Int = .equalsByUlp(_a, _b, _maxUlpDiff)
		Local rval:Int = _ret ; Return rval
	End Function
	Function degToRad:Float(_degrees:Float)
		Local _ret:Float = .degToRad_OVERLOAD_0(_degrees)
		Local rval:Float = _ret ; Return rval
	End Function
	Function degToRadWithDegrees:Double(_degrees:Double)
		Local _ret:Double = .degToRad_OVERLOAD_1(_degrees)
		Local rval:Double = _ret ; Return rval
	End Function
	Function f32_min3:Float(_a:Float, _b:Float, _c:Float)
		Local _ret:Float = .f32_min3(_a, _b, _c)
		Local rval:Float = _ret ; Return rval
	End Function
	Function strtol10:Int(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Int
		If _out = Null
			_ret = .strtol10_OVERLOAD_1(_in)
		Else
			_ret = .strtol10_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function R5G6B5toA8R8G8B8:Int(_color:Short)
		Local _ret:Int = .R5G6B5toA8R8G8B8(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function IR:Int(_x:Float)
		Local _ret:Int = .IR(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function createDevice:IrrlichtDevice(_deviceType:Int, _windowSize:Dimension2du, _bits:Int, _fullscreen:Int, _stencilbuffer:Int, _vsync:Int, _receiver:IeventReceiver)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_windowSize)
		Local p6:Byte Ptr = _irrlicht_Object._getPtr(_receiver)
		Local _ret:Byte Ptr = .createDevice(_deviceType, p1, _bits, _fullscreen, _stencilbuffer, _vsync, p6)
		Local rval:IrrlichtDevice = IrrlichtDevice(New _IrrlichtDevice._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function IrrlichtDevice_isDriverSupported:Int(_driver:Int)
		Local _ret:Int = .IrrlichtDevice_isDriverSupported(_driver)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getAlpha:Int(_color:Short)
		Local _ret:Int = .getAlpha(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function clearFPUException()
		.clearFPUException()
	End Function
	Function s32_max:Int(_a:Int, _b:Int)
		Local _ret:Int = .s32_max(_a, _b)
		Local rval:Int = _ret ; Return rval
	End Function
	Function IImage_getBitsPerPixelFromFormat:Int(_format:Int)
		Local _ret:Int = .IImage_getBitsPerPixelFromFormat(_format)
		Local rval:Int = _ret ; Return rval
	End Function
	Function hasFileExtension:Int(_filename:Path, _ext0:Path, _ext1:Path = Null, _ext2:Path = Null)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_ext0)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_ext1)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_ext2)
		Local _ret:Int
		If _ext1 = Null
			_ret = .hasFileExtension_OVERLOAD_2(p0, p1)
		ElseIf _ext2 = Null
			_ret = .hasFileExtension_OVERLOAD_1(p0, p1, p2)
		Else
			_ret = .hasFileExtension_OVERLOAD_0(p0, p1, p2, p3)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function getCullingFunction:Int(_cull:String)
		Local cs0:Byte Ptr = _cull.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Int = .getCullingFunction(is0)
		MemFree cs0 ; delete_path is0
		Local rval:Int = _ret ; Return rval
	End Function
	Function getVertexPitchFromType:Int(_vertexType:Int)
		Local _ret:Int = .getVertexPitchFromType(_vertexType)
		Local rval:Int = _ret ; Return rval
	End Function
	Function round32:Int(_x:Float)
		Local _ret:Int = .round32(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function fast_atof:Float(_floatAsString:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Float
		If _out = Null
			_ret = .fast_atof_OVERLOAD_1(_floatAsString)
		Else
			_ret = .fast_atof_OVERLOAD_0(_floatAsString, _out)
		EndIf
		Local rval:Float = _ret ; Return rval
	End Function
	Function squareroot:Float(_f:Float)
		Local _ret:Float = .squareroot_OVERLOAD_0(_f)
		Local rval:Float = _ret ; Return rval
	End Function
	Function squarerootWithF:Double(_f:Double)
		Local _ret:Double = .squareroot_OVERLOAD_1(_f)
		Local rval:Double = _ret ; Return rval
	End Function
	Function squarerootWithInt:Int(_f:Int)
		Local _ret:Int = .squareroot_OVERLOAD_2(_f)
		Local rval:Int = _ret ; Return rval
	End Function
	Function squarerootWithLong:Long(_f:Long)
		Local _ret:Long = .squareroot_OVERLOAD_3(_f)
		Local rval:Long = _ret ; Return rval
	End Function
	Function RGB16from16:Short(_r:Short, _g:Short, _b:Short)
		Local _ret:Short = .RGB16from16(_r, _g, _b)
		Local rval:Short = _ret ; Return rval
	End Function
	Function dumpShader:String(_dest:String, _shader:Byte Ptr, _entity:Int = -2147483648)
		Local cs0:Byte Ptr = _dest.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Byte Ptr
		If _entity = -2147483648
			_ret = .dumpShader_OVERLOAD_1(is0, _shader)
		Else
			_ret = .dumpShader_OVERLOAD_0(is0, _shader, _entity)
		EndIf
		MemFree cs0 ; delete_path is0
		Local rval:String = String.FromCString(_ret) ; Return rval
	End Function
	Function strtof10:Float(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Float
		If _out = Null
			_ret = .strtof10_OVERLOAD_1(_in)
		Else
			_ret = .strtof10_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Float = _ret ; Return rval
	End Function
	Function reciprocal_squareroot:Double(_x:Double)
		Local _ret:Double = .reciprocal_squareroot_OVERLOAD_0(_x)
		Local rval:Double = _ret ; Return rval
	End Function
	Function reciprocal_squarerootWithF:Float(_f:Float)
		Local _ret:Float = .reciprocal_squareroot_OVERLOAD_1(_f)
		Local rval:Float = _ret ; Return rval
	End Function
	Function reciprocal_squarerootWithX:Int(_x:Int)
		Local _ret:Int = .reciprocal_squareroot_OVERLOAD_2(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function reciprocal:Float(_f:Float)
		Local _ret:Float = .reciprocal_OVERLOAD_0(_f)
		Local rval:Float = _ret ; Return rval
	End Function
	Function reciprocalWithF:Double(_f:Double)
		Local _ret:Double = .reciprocal_OVERLOAD_1(_f)
		Local rval:Double = _ret ; Return rval
	End Function
	Function A8R8G8B8toR5G6B5:Short(_color:Int)
		Local _ret:Short = .A8R8G8B8toR5G6B5(_color)
		Local rval:Short = _ret ; Return rval
	End Function
	Function reciprocal_approxim:Float(_f:Float)
		Local _ret:Float = .reciprocal_approxim(_f)
		Local rval:Float = _ret ; Return rval
	End Function
	Function createDeviceEx:IrrlichtDevice(_parameters:Byte Ptr)
		Local _ret:Byte Ptr = .createDeviceEx(_parameters)
		Local rval:IrrlichtDevice = IrrlichtDevice(New _IrrlichtDevice._withPtr(_ret)._withDel(IReferenceCounted_drop))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function RGBA16:Short(_r:Int, _g:Int, _b:Int, _a:Int = -2147483648)
		Local _ret:Short
		If _a = -2147483648
			_ret = .RGBA16_OVERLOAD_1(_r, _g, _b)
		Else
			_ret = .RGBA16_OVERLOAD_0(_r, _g, _b, _a)
		EndIf
		Local rval:Short = _ret ; Return rval
	End Function
	Function getBlue:Int(_color:Short)
		Local _ret:Int = .getBlue(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getDepthFunction:Byte(_string:String)
		Local cs0:Byte Ptr = _string.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Byte = .getDepthFunction(is0)
		MemFree cs0 ; delete_path is0
		Local rval:Byte = _ret ; Return rval
	End Function
	Function strtoul16:Int(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Int
		If _out = Null
			_ret = .strtoul16_OVERLOAD_1(_in)
		Else
			_ret = .strtoul16_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function fast_atof_move:Byte Ptr(_in:Byte Ptr, _result:Byte Ptr)
		Local _ret:Byte Ptr = .fast_atof_move(_in, _result)
		Local rval:Byte Ptr = _ret ; Return rval
	End Function
	Function cutFilenameExtension:Path(_dest:Path, _source:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_dest)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_source)
		Local _ret:Byte Ptr = .cutFilenameExtension(p0, p1)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function s32_clamp:Int(_value:Int, _low:Int, _high:Int)
		Local _ret:Int = .s32_clamp(_value, _low, _high)
		Local rval:Int = _ret ; Return rval
	End Function
	Function pack_textureBlendFunc:Float(_srcFact:Int, _dstFact:Int, _modulate:Int = -2147483648, _alphaSource:Int = -2147483648)
		Local _ret:Float
		If _modulate = -2147483648
			_ret = .pack_textureBlendFunc_OVERLOAD_2(_srcFact, _dstFact)
		ElseIf _alphaSource = -2147483648
			_ret = .pack_textureBlendFunc_OVERLOAD_1(_srcFact, _dstFact, _modulate)
		Else
			_ret = .pack_textureBlendFunc_OVERLOAD_0(_srcFact, _dstFact, _modulate, _alphaSource)
		EndIf
		Local rval:Float = _ret ; Return rval
	End Function
	Function getRed:Int(_color:Short)
		Local _ret:Int = .getRed(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function strtoul_prefix:Int(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Int
		If _out = Null
			_ret = .strtoul_prefix_OVERLOAD_1(_in)
		Else
			_ret = .strtoul_prefix_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function isnotzero:Int(_a:Float, _tolerance:Float = -1e100000)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .isnotzero_OVERLOAD_1(_a)
		Else
			_ret = .isnotzero_OVERLOAD_0(_a, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function ctoul16:Int(_in:Byte)
		Local _ret:Int = .ctoul16(_in)
		Local rval:Int = _ret ; Return rval
	End Function
	Function floor32:Int(_x:Float)
		Local _ret:Int = .floor32(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function A8R8G8B8toA1R5G5B5:Short(_color:Int)
		Local _ret:Short = .A8R8G8B8toA1R5G5B5(_color)
		Local rval:Short = _ret ; Return rval
	End Function
	Function isFileExtension:Int(_filename:Path, _ext0:Path, _ext1:Path, _ext2:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_ext0)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_ext1)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_ext2)
		Local _ret:Int = .isFileExtension(p0, p1, p2, p3)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getBlendFunc(_string:String, _blendfunc:Byte Ptr)
		Local cs0:Byte Ptr = _string.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		.getBlendFunc(is0, _blendfunc)
		MemFree cs0 ; delete_path is0
	End Function
	Function getModifierFunc(_fill:Byte Ptr, _string:String, _pos:Byte Ptr)
		Local cs1:Byte Ptr = _string.ToCString(), is1:Byte Ptr = new_fromCString_OVERLOAD_1(cs1)
		.getModifierFunc(_fill, is1, _pos)
		MemFree cs1 ; delete_path is1
	End Function
	Function round_:Float(_x:Float)
		Local _ret:Float = .round_(_x)
		Local rval:Float = _ret ; Return rval
	End Function
	Function deletePathFromPath:Path(_filename:Path, _pathCount:Int)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local _ret:Byte Ptr = .deletePathFromPath(p0, _pathCount)
		Local rval:Path = Path(New _Path._withPtr(_ret))
		If rval._ptr Then Return rval ; Else Return Null
	End Function
	Function radToDeg:Float(_radians:Float)
		Local _ret:Float = .radToDeg_OVERLOAD_0(_radians)
		Local rval:Float = _ret ; Return rval
	End Function
	Function radToDegWithRadians:Double(_radians:Double)
		Local _ret:Double = .radToDeg_OVERLOAD_1(_radians)
		Local rval:Double = _ret ; Return rval
	End Function
	Function setbit_cond(_state:Byte Ptr, _condition:Int, _mask:Int)
		.setbit_cond(_state, _condition, _mask)
	End Function
	Function if_c_a_else_b:Int(_condition:Int, _a:Int, _b:Int)
		Local _ret:Int = .if_c_a_else_b_OVERLOAD_0(_condition, _a, _b)
		Local rval:Int = _ret ; Return rval
	End Function
	Function if_c_a_else_bWithConditionAB:Short(_condition:Short, _a:Short, _b:Short)
		Local _ret:Short = .if_c_a_else_b_OVERLOAD_1(_condition, _a, _b)
		Local rval:Short = _ret ; Return rval
	End Function
	Function equals:Int(_a:Double, _b:Double, _tolerance:Double = -1e100000)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .equals_OVERLOAD_1(_a, _b)
		Else
			_ret = .equals_OVERLOAD_0(_a, _b, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function equalsWithAB:Int(_a:Float, _b:Float, _tolerance:Float = -1e100000)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .equals_OVERLOAD_3(_a, _b)
		Else
			_ret = .equals_OVERLOAD_2(_a, _b, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function equalsWithIntInt:Int(_a:Int, _b:Int, _tolerance:Int = -2147483648)
		Local _ret:Int
		If _tolerance = -2147483648
			_ret = .equals_OVERLOAD_5(_a, _b)
		Else
			_ret = .equals_OVERLOAD_4(_a, _b, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function equalsWithLongLong:Int(_a:Long, _b:Long, _tolerance:Long = -9223372036854775808)
		Local _ret:Int
		If _tolerance = -9223372036854775808
			_ret = .equals_OVERLOAD_9(_a, _b)
		Else
			_ret = .equals_OVERLOAD_8(_a, _b, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function if_c_a_else_0:Int(_condition:Int, _a:Int)
		Local _ret:Int = .if_c_a_else_0(_condition, _a)
		Local rval:Int = _ret ; Return rval
	End Function
	Function FR:Float(_x:Int)
		Local _ret:Float = .FR_OVERLOAD_0(_x)
		Local rval:Float = _ret ; Return rval
	End Function
	Function FRWithX:Float(_x:Int)
		Local _ret:Float = .FR_OVERLOAD_1(_x)
		Local rval:Float = _ret ; Return rval
	End Function
	Function splitFilename(_name:Path, _path:Path = Null, _filename:Path = Null, _extension:Path = Null, _make_lower:Int = -2147483648)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_name)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_path)
		Local p2:Byte Ptr = _irrlicht_Object._getPtr(_filename)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_extension)
		If _path = Null
			.splitFilename_OVERLOAD_4(p0)
		ElseIf _filename = Null
			.splitFilename_OVERLOAD_3(p0, p1)
		ElseIf _extension = Null
			.splitFilename_OVERLOAD_2(p0, p1, p2)
		ElseIf _make_lower = -2147483648
			.splitFilename_OVERLOAD_1(p0, p1, p2, p3)
		Else
			.splitFilename_OVERLOAD_0(p0, p1, p2, p3, _make_lower)
		EndIf
	End Function
	Function iszero:Int(_a:Double, _tolerance:Double = -1e100000)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .iszero_OVERLOAD_1(_a)
		Else
			_ret = .iszero_OVERLOAD_0(_a, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function iszeroWithA:Int(_a:Float, _tolerance:Float = -1e100000)
		Local _ret:Int
		If _tolerance = -1e100000
			_ret = .iszero_OVERLOAD_3(_a)
		Else
			_ret = .iszero_OVERLOAD_2(_a, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function iszeroWithInt:Int(_a:Int, _tolerance:Int = -2147483648)
		Local _ret:Int
		If _tolerance = -2147483648
			_ret = .iszero_OVERLOAD_5(_a)
		Else
			_ret = .iszero_OVERLOAD_4(_a, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function iszeroWithLong:Int(_a:Long, _tolerance:Long = -9223372036854775808)
		Local _ret:Int
		If _tolerance = -9223372036854775808
			_ret = .iszero_OVERLOAD_9(_a)
		Else
			_ret = .iszero_OVERLOAD_8(_a, _tolerance)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function unpack_textureBlendFunc(_srcFact:Int Ptr, _dstFact:Int Ptr, _modulo:Int Ptr, _alphaSource:Byte Ptr, _param:Float)
		.unpack_textureBlendFunc(_srcFact, _dstFact, _modulo, _alphaSource, _param)
	End Function
	Function strtoul8:Int(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Int
		If _out = Null
			_ret = .strtoul8_OVERLOAD_1(_in)
		Else
			_ret = .strtoul8_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function strtoul10:Int(_in:Byte Ptr, _out:Byte Ptr = Null)
		Local _ret:Int
		If _out = Null
			_ret = .strtoul10_OVERLOAD_1(_in)
		Else
			_ret = .strtoul10_OVERLOAD_0(_in, _out)
		EndIf
		Local rval:Int = _ret ; Return rval
	End Function
	Function locale_upper:Int(_x:Int)
		Local _ret:Int = .locale_upper(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function RGB16:Short(_r:Int, _g:Int, _b:Int)
		Local _ret:Short = .RGB16(_r, _g, _b)
		Local rval:Short = _ret ; Return rval
	End Function
	Function f32_max3:Float(_a:Float, _b:Float, _c:Float)
		Local _ret:Float = .f32_max3(_a, _b, _c)
		Local rval:Float = _ret ; Return rval
	End Function
	Function dumpVarGroup(_dest:String, _group:Byte Ptr, _stack:Int)
		Local cs0:Byte Ptr = _dest.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		.dumpVarGroup(is0, _group, _stack)
		MemFree cs0 ; delete_path is0
	End Function
	Function s32_min:Int(_a:Int, _b:Int)
		Local _ret:Int = .s32_min(_a, _b)
		Local rval:Int = _ret ; Return rval
	End Function
	Function isEqual:Short(_string:String, _pos:Byte Ptr, _list:Byte Ptr, _listSize:Short)
		Local cs0:Byte Ptr = _string.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Short = .isEqual(is0, _pos, _list, _listSize)
		MemFree cs0 ; delete_path is0
		Local rval:Short = _ret ; Return rval
	End Function
	Function isInSameDirectory:Int(_path:Path, _file:Path)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_path)
		Local p1:Byte Ptr = _irrlicht_Object._getPtr(_file)
		Local _ret:Int = .isInSameDirectory(p0, p1)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getAsFloat:Float(_string:String, _pos:Byte Ptr)
		Local cs0:Byte Ptr = _string.ToCString(), is0:Byte Ptr = new_fromCString_OVERLOAD_1(cs0)
		Local _ret:Float = .getAsFloat(is0, _pos)
		MemFree cs0 ; delete_path is0
		Local rval:Float = _ret ; Return rval
	End Function
	Function A1R5G5B5toR5G6B5:Short(_color:Short)
		Local _ret:Short = .A1R5G5B5toR5G6B5(_color)
		Local rval:Short = _ret ; Return rval
	End Function
	Function fract:Float(_x:Float)
		Local _ret:Float = .fract(_x)
		Local rval:Float = _ret ; Return rval
	End Function
	Function getGreen:Int(_color:Short)
		Local _ret:Int = .getGreen(_color)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getTextures(_textures:TTexArray, _name:String, _startPos:Byte Ptr, _fileSystem:IfileSystem, _driver:IvideoDriver)
		Local cs1:Byte Ptr = _name.ToCString(), is1:Byte Ptr = new_fromCString_OVERLOAD_1(cs1)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_textures)
		Local p3:Byte Ptr = _irrlicht_Object._getPtr(_fileSystem)
		Local p4:Byte Ptr = _irrlicht_Object._getPtr(_driver)
		.getTextures(p0, is1, _startPos, p3, p4)
		MemFree cs1 ; delete_path is1
	End Function
	Function locale_lower:Int(_x:Int)
		Local _ret:Int = .locale_lower(_x)
		Local rval:Int = _ret ; Return rval
	End Function
	Function getAsStringList(_list:TStringList, _max:Int, _string:String, _startPos:Byte Ptr)
		Local cs2:Byte Ptr = _string.ToCString(), is2:Byte Ptr = new_fromCString_OVERLOAD_1(cs2)
		Local p0:Byte Ptr = _irrlicht_Object._getPtr(_list)
		.getAsStringList(p0, _max, is2, _startPos)
		MemFree cs2 ; delete_path is2
	End Function
End Type


Private

Type _IreferenceCounted Extends IreferenceCounted Final ; End Type
Type _Scolor Extends Scolor Final ; End Type
Type _Scolorf Extends Scolorf Final ; End Type
Type _ScolorHsl Extends ScolorHsl Final ; End Type
Type _SmaterialLayer Extends SmaterialLayer Final ; End Type
Type _Smaterial Extends Smaterial Final ; End Type
Type _ImeshBuffer Extends ImeshBuffer Final ; End Type
Type _IvertexBuffer Extends IvertexBuffer Final ; End Type
Type _IindexBuffer Extends IindexBuffer Final ; End Type
Type _IdynamicMeshBuffer Extends IdynamicMeshBuffer Final ; End Type
Type _CvertexBuffer Extends CvertexBuffer Final ; End Type
Type _CindexBuffer Extends CindexBuffer Final ; End Type
Type _CdynamicMeshBuffer Extends CdynamicMeshBuffer Final ; End Type
Type _Imesh Extends Imesh Final ; End Type
Type _IanimatedMesh Extends IanimatedMesh Final ; End Type
Type _IanimatedMeshMd2 Extends IanimatedMeshMd2 Final ; End Type
Type _IfileReadCallBack Extends IfileReadCallBack Final ; End Type
Type _Ixmlbase Extends Ixmlbase Final ; End Type
Type _IreadFile Extends IreadFile Final ; End Type
Type _IfileList Extends IfileList Final ; End Type
Type _IfileArchive Extends IfileArchive Final ; End Type
Type _IarchiveLoader Extends IarchiveLoader Final ; End Type
Type _IfileSystem Extends IfileSystem Final ; End Type
Type _Iimage Extends Iimage Final ; End Type
Type _Itexture Extends Itexture Final ; End Type
Type _IvideoDriver Extends IvideoDriver Final ; End Type
Type _IshaderManager Extends IshaderManager Final ; End Type
Type _Quaternion Extends Quaternion Final ; End Type
Type _IanimatedMeshMd3 Extends IanimatedMeshMd3 Final ; End Type
Type _IattributeExchangingObject Extends IattributeExchangingObject Final ; End Type
Type _Ilogger Extends Ilogger Final ; End Type
Type _IeventReceiver Extends IeventReceiver Final ; End Type
Type _IsceneNodeAnimator Extends IsceneNodeAnimator Final ; End Type
Type _ItriangleSelector Extends ItriangleSelector Final ; End Type
Type _Iattributes Extends Iattributes Final ; End Type
Type _IsceneNode Extends IsceneNode Final ; End Type
Type _IboneSceneNode Extends IboneSceneNode Final ; End Type
Type _IanimationEndCallBack Extends IanimationEndCallBack Final ; End Type
Type _IanimatedMeshSceneNode Extends IanimatedMeshSceneNode Final ; End Type
Type _IbillboardSceneNode Extends IbillboardSceneNode Final ; End Type
Type _IbillboardTextSceneNode Extends IbillboardTextSceneNode Final ; End Type
Type _IcameraSceneNode Extends IcameraSceneNode Final ; End Type
Type _IcursorControl Extends IcursorControl Final ; End Type
Type _IdummyTransformationSceneNode Extends IdummyTransformationSceneNode Final ; End Type
Type _IgeometryCreator Extends IgeometryCreator Final ; End Type
Type _IgpuprogrammingServices Extends IgpuprogrammingServices Final ; End Type
Type _Iguielement Extends Iguielement Final ; End Type
Type _Iguibutton Extends Iguibutton Final ; End Type
Type _IguicheckBox Extends IguicheckBox Final ; End Type
Type _IguicolorSelectDialog Extends IguicolorSelectDialog Final ; End Type
Type _IguicomboBox Extends IguicomboBox Final ; End Type
Type _IguicontextMenu Extends IguicontextMenu Final ; End Type
Type _IguieditBox Extends IguieditBox Final ; End Type
Type _IguielementFactory Extends IguielementFactory Final ; End Type
Type _Iguiskin Extends Iguiskin Final ; End Type
Type _Iguienvironment Extends Iguienvironment Final ; End Type
Type _IguifileOpenDialog Extends IguifileOpenDialog Final ; End Type
Type _Iguifont Extends Iguifont Final ; End Type
Type _IguifontBitmap Extends IguifontBitmap Final ; End Type
Type _Iguiimage Extends Iguiimage Final ; End Type
Type _IguiinOutFader Extends IguiinOutFader Final ; End Type
Type _IguilistBox Extends IguilistBox Final ; End Type
Type _IguimeshViewer Extends IguimeshViewer Final ; End Type
Type _IguiscrollBar Extends IguiscrollBar Final ; End Type
Type _IguispinBox Extends IguispinBox Final ; End Type
Type _IguispriteBank Extends IguispriteBank Final ; End Type
Type _IguistaticText Extends IguistaticText Final ; End Type
Type _Iguitab Extends Iguitab Final ; End Type
Type _IguitabControl Extends IguitabControl Final ; End Type
Type _Iguitable Extends Iguitable Final ; End Type
Type _IguitoolBar Extends IguitoolBar Final ; End Type
Type _Iguiwindow Extends Iguiwindow Final ; End Type
Type _IguiimageList Extends IguiimageList Final ; End Type
Type _IguitreeViewNode Extends IguitreeViewNode Final ; End Type
Type _IguitreeView Extends IguitreeView Final ; End Type
Type _IimageLoader Extends IimageLoader Final ; End Type
Type _IimageWriter Extends IimageWriter Final ; End Type
Type _IlightSceneNode Extends IlightSceneNode Final ; End Type
Type _ImaterialRenderer Extends ImaterialRenderer Final ; End Type
Type _ImaterialRendererServices Extends ImaterialRendererServices Final ; End Type
Type _ImeshCache Extends ImeshCache Final ; End Type
Type _ImeshLoader Extends ImeshLoader Final ; End Type
Type _IvertexManipulator Extends IvertexManipulator Final ; End Type
Type _SvertexColorSetManipulator Extends SvertexColorSetManipulator Final ; End Type
Type _SvertexColorSetAlphaManipulator Extends SvertexColorSetAlphaManipulator Final ; End Type
Type _SvertexColorInvertManipulator Extends SvertexColorInvertManipulator Final ; End Type
Type _SvertexColorThresholdManipulator Extends SvertexColorThresholdManipulator Final ; End Type
Type _SvertexColorBrightnessManipulator Extends SvertexColorBrightnessManipulator Final ; End Type
Type _SvertexColorContrastManipulator Extends SvertexColorContrastManipulator Final ; End Type
Type _SvertexColorContrastBrightnessManipulator Extends SvertexColorContrastBrightnessManipulator Final ; End Type
Type _SvertexColorGammaManipulator Extends SvertexColorGammaManipulator Final ; End Type
Type _SvertexColorScaleManipulator Extends SvertexColorScaleManipulator Final ; End Type
Type _SvertexColorDesaturateToLightnessManipulator Extends SvertexColorDesaturateToLightnessManipulator Final ; End Type
Type _SvertexColorDesaturateToAverageManipulator Extends SvertexColorDesaturateToAverageManipulator Final ; End Type
Type _SvertexColorDesaturateToLuminanceManipulator Extends SvertexColorDesaturateToLuminanceManipulator Final ; End Type
Type _SvertexColorInterpolateLinearManipulator Extends SvertexColorInterpolateLinearManipulator Final ; End Type
Type _SvertexColorInterpolateQuadraticManipulator Extends SvertexColorInterpolateQuadraticManipulator Final ; End Type
Type _SvertexPositionScaleManipulator Extends SvertexPositionScaleManipulator Final ; End Type
Type _SvertexPositionScaleAlongNormalsManipulator Extends SvertexPositionScaleAlongNormalsManipulator Final ; End Type
Type _SvertexPositionTransformManipulator Extends SvertexPositionTransformManipulator Final ; End Type
Type _SvertexTcoordsScaleManipulator Extends SvertexTcoordsScaleManipulator Final ; End Type
Type _ImeshManipulator Extends ImeshManipulator Final ; End Type
Type _ImeshSceneNode Extends ImeshSceneNode Final ; End Type
Type _ImeshWriter Extends ImeshWriter Final ; End Type
Type _IcolladaMeshWriterProperties Extends IcolladaMeshWriterProperties Final ; End Type
Type _IcolladaMeshWriterNames Extends IcolladaMeshWriterNames Final ; End Type
Type _IcolladaMeshWriter Extends IcolladaMeshWriter Final ; End Type
Type _ImetaTriangleSelector Extends ImetaTriangleSelector Final ; End Type
Type _Iosoperator Extends Iosoperator Final ; End Type
Type _IparticleEmitter Extends IparticleEmitter Final ; End Type
Type _IparticleAnimatedMeshSceneNodeEmitter Extends IparticleAnimatedMeshSceneNodeEmitter Final ; End Type
Type _IparticleBoxEmitter Extends IparticleBoxEmitter Final ; End Type
Type _IparticleCylinderEmitter Extends IparticleCylinderEmitter Final ; End Type
Type _IparticleMeshEmitter Extends IparticleMeshEmitter Final ; End Type
Type _IparticleRingEmitter Extends IparticleRingEmitter Final ; End Type
Type _IparticleSphereEmitter Extends IparticleSphereEmitter Final ; End Type
Type _IparticleAffector Extends IparticleAffector Final ; End Type
Type _IparticleAttractionAffector Extends IparticleAttractionAffector Final ; End Type
Type _IparticleFadeOutAffector Extends IparticleFadeOutAffector Final ; End Type
Type _IparticleGravityAffector Extends IparticleGravityAffector Final ; End Type
Type _IparticleRotationAffector Extends IparticleRotationAffector Final ; End Type
Type _IparticleSystemSceneNode Extends IparticleSystemSceneNode Final ; End Type
Type _Iq3LevelMesh Extends Iq3LevelMesh Final ; End Type
Type _Irandomizer Extends Irandomizer Final ; End Type
Type _IvideoModeList Extends IvideoModeList Final ; End Type
Type _Itimer Extends Itimer Final ; End Type
Type _IrrlichtDevice Extends IrrlichtDevice Final ; End Type
Type _IsceneCollisionManager Extends IsceneCollisionManager Final ; End Type
Type _IsceneLoader Extends IsceneLoader Final ; End Type
Type _IskinnedMesh Extends IskinnedMesh Final ; End Type
Type _IsceneManager Extends IsceneManager Final ; End Type
Type _IsceneNodeAnimatorCameraFps Extends IsceneNodeAnimatorCameraFps Final ; End Type
Type _IsceneNodeAnimatorCameraMaya Extends IsceneNodeAnimatorCameraMaya Final ; End Type
Type _IcollisionCallback Extends IcollisionCallback Final ; End Type
Type _IsceneNodeAnimatorCollisionResponse Extends IsceneNodeAnimatorCollisionResponse Final ; End Type
Type _IsceneNodeAnimatorFactory Extends IsceneNodeAnimatorFactory Final ; End Type
Type _IsceneNodeFactory Extends IsceneNodeFactory Final ; End Type
Type _IsceneUserDataSerializer Extends IsceneUserDataSerializer Final ; End Type
Type _IshaderConstantSetCallBack Extends IshaderConstantSetCallBack Final ; End Type
Type _IshadowVolumeSceneNode Extends IshadowVolumeSceneNode Final ; End Type
Type _IterrainSceneNode Extends IterrainSceneNode Final ; End Type
Type _ItextSceneNode Extends ItextSceneNode Final ; End Type
Type _IvolumeLightSceneNode Extends IvolumeLightSceneNode Final ; End Type
Type _IwriteFile Extends IwriteFile Final ; End Type
Type _Ixmlwriter Extends Ixmlwriter Final ; End Type
Type _IlightManager Extends IlightManager Final ; End Type
Type _SmeshBuffer Extends SmeshBuffer Final ; End Type
Type _SmeshBufferLightMap Extends SmeshBufferLightMap Final ; End Type
Type _SmeshBufferTangents Extends SmeshBufferTangents Final ; End Type
Type _TStringList Extends TStringList Final ; End Type
Type _TTexArray Extends TTexArray Final ; End Type
Type _IsceneNodeList Extends IsceneNodeList Final ; End Type
Type _IsceneNodeAnimatorList Extends IsceneNodeAnimatorList Final ; End Type
Type _Aabbox3df Extends Aabbox3df Final ; End Type
Type _Aabbox3di Extends Aabbox3di Final ; End Type
Type _Dimension2df Extends Dimension2df Final ; End Type
Type _Dimension2du Extends Dimension2du Final ; End Type
Type _Dimension2di Extends Dimension2di Final ; End Type
Type _Line2df Extends Line2df Final ; End Type
Type _Line2di Extends Line2di Final ; End Type
Type _Line3df Extends Line3df Final ; End Type
Type _Line3di Extends Line3di Final ; End Type
Type _Matrix4 Extends Matrix4 Final ; End Type
Type _Path Extends Path Final ; End Type
Type _Plane3df Extends Plane3df Final ; End Type
Type _Plane3di Extends Plane3di Final ; End Type
Type _Rectf Extends Rectf Final ; End Type
Type _Recti Extends Recti Final ; End Type
Type _Triangle3df Extends Triangle3df Final ; End Type
Type _Triangle3di Extends Triangle3di Final ; End Type
Type _Vector2df Extends Vector2df Final ; End Type
Type _Vector2di Extends Vector2di Final ; End Type
Type _Vector3df Extends Vector3df Final ; End Type
Type _Vector3di Extends Vector3di Final ; End Type

